
EmbeddedSystems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00001156  000011ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001156  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000042a  0080011e  0080011e  00001208  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001208  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001264  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  000012a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001429  00000000  00000000  0000149c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9f  00000000  00000000  000028c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eab  00000000  00000000  00003564  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000700  00000000  00000000  00004410  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000076d  00000000  00000000  00004b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ddf  00000000  00000000  0000527d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000605c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	4e c3       	rjmp	.+1692   	; 0x6de <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	64 c5       	rjmp	.+2760   	; 0xb1a <__vector_20>
      52:	00 00       	nop
      54:	19 c5       	rjmp	.+2610   	; 0xa88 <__vector_21>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	52 c0       	rjmp	.+164    	; 0x106 <__vector_24>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e6 e5       	ldi	r30, 0x56	; 86
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 31       	cpi	r26, 0x1E	; 30
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	25 e0       	ldi	r18, 0x05	; 5
      b4:	ae e1       	ldi	r26, 0x1E	; 30
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 34       	cpi	r26, 0x48	; 72
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0f d2       	rcall	.+1054   	; 0x4e2 <main>
      c4:	0c 94 a9 08 	jmp	0x1152	; 0x1152 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <adc_init>:
        ADCSRA |= (1 << ADIE);
    }
    avg = avg / 8;
    
    return (avg & 0xffff);  // Return a 16 bit value
}
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	cd b7       	in	r28, 0x3d	; 61
      d0:	de b7       	in	r29, 0x3e	; 62
      d2:	8a e7       	ldi	r24, 0x7A	; 122
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	2a e7       	ldi	r18, 0x7A	; 122
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	27 60       	ori	r18, 0x07	; 7
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
      e4:	8a e7       	ldi	r24, 0x7A	; 122
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	2a e7       	ldi	r18, 0x7A	; 122
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	28 6c       	ori	r18, 0xC8	; 200
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	91 e0       	ldi	r25, 0x01	; 1
      fa:	77 d4       	rcall	.+2286   	; 0x9ea <uart_send_isr>
      fc:	78 d1       	rcall	.+752    	; 0x3ee <Led6_On>
      fe:	00 00       	nop
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	08 95       	ret

00000106 <__vector_24>:

ISR(ADC_vect){
     106:	1f 92       	push	r1
     108:	0f 92       	push	r0
     10a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     10e:	0f 92       	push	r0
     110:	11 24       	eor	r1, r1
     112:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     116:	0f 92       	push	r0
     118:	2f 93       	push	r18
     11a:	3f 93       	push	r19
     11c:	4f 93       	push	r20
     11e:	5f 93       	push	r21
     120:	6f 93       	push	r22
     122:	7f 93       	push	r23
     124:	8f 93       	push	r24
     126:	9f 93       	push	r25
     128:	af 93       	push	r26
     12a:	bf 93       	push	r27
     12c:	ef 93       	push	r30
     12e:	ff 93       	push	r31
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
     138:	68 97       	sbiw	r28, 0x18	; 24
     13a:	de bf       	out	0x3e, r29	; 62
     13c:	cd bf       	out	0x3d, r28	; 61
	Led2_Off();
     13e:	13 d1       	rcall	.+550    	; 0x366 <Led2_Off>
	
	uint8_t res_l = ADCL;
     140:	88 e7       	ldi	r24, 0x78	; 120
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	fc 01       	movw	r30, r24
     146:	80 81       	ld	r24, Z
     148:	89 83       	std	Y+1, r24	; 0x01
	uint8_t res_h = ADCH;
     14a:	89 e7       	ldi	r24, 0x79	; 121
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	fc 01       	movw	r30, r24
     150:	80 81       	ld	r24, Z
     152:	8a 83       	std	Y+2, r24	; 0x02
    uint16_t res = res_l + (res_h << 8);
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	28 2f       	mov	r18, r24
     158:	30 e0       	ldi	r19, 0x00	; 0
     15a:	8a 81       	ldd	r24, Y+2	; 0x02
     15c:	88 2f       	mov	r24, r24
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	98 2f       	mov	r25, r24
     162:	88 27       	eor	r24, r24
     164:	82 0f       	add	r24, r18
     166:	93 1f       	adc	r25, r19
     168:	9c 83       	std	Y+4, r25	; 0x04
     16a:	8b 83       	std	Y+3, r24	; 0x03
            temp_index = 0;
            uart_success = 1;
        }
    }*/
    char str[20];
    sprintf(str, "Res: %d\n", res);
     16c:	8c 81       	ldd	r24, Y+4	; 0x04
     16e:	8f 93       	push	r24
     170:	8b 81       	ldd	r24, Y+3	; 0x03
     172:	8f 93       	push	r24
     174:	85 e1       	ldi	r24, 0x15	; 21
     176:	91 e0       	ldi	r25, 0x01	; 1
     178:	89 2f       	mov	r24, r25
     17a:	8f 93       	push	r24
     17c:	85 e1       	ldi	r24, 0x15	; 21
     17e:	91 e0       	ldi	r25, 0x01	; 1
     180:	8f 93       	push	r24
     182:	ce 01       	movw	r24, r28
     184:	05 96       	adiw	r24, 0x05	; 5
     186:	29 2f       	mov	r18, r25
     188:	2f 93       	push	r18
     18a:	8f 93       	push	r24
     18c:	07 d5       	rcall	.+2574   	; 0xb9c <sprintf>
     18e:	0f 90       	pop	r0
     190:	0f 90       	pop	r0
     192:	0f 90       	pop	r0
     194:	0f 90       	pop	r0
     196:	0f 90       	pop	r0
     198:	0f 90       	pop	r0
    uart_send_isr(str);
     19a:	ce 01       	movw	r24, r28
     19c:	05 96       	adiw	r24, 0x05	; 5
     19e:	25 d4       	rcall	.+2122   	; 0x9ea <uart_send_isr>
    
    switch (ADMUX & (1 << MUX0)) {
     1a0:	8c e7       	ldi	r24, 0x7C	; 124
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	fc 01       	movw	r30, r24
     1a6:	80 81       	ld	r24, Z
     1a8:	88 2f       	mov	r24, r24
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	81 70       	andi	r24, 0x01	; 1
     1ae:	99 27       	eor	r25, r25
     1b0:	00 97       	sbiw	r24, 0x00	; 0
     1b2:	19 f0       	breq	.+6      	; 0x1ba <__vector_24+0xb4>
     1b4:	01 97       	sbiw	r24, 0x01	; 1
                Led4_Off();
            }
            break;
            
        default:
            break;
     1b6:	79 f1       	breq	.+94     	; 0x216 <__vector_24+0x110>
    sprintf(str, "Res: %d\n", res);
    uart_send_isr(str);
    
    switch (ADMUX & (1 << MUX0)) {
        case 0:
			Led7_On();
     1b8:	5c c0       	rjmp	.+184    	; 0x272 <__vector_24+0x16c>
     1ba:	2a d1       	rcall	.+596    	; 0x410 <Led7_On>
            if (index_LM35 == 42) {
     1bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1c0:	8a 32       	cpi	r24, 0x2A	; 42
                index_LM35 = 0; // Trash first conversion
     1c2:	21 f4       	brne	.+8      	; 0x1cc <__vector_24+0xc6>
     1c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
                Led4_On();
     1c8:	df d0       	rcall	.+446    	; 0x388 <Led4_On>
            }else {
                ADMUX |= (1 << MUX0);
                index_LM35 = 42;
                Led4_Off();
            }
            break;
     1ca:	53 c0       	rjmp	.+166    	; 0x272 <__vector_24+0x16c>
        case 0:
			Led7_On();
            if (index_LM35 == 42) {
                index_LM35 = 0; // Trash first conversion
                Led4_On();
            }else if (index_LM35 >= 0 && index_LM35 <= 7) {
     1cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1d0:	88 30       	cpi	r24, 0x08	; 8
     1d2:	98 f4       	brcc	.+38     	; 0x1fa <__vector_24+0xf4>
                LM35_Array[index_LM35] = res;
     1d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1d8:	88 2f       	mov	r24, r24
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	88 0f       	add	r24, r24
     1de:	99 1f       	adc	r25, r25
     1e0:	82 5e       	subi	r24, 0xE2	; 226
     1e2:	9e 4f       	sbci	r25, 0xFE	; 254
     1e4:	2b 81       	ldd	r18, Y+3	; 0x03
     1e6:	3c 81       	ldd	r19, Y+4	; 0x04
     1e8:	fc 01       	movw	r30, r24
     1ea:	31 83       	std	Z+1, r19	; 0x01
     1ec:	20 83       	st	Z, r18
                index_LM35++;
     1ee:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1f2:	8f 5f       	subi	r24, 0xFF	; 255
     1f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
            }else {
                ADMUX |= (1 << MUX0);
                index_LM35 = 42;
                Led4_Off();
            }
            break;
     1f8:	3c c0       	rjmp	.+120    	; 0x272 <__vector_24+0x16c>
                Led4_On();
            }else if (index_LM35 >= 0 && index_LM35 <= 7) {
                LM35_Array[index_LM35] = res;
                index_LM35++;
            }else {
                ADMUX |= (1 << MUX0);
     1fa:	8c e7       	ldi	r24, 0x7C	; 124
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	2c e7       	ldi	r18, 0x7C	; 124
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	f9 01       	movw	r30, r18
     204:	20 81       	ld	r18, Z
     206:	21 60       	ori	r18, 0x01	; 1
     208:	fc 01       	movw	r30, r24
                index_LM35 = 42;
     20a:	20 83       	st	Z, r18
     20c:	8a e2       	ldi	r24, 0x2A	; 42
                Led4_Off();
     20e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
            }
            break;
            
        case 1:
            Led8_On();
     212:	cb d0       	rcall	.+406    	; 0x3aa <Led4_Off>
     214:	2e c0       	rjmp	.+92     	; 0x272 <__vector_24+0x16c>
            if (index_Poti == 42) {
     216:	0d d1       	rcall	.+538    	; 0x432 <Led8_On>
     218:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     21c:	8a 32       	cpi	r24, 0x2A	; 42
                Led5_On();
     21e:	21 f4       	brne	.+8      	; 0x228 <__vector_24+0x122>
     220:	d5 d0       	rcall	.+426    	; 0x3cc <Led5_On>
                index_Poti = 0; // Trash first conversion
     222:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <index_Poti>
            }else {
                ADMUX &= ~(1 << MUX0);
                index_Poti = 42;
                Led4_Off();
            }
            break;
     226:	24 c0       	rjmp	.+72     	; 0x270 <__vector_24+0x16a>
        case 1:
            Led8_On();
            if (index_Poti == 42) {
                Led5_On();
                index_Poti = 0; // Trash first conversion
            }else if (index_Poti >= 0 && index_Poti <= 7) {
     228:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     22c:	88 30       	cpi	r24, 0x08	; 8
     22e:	98 f4       	brcc	.+38     	; 0x256 <__vector_24+0x150>
                Poti_Array[index_Poti] = res;
     230:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     234:	88 2f       	mov	r24, r24
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	88 0f       	add	r24, r24
     23a:	99 1f       	adc	r25, r25
     23c:	82 5d       	subi	r24, 0xD2	; 210
     23e:	9e 4f       	sbci	r25, 0xFE	; 254
     240:	2b 81       	ldd	r18, Y+3	; 0x03
     242:	3c 81       	ldd	r19, Y+4	; 0x04
     244:	fc 01       	movw	r30, r24
     246:	31 83       	std	Z+1, r19	; 0x01
     248:	20 83       	st	Z, r18
                index_Poti++;
     24a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     24e:	8f 5f       	subi	r24, 0xFF	; 255
     250:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <index_Poti>
            }else {
                ADMUX &= ~(1 << MUX0);
                index_Poti = 42;
                Led4_Off();
            }
            break;
     254:	0d c0       	rjmp	.+26     	; 0x270 <__vector_24+0x16a>
                index_Poti = 0; // Trash first conversion
            }else if (index_Poti >= 0 && index_Poti <= 7) {
                Poti_Array[index_Poti] = res;
                index_Poti++;
            }else {
                ADMUX &= ~(1 << MUX0);
     256:	8c e7       	ldi	r24, 0x7C	; 124
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	2c e7       	ldi	r18, 0x7C	; 124
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	f9 01       	movw	r30, r18
     260:	20 81       	ld	r18, Z
     262:	2e 7f       	andi	r18, 0xFE	; 254
     264:	fc 01       	movw	r30, r24
                index_Poti = 42;
     266:	20 83       	st	Z, r18
     268:	8a e2       	ldi	r24, 0x2A	; 42
     26a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <index_Poti>
                Led4_Off();
     26e:	9d d0       	rcall	.+314    	; 0x3aa <Led4_Off>
            }
            break;
     270:	00 00       	nop
        default:
            break;
    }
    
    // ADCSRA |= (1 << ADSC);   temporary moved lol
}
     272:	00 00       	nop
     274:	68 96       	adiw	r28, 0x18	; 24
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	f8 94       	cli
     27a:	de bf       	out	0x3e, r29	; 62
     27c:	0f be       	out	0x3f, r0	; 63
     27e:	cd bf       	out	0x3d, r28	; 61
     280:	df 91       	pop	r29
     282:	cf 91       	pop	r28
     284:	ff 91       	pop	r31
     286:	ef 91       	pop	r30
     288:	bf 91       	pop	r27
     28a:	af 91       	pop	r26
     28c:	9f 91       	pop	r25
     28e:	8f 91       	pop	r24
     290:	7f 91       	pop	r23
     292:	6f 91       	pop	r22
     294:	5f 91       	pop	r21
     296:	4f 91       	pop	r20
     298:	3f 91       	pop	r19
     29a:	2f 91       	pop	r18
     29c:	0f 90       	pop	r0
     29e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     2a2:	0f 90       	pop	r0
     2a4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <Led_init>:
void Led7_On(void) {
    PORTB |= (1 << 1);
}
void Led7_Off(void) {
    PORTB &= ~(1 << 1);
}
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	1f 92       	push	r1
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
     2b8:	89 83       	std	Y+1, r24	; 0x01
     2ba:	84 e2       	ldi	r24, 0x24	; 36
     2bc:	90 e0       	ldi	r25, 0x00	; 0
     2be:	2f ef       	ldi	r18, 0xFF	; 255
     2c0:	fc 01       	movw	r30, r24
     2c2:	20 83       	st	Z, r18
     2c4:	85 e2       	ldi	r24, 0x25	; 37
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	10 82       	st	Z, r1
     2cc:	89 81       	ldd	r24, Y+1	; 0x01
     2ce:	88 23       	and	r24, r24
     2d0:	91 f0       	breq	.+36     	; 0x2f6 <Led_init+0x48>
     2d2:	8a e2       	ldi	r24, 0x2A	; 42
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	2a e2       	ldi	r18, 0x2A	; 42
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	f9 01       	movw	r30, r18
     2dc:	20 81       	ld	r18, Z
     2de:	2f 61       	ori	r18, 0x1F	; 31
     2e0:	fc 01       	movw	r30, r24
     2e2:	20 83       	st	Z, r18
     2e4:	8b e2       	ldi	r24, 0x2B	; 43
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	2b e2       	ldi	r18, 0x2B	; 43
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	f9 01       	movw	r30, r18
     2ee:	20 81       	ld	r18, Z
     2f0:	20 7e       	andi	r18, 0xE0	; 224
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18
     2f6:	00 00       	nop
     2f8:	0f 90       	pop	r0
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <Led1_On>:
     300:	cf 93       	push	r28
     302:	df 93       	push	r29
     304:	cd b7       	in	r28, 0x3d	; 61
     306:	de b7       	in	r29, 0x3e	; 62
     308:	85 e2       	ldi	r24, 0x25	; 37
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	25 e2       	ldi	r18, 0x25	; 37
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	f9 01       	movw	r30, r18
     312:	20 81       	ld	r18, Z
     314:	20 68       	ori	r18, 0x80	; 128
     316:	fc 01       	movw	r30, r24
     318:	20 83       	st	Z, r18
     31a:	00 00       	nop
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	08 95       	ret

00000322 <Led1_Off>:
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
     32a:	85 e2       	ldi	r24, 0x25	; 37
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	25 e2       	ldi	r18, 0x25	; 37
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	f9 01       	movw	r30, r18
     334:	20 81       	ld	r18, Z
     336:	2f 77       	andi	r18, 0x7F	; 127
     338:	fc 01       	movw	r30, r24
     33a:	20 83       	st	Z, r18
     33c:	00 00       	nop
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <Led2_On>:
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	85 e2       	ldi	r24, 0x25	; 37
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	25 e2       	ldi	r18, 0x25	; 37
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	f9 01       	movw	r30, r18
     356:	20 81       	ld	r18, Z
     358:	20 64       	ori	r18, 0x40	; 64
     35a:	fc 01       	movw	r30, r24
     35c:	20 83       	st	Z, r18
     35e:	00 00       	nop
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	08 95       	ret

00000366 <Led2_Off>:
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	cd b7       	in	r28, 0x3d	; 61
     36c:	de b7       	in	r29, 0x3e	; 62
     36e:	85 e2       	ldi	r24, 0x25	; 37
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	25 e2       	ldi	r18, 0x25	; 37
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	f9 01       	movw	r30, r18
     378:	20 81       	ld	r18, Z
     37a:	2f 7b       	andi	r18, 0xBF	; 191
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18
     380:	00 00       	nop
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	08 95       	ret

00000388 <Led4_On>:
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	cd b7       	in	r28, 0x3d	; 61
     38e:	de b7       	in	r29, 0x3e	; 62
     390:	85 e2       	ldi	r24, 0x25	; 37
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	25 e2       	ldi	r18, 0x25	; 37
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	f9 01       	movw	r30, r18
     39a:	20 81       	ld	r18, Z
     39c:	20 61       	ori	r18, 0x10	; 16
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18
     3a2:	00 00       	nop
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <Led4_Off>:
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	cd b7       	in	r28, 0x3d	; 61
     3b0:	de b7       	in	r29, 0x3e	; 62
     3b2:	85 e2       	ldi	r24, 0x25	; 37
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	25 e2       	ldi	r18, 0x25	; 37
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	f9 01       	movw	r30, r18
     3bc:	20 81       	ld	r18, Z
     3be:	2f 7e       	andi	r18, 0xEF	; 239
     3c0:	fc 01       	movw	r30, r24
     3c2:	20 83       	st	Z, r18
     3c4:	00 00       	nop
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	08 95       	ret

000003cc <Led5_On>:
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	cd b7       	in	r28, 0x3d	; 61
     3d2:	de b7       	in	r29, 0x3e	; 62
     3d4:	85 e2       	ldi	r24, 0x25	; 37
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	25 e2       	ldi	r18, 0x25	; 37
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	f9 01       	movw	r30, r18
     3de:	20 81       	ld	r18, Z
     3e0:	28 60       	ori	r18, 0x08	; 8
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
     3e6:	00 00       	nop
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <Led6_On>:
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	85 e2       	ldi	r24, 0x25	; 37
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	25 e2       	ldi	r18, 0x25	; 37
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	f9 01       	movw	r30, r18
     400:	20 81       	ld	r18, Z
     402:	24 60       	ori	r18, 0x04	; 4
     404:	fc 01       	movw	r30, r24
     406:	20 83       	st	Z, r18
     408:	00 00       	nop
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	08 95       	ret

00000410 <Led7_On>:
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
     414:	cd b7       	in	r28, 0x3d	; 61
     416:	de b7       	in	r29, 0x3e	; 62
     418:	85 e2       	ldi	r24, 0x25	; 37
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	25 e2       	ldi	r18, 0x25	; 37
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	f9 01       	movw	r30, r18
     422:	20 81       	ld	r18, Z
     424:	22 60       	ori	r18, 0x02	; 2
     426:	fc 01       	movw	r30, r24
     428:	20 83       	st	Z, r18
     42a:	00 00       	nop
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	08 95       	ret

00000432 <Led8_On>:

/**
led8 - ioB0
*/
void Led8_On(void) {
     432:	cf 93       	push	r28
     434:	df 93       	push	r29
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1 << 0);
     43a:	85 e2       	ldi	r24, 0x25	; 37
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	25 e2       	ldi	r18, 0x25	; 37
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	f9 01       	movw	r30, r18
     444:	20 81       	ld	r18, Z
     446:	21 60       	ori	r18, 0x01	; 1
     448:	fc 01       	movw	r30, r24
     44a:	20 83       	st	Z, r18
}
     44c:	00 00       	nop
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	08 95       	ret

00000454 <Taster_init>:
 ---------------------
 - DDR Reg has to be set to 0
 - PORT Reg has to be set to 1
 -> Pin is input with pull-up
 */
void Taster_init() {
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
    
    // set to inputs
    DDRC &= ~(1 << 2);
     45c:	87 e2       	ldi	r24, 0x27	; 39
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	27 e2       	ldi	r18, 0x27	; 39
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	f9 01       	movw	r30, r18
     466:	20 81       	ld	r18, Z
     468:	2b 7f       	andi	r18, 0xFB	; 251
     46a:	fc 01       	movw	r30, r24
     46c:	20 83       	st	Z, r18
    DDRD &= ~( (1 << 7) | (1 << 6) | (1 << 5) );
     46e:	8a e2       	ldi	r24, 0x2A	; 42
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	2a e2       	ldi	r18, 0x2A	; 42
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	f9 01       	movw	r30, r18
     478:	20 81       	ld	r18, Z
     47a:	2f 71       	andi	r18, 0x1F	; 31
     47c:	fc 01       	movw	r30, r24
     47e:	20 83       	st	Z, r18
    
    // enable pull-up
    PORTC |= (1 << 2);
     480:	88 e2       	ldi	r24, 0x28	; 40
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	28 e2       	ldi	r18, 0x28	; 40
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	f9 01       	movw	r30, r18
     48a:	20 81       	ld	r18, Z
     48c:	24 60       	ori	r18, 0x04	; 4
     48e:	fc 01       	movw	r30, r24
     490:	20 83       	st	Z, r18
    PORTD |= (1 << 7) | (1 << 6) | (1 << 5);
     492:	8b e2       	ldi	r24, 0x2B	; 43
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	2b e2       	ldi	r18, 0x2B	; 43
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	f9 01       	movw	r30, r18
     49c:	20 81       	ld	r18, Z
     49e:	20 6e       	ori	r18, 0xE0	; 224
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
}
     4a4:	00 00       	nop
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	08 95       	ret

000004ac <Taster1_get>:

/**
 Taster1 - ioD7
 */
uint8_t Taster1_get(void) {
     4ac:	cf 93       	push	r28
     4ae:	df 93       	push	r29
     4b0:	00 d0       	rcall	.+0      	; 0x4b2 <Taster1_get+0x6>
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62
    int state = PIND;
     4b6:	89 e2       	ldi	r24, 0x29	; 41
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	fc 01       	movw	r30, r24
     4bc:	80 81       	ld	r24, Z
     4be:	88 2f       	mov	r24, r24
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	9a 83       	std	Y+2, r25	; 0x02
     4c4:	89 83       	std	Y+1, r24	; 0x01
    if ( (state & (1<<7)) == 0 ) {
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ca:	80 78       	andi	r24, 0x80	; 128
     4cc:	99 27       	eor	r25, r25
     4ce:	89 2b       	or	r24, r25
     4d0:	11 f4       	brne	.+4      	; 0x4d6 <Taster1_get+0x2a>
        return TASTER_RETURN_VALUE_LOW;
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	01 c0       	rjmp	.+2      	; 0x4d8 <Taster1_get+0x2c>
    } else {
        return TASTER_RETURN_VALUE_HIGH;
     4d6:	80 e0       	ldi	r24, 0x00	; 0
    }
}
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	08 95       	ret

000004e2 <main>:
#include <avr/interrupt.h>
#include "adc/adc.h"

#define CLK_F_MHZ 16

int main(void) {
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	cd b7       	in	r28, 0x3d	; 61
     4e8:	de b7       	in	r29, 0x3e	; 62
     4ea:	c7 57       	subi	r28, 0x77	; 119
     4ec:	d1 09       	sbc	r29, r1
     4ee:	0f b6       	in	r0, 0x3f	; 63
     4f0:	f8 94       	cli
     4f2:	de bf       	out	0x3e, r29	; 62
     4f4:	0f be       	out	0x3f, r0	; 63
     4f6:	cd bf       	out	0x3d, r28	; 61
	
    cli();
     4f8:	f8 94       	cli
    Led_init(0);	// Don't set LEDs at PORTD
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	d8 de       	rcall	.-592    	; 0x2ae <Led_init>
	Taster_init();
     4fe:	aa df       	rcall	.-172    	; 0x454 <Taster_init>
    Timer_init(CLK_F_MHZ); // Init timer with 16MHZ clock
     500:	80 e1       	ldi	r24, 0x10	; 16
	uart_init_isr();
     502:	42 d0       	rcall	.+132    	; 0x588 <Timer_init>
    adc_init();
     504:	57 d2       	rcall	.+1198   	; 0x9b4 <uart_init_isr>
     506:	e1 dd       	rcall	.-1086   	; 0xca <adc_init>
	sei();
     508:	78 94       	sei
    
    uint16_t timeVarMain = Timer_getTick();
     50a:	d5 d0       	rcall	.+426    	; 0x6b6 <Timer_getTick>
     50c:	9a 83       	std	Y+2, r25	; 0x02
     50e:	89 83       	std	Y+1, r24	; 0x01
     510:	22 e3       	ldi	r18, 0x32	; 50
    char data_s;
    char data[50] = {0};
     512:	ce 01       	movw	r24, r28
     514:	05 96       	adiw	r24, 0x05	; 5
     516:	fc 01       	movw	r30, r24
     518:	32 2f       	mov	r19, r18
     51a:	11 92       	st	Z+, r1
     51c:	3a 95       	dec	r19
     51e:	e9 f7       	brne	.-6      	; 0x51a <main+0x38>
    int i = 0;
     520:	1c 82       	std	Y+4, r1	; 0x04
     522:	1b 82       	std	Y+3, r1	; 0x03
	char str[65];
	
    while (1) {
        
        if (Taster1_get()) {
     524:	c3 df       	rcall	.-122    	; 0x4ac <Taster1_get>
     526:	88 23       	and	r24, r24
     528:	99 f0       	breq	.+38     	; 0x550 <main+0x6e>
     52a:	0c df       	rcall	.-488    	; 0x344 <Led2_On>
			Led2_On();
     52c:	8a e7       	ldi	r24, 0x7A	; 122
     52e:	90 e0       	ldi	r25, 0x00	; 0
            ADCSRA |= (1 << ADSC);
     530:	2a e7       	ldi	r18, 0x7A	; 122
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	f9 01       	movw	r30, r18
     536:	20 81       	ld	r18, Z
     538:	20 64       	ori	r18, 0x40	; 64
     53a:	fc 01       	movw	r30, r24
     53c:	20 83       	st	Z, r18
     53e:	8a e7       	ldi	r24, 0x7A	; 122
     540:	90 e0       	ldi	r25, 0x00	; 0
			ADCSRA |= (1 << ADIE); // ADC interrupt
     542:	2a e7       	ldi	r18, 0x7A	; 122
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	f9 01       	movw	r30, r18
     548:	20 81       	ld	r18, Z
     54a:	28 60       	ori	r18, 0x08	; 8
     54c:	fc 01       	movw	r30, r24
     54e:	20 83       	st	Z, r18
     550:	b2 d0       	rcall	.+356    	; 0x6b6 <Timer_getTick>
        }
        
        if((Timer_getTick() - timeVarMain) >= 500){
     552:	9c 01       	movw	r18, r24
     554:	89 81       	ldd	r24, Y+1	; 0x01
     556:	9a 81       	ldd	r25, Y+2	; 0x02
     558:	a9 01       	movw	r20, r18
     55a:	48 1b       	sub	r20, r24
     55c:	59 0b       	sbc	r21, r25
     55e:	ca 01       	movw	r24, r20
     560:	84 3f       	cpi	r24, 0xF4	; 244
     562:	91 40       	sbci	r25, 0x01	; 1
     564:	f8 f2       	brcs	.-66     	; 0x524 <main+0x42>
            timeVarMain = Timer_getTick();
     566:	a7 d0       	rcall	.+334    	; 0x6b6 <Timer_getTick>
     568:	9a 83       	std	Y+2, r25	; 0x02
     56a:	89 83       	std	Y+1, r24	; 0x01
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
            
            if ( i == 0){
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	89 2b       	or	r24, r25
     572:	31 f4       	brne	.+12     	; 0x580 <main+0x9e>
				Led1_On();
     574:	c5 de       	rcall	.-630    	; 0x300 <Led1_On>
     576:	81 e0       	ldi	r24, 0x01	; 1
				i = 1;
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	9c 83       	std	Y+4, r25	; 0x04
     57c:	8b 83       	std	Y+3, r24	; 0x03
     57e:	d2 cf       	rjmp	.-92     	; 0x524 <main+0x42>
     580:	d0 de       	rcall	.-608    	; 0x322 <Led1_Off>
			}else  {
				Led1_Off();
     582:	1c 82       	std	Y+4, r1	; 0x04
     584:	1b 82       	std	Y+3, r1	; 0x03
				i = 0;
     586:	ce cf       	rjmp	.-100    	; 0x524 <main+0x42>

00000588 <Timer_init>:
     588:	cf 93       	push	r28
            }
        }*/
        
        //trafficLight(0);
        //playground();
    }
     58a:	df 93       	push	r29
    }
    
    TIMSK0 &= ~(1 << OCIE0B);   // disable Output Compare Match B Interrupt
    TIMSK0 |= (1 << OCIE0A);    // enable Output Compare Match A Interrupt
    TIMSK0 &= ~(1 << TOIE0);    // disable timer overflow interrupt
}
     58c:	1f 92       	push	r1
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
     592:	89 83       	std	Y+1, r24	; 0x01
     594:	89 81       	ldd	r24, Y+1	; 0x01
     596:	88 2f       	mov	r24, r24
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	05 d0       	rcall	.+10     	; 0x5a6 <Timer_init_withoutStruct>
     59c:	00 00       	nop
     59e:	0f 90       	pop	r0
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <Timer_init_withoutStruct>:

void Timer_init_withoutStruct(uint8_t clockFreqMhz) {
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	1f 92       	push	r1
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
     5b0:	89 83       	std	Y+1, r24	; 0x01
    // datasheet page 97
    // set mode to clear timer on compare (CTC)
    TCCR0B &= ~(1 << WGM02);
     5b2:	85 e4       	ldi	r24, 0x45	; 69
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	25 e4       	ldi	r18, 0x45	; 69
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	f9 01       	movw	r30, r18
     5bc:	20 81       	ld	r18, Z
     5be:	27 7f       	andi	r18, 0xF7	; 247
     5c0:	fc 01       	movw	r30, r24
     5c2:	20 83       	st	Z, r18
    TCCR0A |= (1 << WGM01);
     5c4:	84 e4       	ldi	r24, 0x44	; 68
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	24 e4       	ldi	r18, 0x44	; 68
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	f9 01       	movw	r30, r18
     5ce:	20 81       	ld	r18, Z
     5d0:	22 60       	ori	r18, 0x02	; 2
     5d2:	fc 01       	movw	r30, r24
     5d4:	20 83       	st	Z, r18
    TCCR0A &= ~(1 << WGM00);
     5d6:	84 e4       	ldi	r24, 0x44	; 68
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	24 e4       	ldi	r18, 0x44	; 68
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	f9 01       	movw	r30, r18
     5e0:	20 81       	ld	r18, Z
     5e2:	2e 7f       	andi	r18, 0xFE	; 254
     5e4:	fc 01       	movw	r30, r24
     5e6:	20 83       	st	Z, r18
    
    
    switch (clockFreqMhz) {
     5e8:	89 81       	ldd	r24, Y+1	; 0x01
     5ea:	88 2f       	mov	r24, r24
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	40 97       	sbiw	r24, 0x10	; 16
     5f0:	09 f5       	brne	.+66     	; 0x634 <Timer_init_withoutStruct+0x8e>
        case 16:
            // extern osc (16 MHZ)
            
            // set OCR0A-reg (top value of timer)
            OCR0A = 249;   // dez 249; range 0 - 249 -> 250 cycles till interrupt
     5f2:	87 e4       	ldi	r24, 0x47	; 71
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	29 ef       	ldi	r18, 0xF9	; 249
     5f8:	fc 01       	movw	r30, r24
     5fa:	20 83       	st	Z, r18
            
            // set prescaler to 1/64
            TCCR0B &= ~(1 << CS02);
     5fc:	85 e4       	ldi	r24, 0x45	; 69
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	25 e4       	ldi	r18, 0x45	; 69
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	f9 01       	movw	r30, r18
     606:	20 81       	ld	r18, Z
     608:	2b 7f       	andi	r18, 0xFB	; 251
     60a:	fc 01       	movw	r30, r24
     60c:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS01);
     60e:	85 e4       	ldi	r24, 0x45	; 69
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	25 e4       	ldi	r18, 0x45	; 69
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	f9 01       	movw	r30, r18
     618:	20 81       	ld	r18, Z
     61a:	22 60       	ori	r18, 0x02	; 2
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS00);
     620:	85 e4       	ldi	r24, 0x45	; 69
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	25 e4       	ldi	r18, 0x45	; 69
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	f9 01       	movw	r30, r18
     62a:	20 81       	ld	r18, Z
     62c:	21 60       	ori	r18, 0x01	; 1
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18
            break;
     632:	21 c0       	rjmp	.+66     	; 0x676 <Timer_init_withoutStruct+0xd0>
            
        default:
            // inter osc (8 MHZ divided by 8 -> 1 MHZ clock)
            
            // set OCR0A-reg (top value of timer)
            OCR0A = 0x7C;   // dez 124; range 0 - 124 -> 125 cycles till interrupt
     634:	87 e4       	ldi	r24, 0x47	; 71
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	2c e7       	ldi	r18, 0x7C	; 124
     63a:	fc 01       	movw	r30, r24
     63c:	20 83       	st	Z, r18
            
            // set prescaler to 1/8
            TCCR0B &= ~(1 << CS02);
     63e:	85 e4       	ldi	r24, 0x45	; 69
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	25 e4       	ldi	r18, 0x45	; 69
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	f9 01       	movw	r30, r18
     648:	20 81       	ld	r18, Z
     64a:	2b 7f       	andi	r18, 0xFB	; 251
     64c:	fc 01       	movw	r30, r24
     64e:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS01);
     650:	85 e4       	ldi	r24, 0x45	; 69
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	25 e4       	ldi	r18, 0x45	; 69
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	f9 01       	movw	r30, r18
     65a:	20 81       	ld	r18, Z
     65c:	22 60       	ori	r18, 0x02	; 2
     65e:	fc 01       	movw	r30, r24
     660:	20 83       	st	Z, r18
            TCCR0B &= ~(1 << CS00);
     662:	85 e4       	ldi	r24, 0x45	; 69
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	25 e4       	ldi	r18, 0x45	; 69
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	f9 01       	movw	r30, r18
     66c:	20 81       	ld	r18, Z
     66e:	2e 7f       	andi	r18, 0xFE	; 254
     670:	fc 01       	movw	r30, r24
     672:	20 83       	st	Z, r18
            break;
     674:	00 00       	nop
    }
    
    TIMSK0 &= ~(1 << OCIE0B);   // disable Output Compare Match B Interrupt
     676:	8e e6       	ldi	r24, 0x6E	; 110
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	2e e6       	ldi	r18, 0x6E	; 110
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	f9 01       	movw	r30, r18
     680:	20 81       	ld	r18, Z
     682:	2b 7f       	andi	r18, 0xFB	; 251
     684:	fc 01       	movw	r30, r24
     686:	20 83       	st	Z, r18
    TIMSK0 |= (1 << OCIE0A);    // enable Output Compare Match A Interrupt
     688:	8e e6       	ldi	r24, 0x6E	; 110
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	2e e6       	ldi	r18, 0x6E	; 110
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	f9 01       	movw	r30, r18
     692:	20 81       	ld	r18, Z
     694:	22 60       	ori	r18, 0x02	; 2
     696:	fc 01       	movw	r30, r24
     698:	20 83       	st	Z, r18
    TIMSK0 &= ~(1 << TOIE0);    // disable timer overflow interrupt
     69a:	8e e6       	ldi	r24, 0x6E	; 110
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	2e e6       	ldi	r18, 0x6E	; 110
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	f9 01       	movw	r30, r18
     6a4:	20 81       	ld	r18, Z
     6a6:	2e 7f       	andi	r18, 0xFE	; 254
     6a8:	fc 01       	movw	r30, r24
     6aa:	20 83       	st	Z, r18
}
     6ac:	00 00       	nop
     6ae:	0f 90       	pop	r0
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	08 95       	ret

000006b6 <Timer_getTick>:

uint16_t Timer_getTick() {
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	00 d0       	rcall	.+0      	; 0x6bc <Timer_getTick+0x6>
     6bc:	cd b7       	in	r28, 0x3d	; 61
     6be:	de b7       	in	r29, 0x3e	; 62
    // disable global interrupt
    cli();
     6c0:	f8 94       	cli
    
    // store timer_count in a temp int that can't get changed by ISR
    uint16_t temp_timer_count = timer_count;
     6c2:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <timer_count>
     6c6:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <timer_count+0x1>
     6ca:	9a 83       	std	Y+2, r25	; 0x02
     6cc:	89 83       	std	Y+1, r24	; 0x01
    
    // enable global interrupt
    sei();
     6ce:	78 94       	sei

    return temp_timer_count;
     6d0:	89 81       	ldd	r24, Y+1	; 0x01
     6d2:	9a 81       	ldd	r25, Y+2	; 0x02
}
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <__vector_16>:
 ( not used atm)
 Timer compare A interrput:
 - increase timer_count
 - if timer_count is at max of uint16, set it to 0
 */
ISR(TIMER0_COMPA_vect){
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     6e6:	0f 92       	push	r0
     6e8:	11 24       	eor	r1, r1
     6ea:	8f 93       	push	r24
     6ec:	9f 93       	push	r25
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
    timer_count++;
     6f6:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <timer_count>
     6fa:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <timer_count+0x1>
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <timer_count+0x1>
     704:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <timer_count>
}
     708:	00 00       	nop
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	9f 91       	pop	r25
     710:	8f 91       	pop	r24
     712:	0f 90       	pop	r0
     714:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     718:	0f 90       	pop	r0
     71a:	1f 90       	pop	r1
     71c:	18 95       	reti

0000071e <buff_put>:
        // Return byte
        return pByte;
    }else {
        return 0;
    }
}
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	00 d0       	rcall	.+0      	; 0x724 <buff_put+0x6>
     724:	1f 92       	push	r1
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	89 83       	std	Y+1, r24	; 0x01
     72c:	7b 83       	std	Y+3, r23	; 0x03
     72e:	6a 83       	std	Y+2, r22	; 0x02
     730:	81 ec       	ldi	r24, 0xC1	; 193
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	21 ec       	ldi	r18, 0xC1	; 193
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	f9 01       	movw	r30, r18
     73a:	20 81       	ld	r18, Z
     73c:	2f 7d       	andi	r18, 0xDF	; 223
     73e:	fc 01       	movw	r30, r24
     740:	20 83       	st	Z, r18
     742:	81 ec       	ldi	r24, 0xC1	; 193
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	21 ec       	ldi	r18, 0xC1	; 193
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	f9 01       	movw	r30, r18
     74c:	20 81       	ld	r18, Z
     74e:	2f 77       	andi	r18, 0x7F	; 127
     750:	fc 01       	movw	r30, r24
     752:	20 83       	st	Z, r18
     754:	8a 81       	ldd	r24, Y+2	; 0x02
     756:	9b 81       	ldd	r25, Y+3	; 0x03
     758:	8e 5f       	subi	r24, 0xFE	; 254
     75a:	9d 4f       	sbci	r25, 0xFD	; 253
     75c:	fc 01       	movw	r30, r24
     75e:	80 81       	ld	r24, Z
     760:	91 81       	ldd	r25, Z+1	; 0x01
     762:	9c 01       	movw	r18, r24
     764:	2f 5f       	subi	r18, 0xFF	; 255
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	8a 81       	ldd	r24, Y+2	; 0x02
     76a:	9b 81       	ldd	r25, Y+3	; 0x03
     76c:	9e 5f       	subi	r25, 0xFE	; 254
     76e:	fc 01       	movw	r30, r24
     770:	80 81       	ld	r24, Z
     772:	91 81       	ldd	r25, Z+1	; 0x01
     774:	28 17       	cp	r18, r24
     776:	39 07       	cpc	r19, r25
     778:	91 f0       	breq	.+36     	; 0x79e <buff_put+0x80>
     77a:	8a 81       	ldd	r24, Y+2	; 0x02
     77c:	9b 81       	ldd	r25, Y+3	; 0x03
     77e:	9e 5f       	subi	r25, 0xFE	; 254
     780:	fc 01       	movw	r30, r24
     782:	80 81       	ld	r24, Z
     784:	91 81       	ldd	r25, Z+1	; 0x01
     786:	89 2b       	or	r24, r25
     788:	f1 f4       	brne	.+60     	; 0x7c6 <buff_put+0xa8>
     78a:	8a 81       	ldd	r24, Y+2	; 0x02
     78c:	9b 81       	ldd	r25, Y+3	; 0x03
     78e:	8e 5f       	subi	r24, 0xFE	; 254
     790:	9d 4f       	sbci	r25, 0xFD	; 253
     792:	fc 01       	movw	r30, r24
     794:	80 81       	ld	r24, Z
     796:	91 81       	ldd	r25, Z+1	; 0x01
     798:	8f 3f       	cpi	r24, 0xFF	; 255
     79a:	91 40       	sbci	r25, 0x01	; 1
     79c:	a1 f4       	brne	.+40     	; 0x7c6 <buff_put+0xa8>
     79e:	81 ec       	ldi	r24, 0xC1	; 193
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	21 ec       	ldi	r18, 0xC1	; 193
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	f9 01       	movw	r30, r18
     7a8:	20 81       	ld	r18, Z
     7aa:	20 62       	ori	r18, 0x20	; 32
     7ac:	fc 01       	movw	r30, r24
     7ae:	20 83       	st	Z, r18
     7b0:	81 ec       	ldi	r24, 0xC1	; 193
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	21 ec       	ldi	r18, 0xC1	; 193
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	f9 01       	movw	r30, r18
     7ba:	20 81       	ld	r18, Z
     7bc:	20 68       	ori	r18, 0x80	; 128
     7be:	fc 01       	movw	r30, r24
     7c0:	20 83       	st	Z, r18
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	43 c0       	rjmp	.+134    	; 0x84c <buff_put+0x12e>
     7c6:	8a 81       	ldd	r24, Y+2	; 0x02
     7c8:	9b 81       	ldd	r25, Y+3	; 0x03
     7ca:	8e 5f       	subi	r24, 0xFE	; 254
     7cc:	9d 4f       	sbci	r25, 0xFD	; 253
     7ce:	fc 01       	movw	r30, r24
     7d0:	80 81       	ld	r24, Z
     7d2:	91 81       	ldd	r25, Z+1	; 0x01
     7d4:	2a 81       	ldd	r18, Y+2	; 0x02
     7d6:	3b 81       	ldd	r19, Y+3	; 0x03
     7d8:	82 0f       	add	r24, r18
     7da:	93 1f       	adc	r25, r19
     7dc:	29 81       	ldd	r18, Y+1	; 0x01
     7de:	fc 01       	movw	r30, r24
     7e0:	20 83       	st	Z, r18
     7e2:	8a 81       	ldd	r24, Y+2	; 0x02
     7e4:	9b 81       	ldd	r25, Y+3	; 0x03
     7e6:	8e 5f       	subi	r24, 0xFE	; 254
     7e8:	9d 4f       	sbci	r25, 0xFD	; 253
     7ea:	fc 01       	movw	r30, r24
     7ec:	80 81       	ld	r24, Z
     7ee:	91 81       	ldd	r25, Z+1	; 0x01
     7f0:	9c 01       	movw	r18, r24
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	3f 4f       	sbci	r19, 0xFF	; 255
     7f6:	8a 81       	ldd	r24, Y+2	; 0x02
     7f8:	9b 81       	ldd	r25, Y+3	; 0x03
     7fa:	8e 5f       	subi	r24, 0xFE	; 254
     7fc:	9d 4f       	sbci	r25, 0xFD	; 253
     7fe:	fc 01       	movw	r30, r24
     800:	31 83       	std	Z+1, r19	; 0x01
     802:	20 83       	st	Z, r18
     804:	8a 81       	ldd	r24, Y+2	; 0x02
     806:	9b 81       	ldd	r25, Y+3	; 0x03
     808:	8e 5f       	subi	r24, 0xFE	; 254
     80a:	9d 4f       	sbci	r25, 0xFD	; 253
     80c:	fc 01       	movw	r30, r24
     80e:	80 81       	ld	r24, Z
     810:	91 81       	ldd	r25, Z+1	; 0x01
     812:	81 15       	cp	r24, r1
     814:	92 40       	sbci	r25, 0x02	; 2
     816:	38 f0       	brcs	.+14     	; 0x826 <buff_put+0x108>
     818:	8a 81       	ldd	r24, Y+2	; 0x02
     81a:	9b 81       	ldd	r25, Y+3	; 0x03
     81c:	8e 5f       	subi	r24, 0xFE	; 254
     81e:	9d 4f       	sbci	r25, 0xFD	; 253
     820:	fc 01       	movw	r30, r24
     822:	11 82       	std	Z+1, r1	; 0x01
     824:	10 82       	st	Z, r1
     826:	81 ec       	ldi	r24, 0xC1	; 193
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	21 ec       	ldi	r18, 0xC1	; 193
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	f9 01       	movw	r30, r18
     830:	20 81       	ld	r18, Z
     832:	20 62       	ori	r18, 0x20	; 32
     834:	fc 01       	movw	r30, r24
     836:	20 83       	st	Z, r18
     838:	81 ec       	ldi	r24, 0xC1	; 193
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	21 ec       	ldi	r18, 0xC1	; 193
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	f9 01       	movw	r30, r18
     842:	20 81       	ld	r18, Z
     844:	20 68       	ori	r18, 0x80	; 128
     846:	fc 01       	movw	r30, r24
     848:	20 83       	st	Z, r18
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	0f 90       	pop	r0
     84e:	0f 90       	pop	r0
     850:	0f 90       	pop	r0
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	08 95       	ret

00000858 <buff_get>:
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
     85c:	00 d0       	rcall	.+0      	; 0x85e <buff_get+0x6>
     85e:	00 d0       	rcall	.+0      	; 0x860 <buff_get+0x8>
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
     864:	9a 83       	std	Y+2, r25	; 0x02
     866:	89 83       	std	Y+1, r24	; 0x01
     868:	7c 83       	std	Y+4, r23	; 0x04
     86a:	6b 83       	std	Y+3, r22	; 0x03
     86c:	81 ec       	ldi	r24, 0xC1	; 193
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	21 ec       	ldi	r18, 0xC1	; 193
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	f9 01       	movw	r30, r18
     876:	20 81       	ld	r18, Z
     878:	2f 7d       	andi	r18, 0xDF	; 223
     87a:	fc 01       	movw	r30, r24
     87c:	20 83       	st	Z, r18
     87e:	81 ec       	ldi	r24, 0xC1	; 193
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	21 ec       	ldi	r18, 0xC1	; 193
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	f9 01       	movw	r30, r18
     888:	20 81       	ld	r18, Z
     88a:	2f 77       	andi	r18, 0x7F	; 127
     88c:	fc 01       	movw	r30, r24
     88e:	20 83       	st	Z, r18
     890:	8b 81       	ldd	r24, Y+3	; 0x03
     892:	9c 81       	ldd	r25, Y+4	; 0x04
     894:	9e 5f       	subi	r25, 0xFE	; 254
     896:	fc 01       	movw	r30, r24
     898:	20 81       	ld	r18, Z
     89a:	31 81       	ldd	r19, Z+1	; 0x01
     89c:	8b 81       	ldd	r24, Y+3	; 0x03
     89e:	9c 81       	ldd	r25, Y+4	; 0x04
     8a0:	8e 5f       	subi	r24, 0xFE	; 254
     8a2:	9d 4f       	sbci	r25, 0xFD	; 253
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	91 81       	ldd	r25, Z+1	; 0x01
     8aa:	28 17       	cp	r18, r24
     8ac:	39 07       	cpc	r19, r25
     8ae:	a1 f4       	brne	.+40     	; 0x8d8 <buff_get+0x80>
     8b0:	81 ec       	ldi	r24, 0xC1	; 193
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	21 ec       	ldi	r18, 0xC1	; 193
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	f9 01       	movw	r30, r18
     8ba:	20 81       	ld	r18, Z
     8bc:	20 62       	ori	r18, 0x20	; 32
     8be:	fc 01       	movw	r30, r24
     8c0:	20 83       	st	Z, r18
     8c2:	81 ec       	ldi	r24, 0xC1	; 193
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	21 ec       	ldi	r18, 0xC1	; 193
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	f9 01       	movw	r30, r18
     8cc:	20 81       	ld	r18, Z
     8ce:	20 68       	ori	r18, 0x80	; 128
     8d0:	fc 01       	movw	r30, r24
     8d2:	20 83       	st	Z, r18
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	41 c0       	rjmp	.+130    	; 0x95a <buff_get+0x102>
     8d8:	8b 81       	ldd	r24, Y+3	; 0x03
     8da:	9c 81       	ldd	r25, Y+4	; 0x04
     8dc:	9e 5f       	subi	r25, 0xFE	; 254
     8de:	fc 01       	movw	r30, r24
     8e0:	80 81       	ld	r24, Z
     8e2:	91 81       	ldd	r25, Z+1	; 0x01
     8e4:	2b 81       	ldd	r18, Y+3	; 0x03
     8e6:	3c 81       	ldd	r19, Y+4	; 0x04
     8e8:	82 0f       	add	r24, r18
     8ea:	93 1f       	adc	r25, r19
     8ec:	fc 01       	movw	r30, r24
     8ee:	20 81       	ld	r18, Z
     8f0:	89 81       	ldd	r24, Y+1	; 0x01
     8f2:	9a 81       	ldd	r25, Y+2	; 0x02
     8f4:	fc 01       	movw	r30, r24
     8f6:	20 83       	st	Z, r18
     8f8:	8b 81       	ldd	r24, Y+3	; 0x03
     8fa:	9c 81       	ldd	r25, Y+4	; 0x04
     8fc:	9e 5f       	subi	r25, 0xFE	; 254
     8fe:	fc 01       	movw	r30, r24
     900:	80 81       	ld	r24, Z
     902:	91 81       	ldd	r25, Z+1	; 0x01
     904:	9c 01       	movw	r18, r24
     906:	2f 5f       	subi	r18, 0xFF	; 255
     908:	3f 4f       	sbci	r19, 0xFF	; 255
     90a:	8b 81       	ldd	r24, Y+3	; 0x03
     90c:	9c 81       	ldd	r25, Y+4	; 0x04
     90e:	9e 5f       	subi	r25, 0xFE	; 254
     910:	fc 01       	movw	r30, r24
     912:	31 83       	std	Z+1, r19	; 0x01
     914:	20 83       	st	Z, r18
     916:	8b 81       	ldd	r24, Y+3	; 0x03
     918:	9c 81       	ldd	r25, Y+4	; 0x04
     91a:	9e 5f       	subi	r25, 0xFE	; 254
     91c:	fc 01       	movw	r30, r24
     91e:	80 81       	ld	r24, Z
     920:	91 81       	ldd	r25, Z+1	; 0x01
     922:	81 15       	cp	r24, r1
     924:	92 40       	sbci	r25, 0x02	; 2
     926:	30 f0       	brcs	.+12     	; 0x934 <buff_get+0xdc>
     928:	8b 81       	ldd	r24, Y+3	; 0x03
     92a:	9c 81       	ldd	r25, Y+4	; 0x04
     92c:	9e 5f       	subi	r25, 0xFE	; 254
     92e:	fc 01       	movw	r30, r24
     930:	11 82       	std	Z+1, r1	; 0x01
     932:	10 82       	st	Z, r1
     934:	81 ec       	ldi	r24, 0xC1	; 193
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	21 ec       	ldi	r18, 0xC1	; 193
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	f9 01       	movw	r30, r18
     93e:	20 81       	ld	r18, Z
     940:	20 62       	ori	r18, 0x20	; 32
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18
     946:	81 ec       	ldi	r24, 0xC1	; 193
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	21 ec       	ldi	r18, 0xC1	; 193
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	f9 01       	movw	r30, r18
     950:	20 81       	ld	r18, Z
     952:	20 68       	ori	r18, 0x80	; 128
     954:	fc 01       	movw	r30, r24
     956:	20 83       	st	Z, r18
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	0f 90       	pop	r0
     960:	0f 90       	pop	r0
     962:	df 91       	pop	r29
     964:	cf 91       	pop	r28
     966:	08 95       	ret

00000968 <uart_init>:
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	00 d0       	rcall	.+0      	; 0x96e <uart_init+0x6>
     96e:	cd b7       	in	r28, 0x3d	; 61
     970:	de b7       	in	r29, 0x3e	; 62
     972:	87 e6       	ldi	r24, 0x67	; 103
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	9a 83       	std	Y+2, r25	; 0x02
     978:	89 83       	std	Y+1, r24	; 0x01
     97a:	85 ec       	ldi	r24, 0xC5	; 197
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	29 81       	ldd	r18, Y+1	; 0x01
     980:	3a 81       	ldd	r19, Y+2	; 0x02
     982:	23 2f       	mov	r18, r19
     984:	33 27       	eor	r19, r19
     986:	fc 01       	movw	r30, r24
     988:	20 83       	st	Z, r18
     98a:	84 ec       	ldi	r24, 0xC4	; 196
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	29 81       	ldd	r18, Y+1	; 0x01
     990:	fc 01       	movw	r30, r24
     992:	20 83       	st	Z, r18
     994:	81 ec       	ldi	r24, 0xC1	; 193
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	28 e1       	ldi	r18, 0x18	; 24
     99a:	fc 01       	movw	r30, r24
     99c:	20 83       	st	Z, r18
     99e:	82 ec       	ldi	r24, 0xC2	; 194
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	26 e0       	ldi	r18, 0x06	; 6
     9a4:	fc 01       	movw	r30, r24
     9a6:	20 83       	st	Z, r18
     9a8:	00 00       	nop
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28
     9b2:	08 95       	ret

000009b4 <uart_init_isr>:
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	cd b7       	in	r28, 0x3d	; 61
     9ba:	de b7       	in	r29, 0x3e	; 62
     9bc:	d5 df       	rcall	.-86     	; 0x968 <uart_init>
     9be:	81 ec       	ldi	r24, 0xC1	; 193
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	21 ec       	ldi	r18, 0xC1	; 193
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	f9 01       	movw	r30, r18
     9c8:	20 81       	ld	r18, Z
     9ca:	20 62       	ori	r18, 0x20	; 32
     9cc:	fc 01       	movw	r30, r24
     9ce:	20 83       	st	Z, r18
     9d0:	81 ec       	ldi	r24, 0xC1	; 193
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	21 ec       	ldi	r18, 0xC1	; 193
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	f9 01       	movw	r30, r18
     9da:	20 81       	ld	r18, Z
     9dc:	20 68       	ori	r18, 0x80	; 128
     9de:	fc 01       	movw	r30, r24
     9e0:	20 83       	st	Z, r18
     9e2:	00 00       	nop
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	08 95       	ret

000009ea <uart_send_isr>:
     9ea:	cf 93       	push	r28
     9ec:	df 93       	push	r29
     9ee:	00 d0       	rcall	.+0      	; 0x9f0 <uart_send_isr+0x6>
     9f0:	00 d0       	rcall	.+0      	; 0x9f2 <uart_send_isr+0x8>
     9f2:	00 d0       	rcall	.+0      	; 0x9f4 <uart_send_isr+0xa>
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
     9f8:	9e 83       	std	Y+6, r25	; 0x06
     9fa:	8d 83       	std	Y+5, r24	; 0x05
     9fc:	8d 81       	ldd	r24, Y+5	; 0x05
     9fe:	9e 81       	ldd	r25, Y+6	; 0x06
     a00:	c4 d0       	rcall	.+392    	; 0xb8a <strlen>
     a02:	9c 83       	std	Y+4, r25	; 0x04
     a04:	8b 83       	std	Y+3, r24	; 0x03
     a06:	1a 82       	std	Y+2, r1	; 0x02
     a08:	19 82       	std	Y+1, r1	; 0x01
     a0a:	23 c0       	rjmp	.+70     	; 0xa52 <uart_send_isr+0x68>
     a0c:	89 81       	ldd	r24, Y+1	; 0x01
     a0e:	9a 81       	ldd	r25, Y+2	; 0x02
     a10:	2d 81       	ldd	r18, Y+5	; 0x05
     a12:	3e 81       	ldd	r19, Y+6	; 0x06
     a14:	82 0f       	add	r24, r18
     a16:	93 1f       	adc	r25, r19
     a18:	fc 01       	movw	r30, r24
     a1a:	80 81       	ld	r24, Z
     a1c:	60 e4       	ldi	r22, 0x40	; 64
     a1e:	71 e0       	ldi	r23, 0x01	; 1
     a20:	7e de       	rcall	.-772    	; 0x71e <buff_put>
     a22:	81 30       	cpi	r24, 0x01	; 1
     a24:	89 f4       	brne	.+34     	; 0xa48 <uart_send_isr+0x5e>
     a26:	80 ec       	ldi	r24, 0xC0	; 192
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	20 ec       	ldi	r18, 0xC0	; 192
     a2c:	30 e0       	ldi	r19, 0x00	; 0
     a2e:	f9 01       	movw	r30, r18
     a30:	20 81       	ld	r18, Z
     a32:	20 62       	ori	r18, 0x20	; 32
     a34:	fc 01       	movw	r30, r24
     a36:	20 83       	st	Z, r18
     a38:	89 81       	ldd	r24, Y+1	; 0x01
     a3a:	9a 81       	ldd	r25, Y+2	; 0x02
     a3c:	9c 01       	movw	r18, r24
     a3e:	2f 5f       	subi	r18, 0xFF	; 255
     a40:	3f 4f       	sbci	r19, 0xFF	; 255
     a42:	3a 83       	std	Y+2, r19	; 0x02
     a44:	29 83       	std	Y+1, r18	; 0x01
     a46:	17 c0       	rjmp	.+46     	; 0xa76 <uart_send_isr+0x8c>
     a48:	89 81       	ldd	r24, Y+1	; 0x01
     a4a:	9a 81       	ldd	r25, Y+2	; 0x02
     a4c:	01 96       	adiw	r24, 0x01	; 1
     a4e:	9a 83       	std	Y+2, r25	; 0x02
     a50:	89 83       	std	Y+1, r24	; 0x01
     a52:	29 81       	ldd	r18, Y+1	; 0x01
     a54:	3a 81       	ldd	r19, Y+2	; 0x02
     a56:	8b 81       	ldd	r24, Y+3	; 0x03
     a58:	9c 81       	ldd	r25, Y+4	; 0x04
     a5a:	28 17       	cp	r18, r24
     a5c:	39 07       	cpc	r19, r25
     a5e:	b4 f2       	brlt	.-84     	; 0xa0c <uart_send_isr+0x22>
     a60:	80 ec       	ldi	r24, 0xC0	; 192
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	20 ec       	ldi	r18, 0xC0	; 192
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	f9 01       	movw	r30, r18
     a6a:	20 81       	ld	r18, Z
     a6c:	20 62       	ori	r18, 0x20	; 32
     a6e:	fc 01       	movw	r30, r24
     a70:	20 83       	st	Z, r18
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	26 96       	adiw	r28, 0x06	; 6
     a78:	0f b6       	in	r0, 0x3f	; 63
     a7a:	f8 94       	cli
     a7c:	de bf       	out	0x3e, r29	; 62
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	cd bf       	out	0x3d, r28	; 61
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	08 95       	ret

00000a88 <__vector_21>:

/**
 ISR for USART Data Register Empty flag
 */
ISR(USART0_UDRE_vect){
     a88:	1f 92       	push	r1
     a8a:	0f 92       	push	r0
     a8c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     a90:	0f 92       	push	r0
     a92:	11 24       	eor	r1, r1
     a94:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     a98:	0f 92       	push	r0
     a9a:	2f 93       	push	r18
     a9c:	3f 93       	push	r19
     a9e:	4f 93       	push	r20
     aa0:	5f 93       	push	r21
     aa2:	6f 93       	push	r22
     aa4:	7f 93       	push	r23
     aa6:	8f 93       	push	r24
     aa8:	9f 93       	push	r25
     aaa:	af 93       	push	r26
     aac:	bf 93       	push	r27
     aae:	ef 93       	push	r30
     ab0:	ff 93       	push	r31
     ab2:	cf 93       	push	r28
     ab4:	df 93       	push	r29
     ab6:	1f 92       	push	r1
     ab8:	cd b7       	in	r28, 0x3d	; 61
     aba:	de b7       	in	r29, 0x3e	; 62
    unsigned char pByte;
    // Pull one byte from buffer and store it in pByte
    if (buff_get(&pByte, &bufferSend) == 0) {
     abc:	60 e4       	ldi	r22, 0x40	; 64
     abe:	71 e0       	ldi	r23, 0x01	; 1
     ac0:	ce 01       	movw	r24, r28
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	c9 de       	rcall	.-622    	; 0x858 <buff_get>
     ac6:	88 23       	and	r24, r24
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__vector_21+0x4e>
        // Send byte
        UDR0 = pByte;
     aca:	86 ec       	ldi	r24, 0xC6	; 198
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	29 81       	ldd	r18, Y+1	; 0x01
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
    }
}
     ad4:	09 c0       	rjmp	.+18     	; 0xae8 <__vector_21+0x60>
    if (buff_get(&pByte, &bufferSend) == 0) {
        // Send byte
        UDR0 = pByte;
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
     ad6:	80 ec       	ldi	r24, 0xC0	; 192
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	20 ec       	ldi	r18, 0xC0	; 192
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	f9 01       	movw	r30, r18
     ae0:	20 81       	ld	r18, Z
     ae2:	2f 7d       	andi	r18, 0xDF	; 223
     ae4:	fc 01       	movw	r30, r24
     ae6:	20 83       	st	Z, r18
    }
}
     ae8:	00 00       	nop
     aea:	0f 90       	pop	r0
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	ff 91       	pop	r31
     af2:	ef 91       	pop	r30
     af4:	bf 91       	pop	r27
     af6:	af 91       	pop	r26
     af8:	9f 91       	pop	r25
     afa:	8f 91       	pop	r24
     afc:	7f 91       	pop	r23
     afe:	6f 91       	pop	r22
     b00:	5f 91       	pop	r21
     b02:	4f 91       	pop	r20
     b04:	3f 91       	pop	r19
     b06:	2f 91       	pop	r18
     b08:	0f 90       	pop	r0
     b0a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     b0e:	0f 90       	pop	r0
     b10:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     b14:	0f 90       	pop	r0
     b16:	1f 90       	pop	r1
     b18:	18 95       	reti

00000b1a <__vector_20>:

ISR(USART0_RX_vect){
     b1a:	1f 92       	push	r1
     b1c:	0f 92       	push	r0
     b1e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     b22:	0f 92       	push	r0
     b24:	11 24       	eor	r1, r1
     b26:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     b2a:	0f 92       	push	r0
     b2c:	2f 93       	push	r18
     b2e:	3f 93       	push	r19
     b30:	4f 93       	push	r20
     b32:	5f 93       	push	r21
     b34:	6f 93       	push	r22
     b36:	7f 93       	push	r23
     b38:	8f 93       	push	r24
     b3a:	9f 93       	push	r25
     b3c:	af 93       	push	r26
     b3e:	bf 93       	push	r27
     b40:	ef 93       	push	r30
     b42:	ff 93       	push	r31
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
    // Put received byte to bufferRecv (will read but don't save the value if buffer overflows)
    buff_put(UDR0, &bufferRecv);
     b4c:	86 ec       	ldi	r24, 0xC6	; 198
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	fc 01       	movw	r30, r24
     b52:	80 81       	ld	r24, Z
     b54:	64 e4       	ldi	r22, 0x44	; 68
     b56:	73 e0       	ldi	r23, 0x03	; 3
     b58:	e2 dd       	rcall	.-1084   	; 0x71e <buff_put>
}
     b5a:	00 00       	nop
     b5c:	df 91       	pop	r29
     b5e:	cf 91       	pop	r28
     b60:	ff 91       	pop	r31
     b62:	ef 91       	pop	r30
     b64:	bf 91       	pop	r27
     b66:	af 91       	pop	r26
     b68:	9f 91       	pop	r25
     b6a:	8f 91       	pop	r24
     b6c:	7f 91       	pop	r23
     b6e:	6f 91       	pop	r22
     b70:	5f 91       	pop	r21
     b72:	4f 91       	pop	r20
     b74:	3f 91       	pop	r19
     b76:	2f 91       	pop	r18
     b78:	0f 90       	pop	r0
     b7a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     b7e:	0f 90       	pop	r0
     b80:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <strlen>:
     b8a:	fc 01       	movw	r30, r24
     b8c:	01 90       	ld	r0, Z+
     b8e:	00 20       	and	r0, r0
     b90:	e9 f7       	brne	.-6      	; 0xb8c <strlen+0x2>
     b92:	80 95       	com	r24
     b94:	90 95       	com	r25
     b96:	8e 0f       	add	r24, r30
     b98:	9f 1f       	adc	r25, r31
     b9a:	08 95       	ret

00000b9c <sprintf>:
     b9c:	0f 93       	push	r16
     b9e:	1f 93       	push	r17
     ba0:	cf 93       	push	r28
     ba2:	df 93       	push	r29
     ba4:	cd b7       	in	r28, 0x3d	; 61
     ba6:	de b7       	in	r29, 0x3e	; 62
     ba8:	2e 97       	sbiw	r28, 0x0e	; 14
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	f8 94       	cli
     bae:	de bf       	out	0x3e, r29	; 62
     bb0:	0f be       	out	0x3f, r0	; 63
     bb2:	cd bf       	out	0x3d, r28	; 61
     bb4:	0d 89       	ldd	r16, Y+21	; 0x15
     bb6:	1e 89       	ldd	r17, Y+22	; 0x16
     bb8:	86 e0       	ldi	r24, 0x06	; 6
     bba:	8c 83       	std	Y+4, r24	; 0x04
     bbc:	1a 83       	std	Y+2, r17	; 0x02
     bbe:	09 83       	std	Y+1, r16	; 0x01
     bc0:	8f ef       	ldi	r24, 0xFF	; 255
     bc2:	9f e7       	ldi	r25, 0x7F	; 127
     bc4:	9e 83       	std	Y+6, r25	; 0x06
     bc6:	8d 83       	std	Y+5, r24	; 0x05
     bc8:	ae 01       	movw	r20, r28
     bca:	47 5e       	subi	r20, 0xE7	; 231
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	6f 89       	ldd	r22, Y+23	; 0x17
     bd0:	78 8d       	ldd	r23, Y+24	; 0x18
     bd2:	ce 01       	movw	r24, r28
     bd4:	01 96       	adiw	r24, 0x01	; 1
     bd6:	10 d0       	rcall	.+32     	; 0xbf8 <vfprintf>
     bd8:	ef 81       	ldd	r30, Y+7	; 0x07
     bda:	f8 85       	ldd	r31, Y+8	; 0x08
     bdc:	e0 0f       	add	r30, r16
     bde:	f1 1f       	adc	r31, r17
     be0:	10 82       	st	Z, r1
     be2:	2e 96       	adiw	r28, 0x0e	; 14
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	de bf       	out	0x3e, r29	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	cd bf       	out	0x3d, r28	; 61
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	08 95       	ret

00000bf8 <vfprintf>:
     bf8:	2f 92       	push	r2
     bfa:	3f 92       	push	r3
     bfc:	4f 92       	push	r4
     bfe:	5f 92       	push	r5
     c00:	6f 92       	push	r6
     c02:	7f 92       	push	r7
     c04:	8f 92       	push	r8
     c06:	9f 92       	push	r9
     c08:	af 92       	push	r10
     c0a:	bf 92       	push	r11
     c0c:	cf 92       	push	r12
     c0e:	df 92       	push	r13
     c10:	ef 92       	push	r14
     c12:	ff 92       	push	r15
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	cd b7       	in	r28, 0x3d	; 61
     c1e:	de b7       	in	r29, 0x3e	; 62
     c20:	2b 97       	sbiw	r28, 0x0b	; 11
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	de bf       	out	0x3e, r29	; 62
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	cd bf       	out	0x3d, r28	; 61
     c2c:	6c 01       	movw	r12, r24
     c2e:	7b 01       	movw	r14, r22
     c30:	8a 01       	movw	r16, r20
     c32:	fc 01       	movw	r30, r24
     c34:	17 82       	std	Z+7, r1	; 0x07
     c36:	16 82       	std	Z+6, r1	; 0x06
     c38:	83 81       	ldd	r24, Z+3	; 0x03
     c3a:	81 ff       	sbrs	r24, 1
     c3c:	bf c1       	rjmp	.+894    	; 0xfbc <vfprintf+0x3c4>
     c3e:	ce 01       	movw	r24, r28
     c40:	01 96       	adiw	r24, 0x01	; 1
     c42:	3c 01       	movw	r6, r24
     c44:	f6 01       	movw	r30, r12
     c46:	93 81       	ldd	r25, Z+3	; 0x03
     c48:	f7 01       	movw	r30, r14
     c4a:	93 fd       	sbrc	r25, 3
     c4c:	85 91       	lpm	r24, Z+
     c4e:	93 ff       	sbrs	r25, 3
     c50:	81 91       	ld	r24, Z+
     c52:	7f 01       	movw	r14, r30
     c54:	88 23       	and	r24, r24
     c56:	09 f4       	brne	.+2      	; 0xc5a <vfprintf+0x62>
     c58:	ad c1       	rjmp	.+858    	; 0xfb4 <vfprintf+0x3bc>
     c5a:	85 32       	cpi	r24, 0x25	; 37
     c5c:	39 f4       	brne	.+14     	; 0xc6c <vfprintf+0x74>
     c5e:	93 fd       	sbrc	r25, 3
     c60:	85 91       	lpm	r24, Z+
     c62:	93 ff       	sbrs	r25, 3
     c64:	81 91       	ld	r24, Z+
     c66:	7f 01       	movw	r14, r30
     c68:	85 32       	cpi	r24, 0x25	; 37
     c6a:	21 f4       	brne	.+8      	; 0xc74 <vfprintf+0x7c>
     c6c:	b6 01       	movw	r22, r12
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	d6 d1       	rcall	.+940    	; 0x101e <fputc>
     c72:	e8 cf       	rjmp	.-48     	; 0xc44 <vfprintf+0x4c>
     c74:	91 2c       	mov	r9, r1
     c76:	21 2c       	mov	r2, r1
     c78:	31 2c       	mov	r3, r1
     c7a:	ff e1       	ldi	r31, 0x1F	; 31
     c7c:	f3 15       	cp	r31, r3
     c7e:	d8 f0       	brcs	.+54     	; 0xcb6 <vfprintf+0xbe>
     c80:	8b 32       	cpi	r24, 0x2B	; 43
     c82:	79 f0       	breq	.+30     	; 0xca2 <vfprintf+0xaa>
     c84:	38 f4       	brcc	.+14     	; 0xc94 <vfprintf+0x9c>
     c86:	80 32       	cpi	r24, 0x20	; 32
     c88:	79 f0       	breq	.+30     	; 0xca8 <vfprintf+0xb0>
     c8a:	83 32       	cpi	r24, 0x23	; 35
     c8c:	a1 f4       	brne	.+40     	; 0xcb6 <vfprintf+0xbe>
     c8e:	23 2d       	mov	r18, r3
     c90:	20 61       	ori	r18, 0x10	; 16
     c92:	1d c0       	rjmp	.+58     	; 0xcce <vfprintf+0xd6>
     c94:	8d 32       	cpi	r24, 0x2D	; 45
     c96:	61 f0       	breq	.+24     	; 0xcb0 <vfprintf+0xb8>
     c98:	80 33       	cpi	r24, 0x30	; 48
     c9a:	69 f4       	brne	.+26     	; 0xcb6 <vfprintf+0xbe>
     c9c:	23 2d       	mov	r18, r3
     c9e:	21 60       	ori	r18, 0x01	; 1
     ca0:	16 c0       	rjmp	.+44     	; 0xcce <vfprintf+0xd6>
     ca2:	83 2d       	mov	r24, r3
     ca4:	82 60       	ori	r24, 0x02	; 2
     ca6:	38 2e       	mov	r3, r24
     ca8:	e3 2d       	mov	r30, r3
     caa:	e4 60       	ori	r30, 0x04	; 4
     cac:	3e 2e       	mov	r3, r30
     cae:	2a c0       	rjmp	.+84     	; 0xd04 <vfprintf+0x10c>
     cb0:	f3 2d       	mov	r31, r3
     cb2:	f8 60       	ori	r31, 0x08	; 8
     cb4:	1d c0       	rjmp	.+58     	; 0xcf0 <vfprintf+0xf8>
     cb6:	37 fc       	sbrc	r3, 7
     cb8:	2d c0       	rjmp	.+90     	; 0xd14 <vfprintf+0x11c>
     cba:	20 ed       	ldi	r18, 0xD0	; 208
     cbc:	28 0f       	add	r18, r24
     cbe:	2a 30       	cpi	r18, 0x0A	; 10
     cc0:	40 f0       	brcs	.+16     	; 0xcd2 <vfprintf+0xda>
     cc2:	8e 32       	cpi	r24, 0x2E	; 46
     cc4:	b9 f4       	brne	.+46     	; 0xcf4 <vfprintf+0xfc>
     cc6:	36 fc       	sbrc	r3, 6
     cc8:	75 c1       	rjmp	.+746    	; 0xfb4 <vfprintf+0x3bc>
     cca:	23 2d       	mov	r18, r3
     ccc:	20 64       	ori	r18, 0x40	; 64
     cce:	32 2e       	mov	r3, r18
     cd0:	19 c0       	rjmp	.+50     	; 0xd04 <vfprintf+0x10c>
     cd2:	36 fe       	sbrs	r3, 6
     cd4:	06 c0       	rjmp	.+12     	; 0xce2 <vfprintf+0xea>
     cd6:	8a e0       	ldi	r24, 0x0A	; 10
     cd8:	98 9e       	mul	r9, r24
     cda:	20 0d       	add	r18, r0
     cdc:	11 24       	eor	r1, r1
     cde:	92 2e       	mov	r9, r18
     ce0:	11 c0       	rjmp	.+34     	; 0xd04 <vfprintf+0x10c>
     ce2:	ea e0       	ldi	r30, 0x0A	; 10
     ce4:	2e 9e       	mul	r2, r30
     ce6:	20 0d       	add	r18, r0
     ce8:	11 24       	eor	r1, r1
     cea:	22 2e       	mov	r2, r18
     cec:	f3 2d       	mov	r31, r3
     cee:	f0 62       	ori	r31, 0x20	; 32
     cf0:	3f 2e       	mov	r3, r31
     cf2:	08 c0       	rjmp	.+16     	; 0xd04 <vfprintf+0x10c>
     cf4:	8c 36       	cpi	r24, 0x6C	; 108
     cf6:	21 f4       	brne	.+8      	; 0xd00 <vfprintf+0x108>
     cf8:	83 2d       	mov	r24, r3
     cfa:	80 68       	ori	r24, 0x80	; 128
     cfc:	38 2e       	mov	r3, r24
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <vfprintf+0x10c>
     d00:	88 36       	cpi	r24, 0x68	; 104
     d02:	41 f4       	brne	.+16     	; 0xd14 <vfprintf+0x11c>
     d04:	f7 01       	movw	r30, r14
     d06:	93 fd       	sbrc	r25, 3
     d08:	85 91       	lpm	r24, Z+
     d0a:	93 ff       	sbrs	r25, 3
     d0c:	81 91       	ld	r24, Z+
     d0e:	7f 01       	movw	r14, r30
     d10:	81 11       	cpse	r24, r1
     d12:	b3 cf       	rjmp	.-154    	; 0xc7a <vfprintf+0x82>
     d14:	98 2f       	mov	r25, r24
     d16:	9f 7d       	andi	r25, 0xDF	; 223
     d18:	95 54       	subi	r25, 0x45	; 69
     d1a:	93 30       	cpi	r25, 0x03	; 3
     d1c:	28 f4       	brcc	.+10     	; 0xd28 <vfprintf+0x130>
     d1e:	0c 5f       	subi	r16, 0xFC	; 252
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	9f e3       	ldi	r25, 0x3F	; 63
     d24:	99 83       	std	Y+1, r25	; 0x01
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <vfprintf+0x14a>
     d28:	83 36       	cpi	r24, 0x63	; 99
     d2a:	31 f0       	breq	.+12     	; 0xd38 <vfprintf+0x140>
     d2c:	83 37       	cpi	r24, 0x73	; 115
     d2e:	71 f0       	breq	.+28     	; 0xd4c <vfprintf+0x154>
     d30:	83 35       	cpi	r24, 0x53	; 83
     d32:	09 f0       	breq	.+2      	; 0xd36 <vfprintf+0x13e>
     d34:	55 c0       	rjmp	.+170    	; 0xde0 <vfprintf+0x1e8>
     d36:	20 c0       	rjmp	.+64     	; 0xd78 <vfprintf+0x180>
     d38:	f8 01       	movw	r30, r16
     d3a:	80 81       	ld	r24, Z
     d3c:	89 83       	std	Y+1, r24	; 0x01
     d3e:	0e 5f       	subi	r16, 0xFE	; 254
     d40:	1f 4f       	sbci	r17, 0xFF	; 255
     d42:	88 24       	eor	r8, r8
     d44:	83 94       	inc	r8
     d46:	91 2c       	mov	r9, r1
     d48:	53 01       	movw	r10, r6
     d4a:	12 c0       	rjmp	.+36     	; 0xd70 <vfprintf+0x178>
     d4c:	28 01       	movw	r4, r16
     d4e:	f2 e0       	ldi	r31, 0x02	; 2
     d50:	4f 0e       	add	r4, r31
     d52:	51 1c       	adc	r5, r1
     d54:	f8 01       	movw	r30, r16
     d56:	a0 80       	ld	r10, Z
     d58:	b1 80       	ldd	r11, Z+1	; 0x01
     d5a:	36 fe       	sbrs	r3, 6
     d5c:	03 c0       	rjmp	.+6      	; 0xd64 <vfprintf+0x16c>
     d5e:	69 2d       	mov	r22, r9
     d60:	70 e0       	ldi	r23, 0x00	; 0
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <vfprintf+0x170>
     d64:	6f ef       	ldi	r22, 0xFF	; 255
     d66:	7f ef       	ldi	r23, 0xFF	; 255
     d68:	c5 01       	movw	r24, r10
     d6a:	4e d1       	rcall	.+668    	; 0x1008 <strnlen>
     d6c:	4c 01       	movw	r8, r24
     d6e:	82 01       	movw	r16, r4
     d70:	f3 2d       	mov	r31, r3
     d72:	ff 77       	andi	r31, 0x7F	; 127
     d74:	3f 2e       	mov	r3, r31
     d76:	15 c0       	rjmp	.+42     	; 0xda2 <vfprintf+0x1aa>
     d78:	28 01       	movw	r4, r16
     d7a:	22 e0       	ldi	r18, 0x02	; 2
     d7c:	42 0e       	add	r4, r18
     d7e:	51 1c       	adc	r5, r1
     d80:	f8 01       	movw	r30, r16
     d82:	a0 80       	ld	r10, Z
     d84:	b1 80       	ldd	r11, Z+1	; 0x01
     d86:	36 fe       	sbrs	r3, 6
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <vfprintf+0x198>
     d8a:	69 2d       	mov	r22, r9
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x19c>
     d90:	6f ef       	ldi	r22, 0xFF	; 255
     d92:	7f ef       	ldi	r23, 0xFF	; 255
     d94:	c5 01       	movw	r24, r10
     d96:	2d d1       	rcall	.+602    	; 0xff2 <strnlen_P>
     d98:	4c 01       	movw	r8, r24
     d9a:	f3 2d       	mov	r31, r3
     d9c:	f0 68       	ori	r31, 0x80	; 128
     d9e:	3f 2e       	mov	r3, r31
     da0:	82 01       	movw	r16, r4
     da2:	33 fc       	sbrc	r3, 3
     da4:	19 c0       	rjmp	.+50     	; 0xdd8 <vfprintf+0x1e0>
     da6:	82 2d       	mov	r24, r2
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	88 16       	cp	r8, r24
     dac:	99 06       	cpc	r9, r25
     dae:	a0 f4       	brcc	.+40     	; 0xdd8 <vfprintf+0x1e0>
     db0:	b6 01       	movw	r22, r12
     db2:	80 e2       	ldi	r24, 0x20	; 32
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	33 d1       	rcall	.+614    	; 0x101e <fputc>
     db8:	2a 94       	dec	r2
     dba:	f5 cf       	rjmp	.-22     	; 0xda6 <vfprintf+0x1ae>
     dbc:	f5 01       	movw	r30, r10
     dbe:	37 fc       	sbrc	r3, 7
     dc0:	85 91       	lpm	r24, Z+
     dc2:	37 fe       	sbrs	r3, 7
     dc4:	81 91       	ld	r24, Z+
     dc6:	5f 01       	movw	r10, r30
     dc8:	b6 01       	movw	r22, r12
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	28 d1       	rcall	.+592    	; 0x101e <fputc>
     dce:	21 10       	cpse	r2, r1
     dd0:	2a 94       	dec	r2
     dd2:	21 e0       	ldi	r18, 0x01	; 1
     dd4:	82 1a       	sub	r8, r18
     dd6:	91 08       	sbc	r9, r1
     dd8:	81 14       	cp	r8, r1
     dda:	91 04       	cpc	r9, r1
     ddc:	79 f7       	brne	.-34     	; 0xdbc <vfprintf+0x1c4>
     dde:	e1 c0       	rjmp	.+450    	; 0xfa2 <vfprintf+0x3aa>
     de0:	84 36       	cpi	r24, 0x64	; 100
     de2:	11 f0       	breq	.+4      	; 0xde8 <vfprintf+0x1f0>
     de4:	89 36       	cpi	r24, 0x69	; 105
     de6:	39 f5       	brne	.+78     	; 0xe36 <vfprintf+0x23e>
     de8:	f8 01       	movw	r30, r16
     dea:	37 fe       	sbrs	r3, 7
     dec:	07 c0       	rjmp	.+14     	; 0xdfc <vfprintf+0x204>
     dee:	60 81       	ld	r22, Z
     df0:	71 81       	ldd	r23, Z+1	; 0x01
     df2:	82 81       	ldd	r24, Z+2	; 0x02
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	0c 5f       	subi	r16, 0xFC	; 252
     df8:	1f 4f       	sbci	r17, 0xFF	; 255
     dfa:	08 c0       	rjmp	.+16     	; 0xe0c <vfprintf+0x214>
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	07 2e       	mov	r0, r23
     e02:	00 0c       	add	r0, r0
     e04:	88 0b       	sbc	r24, r24
     e06:	99 0b       	sbc	r25, r25
     e08:	0e 5f       	subi	r16, 0xFE	; 254
     e0a:	1f 4f       	sbci	r17, 0xFF	; 255
     e0c:	f3 2d       	mov	r31, r3
     e0e:	ff 76       	andi	r31, 0x6F	; 111
     e10:	3f 2e       	mov	r3, r31
     e12:	97 ff       	sbrs	r25, 7
     e14:	09 c0       	rjmp	.+18     	; 0xe28 <vfprintf+0x230>
     e16:	90 95       	com	r25
     e18:	80 95       	com	r24
     e1a:	70 95       	com	r23
     e1c:	61 95       	neg	r22
     e1e:	7f 4f       	sbci	r23, 0xFF	; 255
     e20:	8f 4f       	sbci	r24, 0xFF	; 255
     e22:	9f 4f       	sbci	r25, 0xFF	; 255
     e24:	f0 68       	ori	r31, 0x80	; 128
     e26:	3f 2e       	mov	r3, r31
     e28:	2a e0       	ldi	r18, 0x0A	; 10
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	a3 01       	movw	r20, r6
     e2e:	33 d1       	rcall	.+614    	; 0x1096 <__ultoa_invert>
     e30:	88 2e       	mov	r8, r24
     e32:	86 18       	sub	r8, r6
     e34:	44 c0       	rjmp	.+136    	; 0xebe <vfprintf+0x2c6>
     e36:	85 37       	cpi	r24, 0x75	; 117
     e38:	31 f4       	brne	.+12     	; 0xe46 <vfprintf+0x24e>
     e3a:	23 2d       	mov	r18, r3
     e3c:	2f 7e       	andi	r18, 0xEF	; 239
     e3e:	b2 2e       	mov	r11, r18
     e40:	2a e0       	ldi	r18, 0x0A	; 10
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	25 c0       	rjmp	.+74     	; 0xe90 <vfprintf+0x298>
     e46:	93 2d       	mov	r25, r3
     e48:	99 7f       	andi	r25, 0xF9	; 249
     e4a:	b9 2e       	mov	r11, r25
     e4c:	8f 36       	cpi	r24, 0x6F	; 111
     e4e:	c1 f0       	breq	.+48     	; 0xe80 <vfprintf+0x288>
     e50:	18 f4       	brcc	.+6      	; 0xe58 <vfprintf+0x260>
     e52:	88 35       	cpi	r24, 0x58	; 88
     e54:	79 f0       	breq	.+30     	; 0xe74 <vfprintf+0x27c>
     e56:	ae c0       	rjmp	.+348    	; 0xfb4 <vfprintf+0x3bc>
     e58:	80 37       	cpi	r24, 0x70	; 112
     e5a:	19 f0       	breq	.+6      	; 0xe62 <vfprintf+0x26a>
     e5c:	88 37       	cpi	r24, 0x78	; 120
     e5e:	21 f0       	breq	.+8      	; 0xe68 <vfprintf+0x270>
     e60:	a9 c0       	rjmp	.+338    	; 0xfb4 <vfprintf+0x3bc>
     e62:	e9 2f       	mov	r30, r25
     e64:	e0 61       	ori	r30, 0x10	; 16
     e66:	be 2e       	mov	r11, r30
     e68:	b4 fe       	sbrs	r11, 4
     e6a:	0d c0       	rjmp	.+26     	; 0xe86 <vfprintf+0x28e>
     e6c:	fb 2d       	mov	r31, r11
     e6e:	f4 60       	ori	r31, 0x04	; 4
     e70:	bf 2e       	mov	r11, r31
     e72:	09 c0       	rjmp	.+18     	; 0xe86 <vfprintf+0x28e>
     e74:	34 fe       	sbrs	r3, 4
     e76:	0a c0       	rjmp	.+20     	; 0xe8c <vfprintf+0x294>
     e78:	29 2f       	mov	r18, r25
     e7a:	26 60       	ori	r18, 0x06	; 6
     e7c:	b2 2e       	mov	r11, r18
     e7e:	06 c0       	rjmp	.+12     	; 0xe8c <vfprintf+0x294>
     e80:	28 e0       	ldi	r18, 0x08	; 8
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	05 c0       	rjmp	.+10     	; 0xe90 <vfprintf+0x298>
     e86:	20 e1       	ldi	r18, 0x10	; 16
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <vfprintf+0x298>
     e8c:	20 e1       	ldi	r18, 0x10	; 16
     e8e:	32 e0       	ldi	r19, 0x02	; 2
     e90:	f8 01       	movw	r30, r16
     e92:	b7 fe       	sbrs	r11, 7
     e94:	07 c0       	rjmp	.+14     	; 0xea4 <vfprintf+0x2ac>
     e96:	60 81       	ld	r22, Z
     e98:	71 81       	ldd	r23, Z+1	; 0x01
     e9a:	82 81       	ldd	r24, Z+2	; 0x02
     e9c:	93 81       	ldd	r25, Z+3	; 0x03
     e9e:	0c 5f       	subi	r16, 0xFC	; 252
     ea0:	1f 4f       	sbci	r17, 0xFF	; 255
     ea2:	06 c0       	rjmp	.+12     	; 0xeb0 <vfprintf+0x2b8>
     ea4:	60 81       	ld	r22, Z
     ea6:	71 81       	ldd	r23, Z+1	; 0x01
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	0e 5f       	subi	r16, 0xFE	; 254
     eae:	1f 4f       	sbci	r17, 0xFF	; 255
     eb0:	a3 01       	movw	r20, r6
     eb2:	f1 d0       	rcall	.+482    	; 0x1096 <__ultoa_invert>
     eb4:	88 2e       	mov	r8, r24
     eb6:	86 18       	sub	r8, r6
     eb8:	fb 2d       	mov	r31, r11
     eba:	ff 77       	andi	r31, 0x7F	; 127
     ebc:	3f 2e       	mov	r3, r31
     ebe:	36 fe       	sbrs	r3, 6
     ec0:	0d c0       	rjmp	.+26     	; 0xedc <vfprintf+0x2e4>
     ec2:	23 2d       	mov	r18, r3
     ec4:	2e 7f       	andi	r18, 0xFE	; 254
     ec6:	a2 2e       	mov	r10, r18
     ec8:	89 14       	cp	r8, r9
     eca:	58 f4       	brcc	.+22     	; 0xee2 <vfprintf+0x2ea>
     ecc:	34 fe       	sbrs	r3, 4
     ece:	0b c0       	rjmp	.+22     	; 0xee6 <vfprintf+0x2ee>
     ed0:	32 fc       	sbrc	r3, 2
     ed2:	09 c0       	rjmp	.+18     	; 0xee6 <vfprintf+0x2ee>
     ed4:	83 2d       	mov	r24, r3
     ed6:	8e 7e       	andi	r24, 0xEE	; 238
     ed8:	a8 2e       	mov	r10, r24
     eda:	05 c0       	rjmp	.+10     	; 0xee6 <vfprintf+0x2ee>
     edc:	b8 2c       	mov	r11, r8
     ede:	a3 2c       	mov	r10, r3
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <vfprintf+0x2f0>
     ee2:	b8 2c       	mov	r11, r8
     ee4:	01 c0       	rjmp	.+2      	; 0xee8 <vfprintf+0x2f0>
     ee6:	b9 2c       	mov	r11, r9
     ee8:	a4 fe       	sbrs	r10, 4
     eea:	0f c0       	rjmp	.+30     	; 0xf0a <vfprintf+0x312>
     eec:	fe 01       	movw	r30, r28
     eee:	e8 0d       	add	r30, r8
     ef0:	f1 1d       	adc	r31, r1
     ef2:	80 81       	ld	r24, Z
     ef4:	80 33       	cpi	r24, 0x30	; 48
     ef6:	21 f4       	brne	.+8      	; 0xf00 <vfprintf+0x308>
     ef8:	9a 2d       	mov	r25, r10
     efa:	99 7e       	andi	r25, 0xE9	; 233
     efc:	a9 2e       	mov	r10, r25
     efe:	09 c0       	rjmp	.+18     	; 0xf12 <vfprintf+0x31a>
     f00:	a2 fe       	sbrs	r10, 2
     f02:	06 c0       	rjmp	.+12     	; 0xf10 <vfprintf+0x318>
     f04:	b3 94       	inc	r11
     f06:	b3 94       	inc	r11
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <vfprintf+0x31a>
     f0a:	8a 2d       	mov	r24, r10
     f0c:	86 78       	andi	r24, 0x86	; 134
     f0e:	09 f0       	breq	.+2      	; 0xf12 <vfprintf+0x31a>
     f10:	b3 94       	inc	r11
     f12:	a3 fc       	sbrc	r10, 3
     f14:	10 c0       	rjmp	.+32     	; 0xf36 <vfprintf+0x33e>
     f16:	a0 fe       	sbrs	r10, 0
     f18:	06 c0       	rjmp	.+12     	; 0xf26 <vfprintf+0x32e>
     f1a:	b2 14       	cp	r11, r2
     f1c:	80 f4       	brcc	.+32     	; 0xf3e <vfprintf+0x346>
     f1e:	28 0c       	add	r2, r8
     f20:	92 2c       	mov	r9, r2
     f22:	9b 18       	sub	r9, r11
     f24:	0d c0       	rjmp	.+26     	; 0xf40 <vfprintf+0x348>
     f26:	b2 14       	cp	r11, r2
     f28:	58 f4       	brcc	.+22     	; 0xf40 <vfprintf+0x348>
     f2a:	b6 01       	movw	r22, r12
     f2c:	80 e2       	ldi	r24, 0x20	; 32
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	76 d0       	rcall	.+236    	; 0x101e <fputc>
     f32:	b3 94       	inc	r11
     f34:	f8 cf       	rjmp	.-16     	; 0xf26 <vfprintf+0x32e>
     f36:	b2 14       	cp	r11, r2
     f38:	18 f4       	brcc	.+6      	; 0xf40 <vfprintf+0x348>
     f3a:	2b 18       	sub	r2, r11
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <vfprintf+0x34a>
     f3e:	98 2c       	mov	r9, r8
     f40:	21 2c       	mov	r2, r1
     f42:	a4 fe       	sbrs	r10, 4
     f44:	0f c0       	rjmp	.+30     	; 0xf64 <vfprintf+0x36c>
     f46:	b6 01       	movw	r22, r12
     f48:	80 e3       	ldi	r24, 0x30	; 48
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	68 d0       	rcall	.+208    	; 0x101e <fputc>
     f4e:	a2 fe       	sbrs	r10, 2
     f50:	16 c0       	rjmp	.+44     	; 0xf7e <vfprintf+0x386>
     f52:	a1 fc       	sbrc	r10, 1
     f54:	03 c0       	rjmp	.+6      	; 0xf5c <vfprintf+0x364>
     f56:	88 e7       	ldi	r24, 0x78	; 120
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x368>
     f5c:	88 e5       	ldi	r24, 0x58	; 88
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	b6 01       	movw	r22, r12
     f62:	0c c0       	rjmp	.+24     	; 0xf7c <vfprintf+0x384>
     f64:	8a 2d       	mov	r24, r10
     f66:	86 78       	andi	r24, 0x86	; 134
     f68:	51 f0       	breq	.+20     	; 0xf7e <vfprintf+0x386>
     f6a:	a1 fe       	sbrs	r10, 1
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <vfprintf+0x37a>
     f6e:	8b e2       	ldi	r24, 0x2B	; 43
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <vfprintf+0x37c>
     f72:	80 e2       	ldi	r24, 0x20	; 32
     f74:	a7 fc       	sbrc	r10, 7
     f76:	8d e2       	ldi	r24, 0x2D	; 45
     f78:	b6 01       	movw	r22, r12
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	50 d0       	rcall	.+160    	; 0x101e <fputc>
     f7e:	89 14       	cp	r8, r9
     f80:	30 f4       	brcc	.+12     	; 0xf8e <vfprintf+0x396>
     f82:	b6 01       	movw	r22, r12
     f84:	80 e3       	ldi	r24, 0x30	; 48
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	4a d0       	rcall	.+148    	; 0x101e <fputc>
     f8a:	9a 94       	dec	r9
     f8c:	f8 cf       	rjmp	.-16     	; 0xf7e <vfprintf+0x386>
     f8e:	8a 94       	dec	r8
     f90:	f3 01       	movw	r30, r6
     f92:	e8 0d       	add	r30, r8
     f94:	f1 1d       	adc	r31, r1
     f96:	80 81       	ld	r24, Z
     f98:	b6 01       	movw	r22, r12
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	40 d0       	rcall	.+128    	; 0x101e <fputc>
     f9e:	81 10       	cpse	r8, r1
     fa0:	f6 cf       	rjmp	.-20     	; 0xf8e <vfprintf+0x396>
     fa2:	22 20       	and	r2, r2
     fa4:	09 f4       	brne	.+2      	; 0xfa8 <vfprintf+0x3b0>
     fa6:	4e ce       	rjmp	.-868    	; 0xc44 <vfprintf+0x4c>
     fa8:	b6 01       	movw	r22, r12
     faa:	80 e2       	ldi	r24, 0x20	; 32
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	37 d0       	rcall	.+110    	; 0x101e <fputc>
     fb0:	2a 94       	dec	r2
     fb2:	f7 cf       	rjmp	.-18     	; 0xfa2 <vfprintf+0x3aa>
     fb4:	f6 01       	movw	r30, r12
     fb6:	86 81       	ldd	r24, Z+6	; 0x06
     fb8:	97 81       	ldd	r25, Z+7	; 0x07
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <vfprintf+0x3c8>
     fbc:	8f ef       	ldi	r24, 0xFF	; 255
     fbe:	9f ef       	ldi	r25, 0xFF	; 255
     fc0:	2b 96       	adiw	r28, 0x0b	; 11
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	ff 90       	pop	r15
     fd6:	ef 90       	pop	r14
     fd8:	df 90       	pop	r13
     fda:	cf 90       	pop	r12
     fdc:	bf 90       	pop	r11
     fde:	af 90       	pop	r10
     fe0:	9f 90       	pop	r9
     fe2:	8f 90       	pop	r8
     fe4:	7f 90       	pop	r7
     fe6:	6f 90       	pop	r6
     fe8:	5f 90       	pop	r5
     fea:	4f 90       	pop	r4
     fec:	3f 90       	pop	r3
     fee:	2f 90       	pop	r2
     ff0:	08 95       	ret

00000ff2 <strnlen_P>:
     ff2:	fc 01       	movw	r30, r24
     ff4:	05 90       	lpm	r0, Z+
     ff6:	61 50       	subi	r22, 0x01	; 1
     ff8:	70 40       	sbci	r23, 0x00	; 0
     ffa:	01 10       	cpse	r0, r1
     ffc:	d8 f7       	brcc	.-10     	; 0xff4 <strnlen_P+0x2>
     ffe:	80 95       	com	r24
    1000:	90 95       	com	r25
    1002:	8e 0f       	add	r24, r30
    1004:	9f 1f       	adc	r25, r31
    1006:	08 95       	ret

00001008 <strnlen>:
    1008:	fc 01       	movw	r30, r24
    100a:	61 50       	subi	r22, 0x01	; 1
    100c:	70 40       	sbci	r23, 0x00	; 0
    100e:	01 90       	ld	r0, Z+
    1010:	01 10       	cpse	r0, r1
    1012:	d8 f7       	brcc	.-10     	; 0x100a <strnlen+0x2>
    1014:	80 95       	com	r24
    1016:	90 95       	com	r25
    1018:	8e 0f       	add	r24, r30
    101a:	9f 1f       	adc	r25, r31
    101c:	08 95       	ret

0000101e <fputc>:
    101e:	0f 93       	push	r16
    1020:	1f 93       	push	r17
    1022:	cf 93       	push	r28
    1024:	df 93       	push	r29
    1026:	fb 01       	movw	r30, r22
    1028:	23 81       	ldd	r18, Z+3	; 0x03
    102a:	21 fd       	sbrc	r18, 1
    102c:	03 c0       	rjmp	.+6      	; 0x1034 <fputc+0x16>
    102e:	8f ef       	ldi	r24, 0xFF	; 255
    1030:	9f ef       	ldi	r25, 0xFF	; 255
    1032:	2c c0       	rjmp	.+88     	; 0x108c <fputc+0x6e>
    1034:	22 ff       	sbrs	r18, 2
    1036:	16 c0       	rjmp	.+44     	; 0x1064 <fputc+0x46>
    1038:	46 81       	ldd	r20, Z+6	; 0x06
    103a:	57 81       	ldd	r21, Z+7	; 0x07
    103c:	24 81       	ldd	r18, Z+4	; 0x04
    103e:	35 81       	ldd	r19, Z+5	; 0x05
    1040:	42 17       	cp	r20, r18
    1042:	53 07       	cpc	r21, r19
    1044:	44 f4       	brge	.+16     	; 0x1056 <fputc+0x38>
    1046:	a0 81       	ld	r26, Z
    1048:	b1 81       	ldd	r27, Z+1	; 0x01
    104a:	9d 01       	movw	r18, r26
    104c:	2f 5f       	subi	r18, 0xFF	; 255
    104e:	3f 4f       	sbci	r19, 0xFF	; 255
    1050:	31 83       	std	Z+1, r19	; 0x01
    1052:	20 83       	st	Z, r18
    1054:	8c 93       	st	X, r24
    1056:	26 81       	ldd	r18, Z+6	; 0x06
    1058:	37 81       	ldd	r19, Z+7	; 0x07
    105a:	2f 5f       	subi	r18, 0xFF	; 255
    105c:	3f 4f       	sbci	r19, 0xFF	; 255
    105e:	37 83       	std	Z+7, r19	; 0x07
    1060:	26 83       	std	Z+6, r18	; 0x06
    1062:	14 c0       	rjmp	.+40     	; 0x108c <fputc+0x6e>
    1064:	8b 01       	movw	r16, r22
    1066:	ec 01       	movw	r28, r24
    1068:	fb 01       	movw	r30, r22
    106a:	00 84       	ldd	r0, Z+8	; 0x08
    106c:	f1 85       	ldd	r31, Z+9	; 0x09
    106e:	e0 2d       	mov	r30, r0
    1070:	09 95       	icall
    1072:	89 2b       	or	r24, r25
    1074:	e1 f6       	brne	.-72     	; 0x102e <fputc+0x10>
    1076:	d8 01       	movw	r26, r16
    1078:	16 96       	adiw	r26, 0x06	; 6
    107a:	8d 91       	ld	r24, X+
    107c:	9c 91       	ld	r25, X
    107e:	17 97       	sbiw	r26, 0x07	; 7
    1080:	01 96       	adiw	r24, 0x01	; 1
    1082:	17 96       	adiw	r26, 0x07	; 7
    1084:	9c 93       	st	X, r25
    1086:	8e 93       	st	-X, r24
    1088:	16 97       	sbiw	r26, 0x06	; 6
    108a:	ce 01       	movw	r24, r28
    108c:	df 91       	pop	r29
    108e:	cf 91       	pop	r28
    1090:	1f 91       	pop	r17
    1092:	0f 91       	pop	r16
    1094:	08 95       	ret

00001096 <__ultoa_invert>:
    1096:	fa 01       	movw	r30, r20
    1098:	aa 27       	eor	r26, r26
    109a:	28 30       	cpi	r18, 0x08	; 8
    109c:	51 f1       	breq	.+84     	; 0x10f2 <__ultoa_invert+0x5c>
    109e:	20 31       	cpi	r18, 0x10	; 16
    10a0:	81 f1       	breq	.+96     	; 0x1102 <__ultoa_invert+0x6c>
    10a2:	e8 94       	clt
    10a4:	6f 93       	push	r22
    10a6:	6e 7f       	andi	r22, 0xFE	; 254
    10a8:	6e 5f       	subi	r22, 0xFE	; 254
    10aa:	7f 4f       	sbci	r23, 0xFF	; 255
    10ac:	8f 4f       	sbci	r24, 0xFF	; 255
    10ae:	9f 4f       	sbci	r25, 0xFF	; 255
    10b0:	af 4f       	sbci	r26, 0xFF	; 255
    10b2:	b1 e0       	ldi	r27, 0x01	; 1
    10b4:	3e d0       	rcall	.+124    	; 0x1132 <__ultoa_invert+0x9c>
    10b6:	b4 e0       	ldi	r27, 0x04	; 4
    10b8:	3c d0       	rcall	.+120    	; 0x1132 <__ultoa_invert+0x9c>
    10ba:	67 0f       	add	r22, r23
    10bc:	78 1f       	adc	r23, r24
    10be:	89 1f       	adc	r24, r25
    10c0:	9a 1f       	adc	r25, r26
    10c2:	a1 1d       	adc	r26, r1
    10c4:	68 0f       	add	r22, r24
    10c6:	79 1f       	adc	r23, r25
    10c8:	8a 1f       	adc	r24, r26
    10ca:	91 1d       	adc	r25, r1
    10cc:	a1 1d       	adc	r26, r1
    10ce:	6a 0f       	add	r22, r26
    10d0:	71 1d       	adc	r23, r1
    10d2:	81 1d       	adc	r24, r1
    10d4:	91 1d       	adc	r25, r1
    10d6:	a1 1d       	adc	r26, r1
    10d8:	20 d0       	rcall	.+64     	; 0x111a <__ultoa_invert+0x84>
    10da:	09 f4       	brne	.+2      	; 0x10de <__ultoa_invert+0x48>
    10dc:	68 94       	set
    10de:	3f 91       	pop	r19
    10e0:	2a e0       	ldi	r18, 0x0A	; 10
    10e2:	26 9f       	mul	r18, r22
    10e4:	11 24       	eor	r1, r1
    10e6:	30 19       	sub	r19, r0
    10e8:	30 5d       	subi	r19, 0xD0	; 208
    10ea:	31 93       	st	Z+, r19
    10ec:	de f6       	brtc	.-74     	; 0x10a4 <__ultoa_invert+0xe>
    10ee:	cf 01       	movw	r24, r30
    10f0:	08 95       	ret
    10f2:	46 2f       	mov	r20, r22
    10f4:	47 70       	andi	r20, 0x07	; 7
    10f6:	40 5d       	subi	r20, 0xD0	; 208
    10f8:	41 93       	st	Z+, r20
    10fa:	b3 e0       	ldi	r27, 0x03	; 3
    10fc:	0f d0       	rcall	.+30     	; 0x111c <__ultoa_invert+0x86>
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <__ultoa_invert+0x5c>
    1100:	f6 cf       	rjmp	.-20     	; 0x10ee <__ultoa_invert+0x58>
    1102:	46 2f       	mov	r20, r22
    1104:	4f 70       	andi	r20, 0x0F	; 15
    1106:	40 5d       	subi	r20, 0xD0	; 208
    1108:	4a 33       	cpi	r20, 0x3A	; 58
    110a:	18 f0       	brcs	.+6      	; 0x1112 <__ultoa_invert+0x7c>
    110c:	49 5d       	subi	r20, 0xD9	; 217
    110e:	31 fd       	sbrc	r19, 1
    1110:	40 52       	subi	r20, 0x20	; 32
    1112:	41 93       	st	Z+, r20
    1114:	02 d0       	rcall	.+4      	; 0x111a <__ultoa_invert+0x84>
    1116:	a9 f7       	brne	.-22     	; 0x1102 <__ultoa_invert+0x6c>
    1118:	ea cf       	rjmp	.-44     	; 0x10ee <__ultoa_invert+0x58>
    111a:	b4 e0       	ldi	r27, 0x04	; 4
    111c:	a6 95       	lsr	r26
    111e:	97 95       	ror	r25
    1120:	87 95       	ror	r24
    1122:	77 95       	ror	r23
    1124:	67 95       	ror	r22
    1126:	ba 95       	dec	r27
    1128:	c9 f7       	brne	.-14     	; 0x111c <__ultoa_invert+0x86>
    112a:	00 97       	sbiw	r24, 0x00	; 0
    112c:	61 05       	cpc	r22, r1
    112e:	71 05       	cpc	r23, r1
    1130:	08 95       	ret
    1132:	9b 01       	movw	r18, r22
    1134:	ac 01       	movw	r20, r24
    1136:	0a 2e       	mov	r0, r26
    1138:	06 94       	lsr	r0
    113a:	57 95       	ror	r21
    113c:	47 95       	ror	r20
    113e:	37 95       	ror	r19
    1140:	27 95       	ror	r18
    1142:	ba 95       	dec	r27
    1144:	c9 f7       	brne	.-14     	; 0x1138 <__ultoa_invert+0xa2>
    1146:	62 0f       	add	r22, r18
    1148:	73 1f       	adc	r23, r19
    114a:	84 1f       	adc	r24, r20
    114c:	95 1f       	adc	r25, r21
    114e:	a0 1d       	adc	r26, r0
    1150:	08 95       	ret

00001152 <_exit>:
    1152:	f8 94       	cli

00001154 <__stop_program>:
    1154:	ff cf       	rjmp	.-2      	; 0x1154 <__stop_program>
