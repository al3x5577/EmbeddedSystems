
EmbeddedSystems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00001080  00001114  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001080  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000042b  0080011e  0080011e  00001132  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001132  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001190  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000141a  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9f  00000000  00000000  000027e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e9f  00000000  00000000  00003481  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000700  00000000  00000000  00004320  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000076e  00000000  00000000  00004a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ddf  00000000  00000000  0000518e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00005f6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
      32:	00 00       	nop
      34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
      36:	00 00       	nop
      38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e3 c2       	rjmp	.+1478   	; 0x608 <__vector_16>
      42:	00 00       	nop
      44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f9 c4       	rjmp	.+2546   	; 0xa44 <__vector_20>
      52:	00 00       	nop
      54:	ae c4       	rjmp	.+2396   	; 0x9b2 <__vector_21>
      56:	00 00       	nop
      58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	5e c0       	rjmp	.+188    	; 0x11e <__vector_24>
      62:	00 00       	nop
      64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e0 e8       	ldi	r30, 0x80	; 128
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 31       	cpi	r26, 0x1E	; 30
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	25 e0       	ldi	r18, 0x05	; 5
      b4:	ae e1       	ldi	r26, 0x1E	; 30
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a9 34       	cpi	r26, 0x49	; 73
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	d5 d1       	rcall	.+938    	; 0x46e <main>
      c4:	db c7       	rjmp	.+4022   	; 0x107c <_exit>

000000c6 <__bad_interrupt>:
      c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adc_init>:
        ADCSRA |= (1 << ADIE);
    }
    avg = avg / 8;
    
    return (avg & 0xffff);  // Return a 16 bit value
}
      c8:	cf 93       	push	r28
      ca:	df 93       	push	r29
      cc:	cd b7       	in	r28, 0x3d	; 61
      ce:	de b7       	in	r29, 0x3e	; 62
      d0:	8c e7       	ldi	r24, 0x7C	; 124
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	fc 01       	movw	r30, r24
      d6:	10 82       	st	Z, r1
      d8:	8a e7       	ldi	r24, 0x7A	; 122
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	2a e7       	ldi	r18, 0x7A	; 122
      de:	30 e0       	ldi	r19, 0x00	; 0
      e0:	f9 01       	movw	r30, r18
      e2:	20 81       	ld	r18, Z
      e4:	27 60       	ori	r18, 0x07	; 7
      e6:	fc 01       	movw	r30, r24
      e8:	20 83       	st	Z, r18
      ea:	8a e7       	ldi	r24, 0x7A	; 122
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	2a e7       	ldi	r18, 0x7A	; 122
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	f9 01       	movw	r30, r18
      f4:	20 81       	ld	r18, Z
      f6:	20 6c       	ori	r18, 0xC0	; 192
      f8:	fc 01       	movw	r30, r24
      fa:	20 83       	st	Z, r18
      fc:	8a e7       	ldi	r24, 0x7A	; 122
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	2a e7       	ldi	r18, 0x7A	; 122
     102:	30 e0       	ldi	r19, 0x00	; 0
     104:	f9 01       	movw	r30, r18
     106:	20 81       	ld	r18, Z
     108:	28 60       	ori	r18, 0x08	; 8
     10a:	fc 01       	movw	r30, r24
     10c:	20 83       	st	Z, r18
     10e:	82 e0       	ldi	r24, 0x02	; 2
     110:	91 e0       	ldi	r25, 0x01	; 1
     112:	00 d4       	rcall	.+2048   	; 0x914 <uart_send_isr>
     114:	4d d1       	rcall	.+666    	; 0x3b0 <Led6_On>
     116:	00 00       	nop
     118:	df 91       	pop	r29
     11a:	cf 91       	pop	r28
     11c:	08 95       	ret

0000011e <__vector_24>:

ISR(ADC_vect){
     11e:	1f 92       	push	r1
     120:	0f 92       	push	r0
     122:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     126:	0f 92       	push	r0
     128:	11 24       	eor	r1, r1
     12a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     12e:	0f 92       	push	r0
     130:	2f 93       	push	r18
     132:	3f 93       	push	r19
     134:	4f 93       	push	r20
     136:	5f 93       	push	r21
     138:	6f 93       	push	r22
     13a:	7f 93       	push	r23
     13c:	8f 93       	push	r24
     13e:	9f 93       	push	r25
     140:	af 93       	push	r26
     142:	bf 93       	push	r27
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
     148:	cf 93       	push	r28
     14a:	df 93       	push	r29
     14c:	cd b7       	in	r28, 0x3d	; 61
     14e:	de b7       	in	r29, 0x3e	; 62
     150:	67 97       	sbiw	r28, 0x17	; 23
     152:	de bf       	out	0x3e, r29	; 62
     154:	cd bf       	out	0x3d, r28	; 61
    uint16_t res = ADC;
     156:	88 e7       	ldi	r24, 0x78	; 120
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	fc 01       	movw	r30, r24
     15c:	80 81       	ld	r24, Z
     15e:	91 81       	ldd	r25, Z+1	; 0x01
     160:	9a 83       	std	Y+2, r25	; 0x02
     162:	89 83       	std	Y+1, r24	; 0x01
    ADC = 0;
     164:	88 e7       	ldi	r24, 0x78	; 120
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	fc 01       	movw	r30, r24
     16a:	11 82       	std	Z+1, r1	; 0x01
     16c:	10 82       	st	Z, r1
    
    uint8_t uart_success = 1;
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	8b 83       	std	Y+3, r24	; 0x03
    if (uart_success) {
     172:	8b 81       	ldd	r24, Y+3	; 0x03
     174:	88 23       	and	r24, r24
     176:	19 f1       	breq	.+70     	; 0x1be <__vector_24+0xa0>
        char str[20];
        sprintf(str, "Res: %d\n", res);
     178:	8a 81       	ldd	r24, Y+2	; 0x02
     17a:	8f 93       	push	r24
     17c:	89 81       	ldd	r24, Y+1	; 0x01
     17e:	8f 93       	push	r24
     180:	85 e1       	ldi	r24, 0x15	; 21
     182:	91 e0       	ldi	r25, 0x01	; 1
     184:	89 2f       	mov	r24, r25
     186:	8f 93       	push	r24
     188:	85 e1       	ldi	r24, 0x15	; 21
     18a:	91 e0       	ldi	r25, 0x01	; 1
     18c:	8f 93       	push	r24
     18e:	ce 01       	movw	r24, r28
     190:	04 96       	adiw	r24, 0x04	; 4
     192:	29 2f       	mov	r18, r25
     194:	2f 93       	push	r18
     196:	8f 93       	push	r24
     198:	96 d4       	rcall	.+2348   	; 0xac6 <sprintf>
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	0f 90       	pop	r0
     1a0:	0f 90       	pop	r0
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
        if (uart_send_isr(str) > 0){
     1a6:	ce 01       	movw	r24, r28
     1a8:	04 96       	adiw	r24, 0x04	; 4
     1aa:	b4 d3       	rcall	.+1896   	; 0x914 <uart_send_isr>
     1ac:	89 2b       	or	r24, r25
     1ae:	a1 f0       	breq	.+40     	; 0x1d8 <__vector_24+0xba>
            uart_success = 0;
     1b0:	1b 82       	std	Y+3, r1	; 0x03
            temp_index++;
     1b2:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <temp_index>
     1b6:	8f 5f       	subi	r24, 0xFF	; 255
     1b8:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <temp_index>
     1bc:	0d c0       	rjmp	.+26     	; 0x1d8 <__vector_24+0xba>
        }
    }else {
        temp_index++;
     1be:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <temp_index>
     1c2:	8f 5f       	subi	r24, 0xFF	; 255
     1c4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <temp_index>
        if (temp_index >= 100) {
     1c8:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <temp_index>
     1cc:	84 36       	cpi	r24, 0x64	; 100
     1ce:	20 f0       	brcs	.+8      	; 0x1d8 <__vector_24+0xba>
            temp_index = 0;
     1d0:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <temp_index>
            uart_success = 1;
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	8b 83       	std	Y+3, r24	; 0x03
        }
    }
    
    
    switch (ADMUX & (1 << MUX0)) {
     1d8:	8c e7       	ldi	r24, 0x7C	; 124
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	fc 01       	movw	r30, r24
     1de:	80 81       	ld	r24, Z
     1e0:	88 2f       	mov	r24, r24
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	81 70       	andi	r24, 0x01	; 1
     1e6:	99 27       	eor	r25, r25
     1e8:	00 97       	sbiw	r24, 0x00	; 0
     1ea:	19 f0       	breq	.+6      	; 0x1f2 <__vector_24+0xd4>
     1ec:	01 97       	sbiw	r24, 0x01	; 1
                Led4_Off();
            }
            break;
            
        default:
            break;
     1ee:	79 f1       	breq	.+94     	; 0x24e <__vector_24+0x130>
    }
    
    
    switch (ADMUX & (1 << MUX0)) {
        case 0:
			Led7_On();
     1f0:	5c c0       	rjmp	.+184    	; 0x2aa <__vector_24+0x18c>
     1f2:	ef d0       	rcall	.+478    	; 0x3d2 <Led7_On>
            if (index_LM35 == 42) {
     1f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1f8:	8a 32       	cpi	r24, 0x2A	; 42
                index_LM35 = 0; // Trash first conversion
     1fa:	21 f4       	brne	.+8      	; 0x204 <__vector_24+0xe6>
     1fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
                Led4_On();
     200:	a4 d0       	rcall	.+328    	; 0x34a <Led4_On>
            }else {
                ADMUX |= (1 << MUX0);
                index_LM35 = 42;
                Led4_Off();
            }
            break;
     202:	53 c0       	rjmp	.+166    	; 0x2aa <__vector_24+0x18c>
        case 0:
			Led7_On();
            if (index_LM35 == 42) {
                index_LM35 = 0; // Trash first conversion
                Led4_On();
            }else if (index_LM35 >= 0 && index_LM35 <= 7) {
     204:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     208:	88 30       	cpi	r24, 0x08	; 8
     20a:	98 f4       	brcc	.+38     	; 0x232 <__vector_24+0x114>
                LM35_Array[index_LM35] = res;
     20c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     210:	88 2f       	mov	r24, r24
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	82 5e       	subi	r24, 0xE2	; 226
     21a:	9e 4f       	sbci	r25, 0xFE	; 254
     21c:	29 81       	ldd	r18, Y+1	; 0x01
     21e:	3a 81       	ldd	r19, Y+2	; 0x02
     220:	fc 01       	movw	r30, r24
     222:	31 83       	std	Z+1, r19	; 0x01
     224:	20 83       	st	Z, r18
                index_LM35++;
     226:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     22a:	8f 5f       	subi	r24, 0xFF	; 255
     22c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
            }else {
                ADMUX |= (1 << MUX0);
                index_LM35 = 42;
                Led4_Off();
            }
            break;
     230:	3c c0       	rjmp	.+120    	; 0x2aa <__vector_24+0x18c>
                Led4_On();
            }else if (index_LM35 >= 0 && index_LM35 <= 7) {
                LM35_Array[index_LM35] = res;
                index_LM35++;
            }else {
                ADMUX |= (1 << MUX0);
     232:	8c e7       	ldi	r24, 0x7C	; 124
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	2c e7       	ldi	r18, 0x7C	; 124
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	f9 01       	movw	r30, r18
     23c:	20 81       	ld	r18, Z
     23e:	21 60       	ori	r18, 0x01	; 1
     240:	fc 01       	movw	r30, r24
                index_LM35 = 42;
     242:	20 83       	st	Z, r18
     244:	8a e2       	ldi	r24, 0x2A	; 42
                Led4_Off();
     246:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
            }
            break;
     24a:	90 d0       	rcall	.+288    	; 0x36c <Led4_Off>
            
        case 1:
            Led8_On();
     24c:	2e c0       	rjmp	.+92     	; 0x2aa <__vector_24+0x18c>
            if (index_Poti == 42) {
     24e:	d2 d0       	rcall	.+420    	; 0x3f4 <Led8_On>
     250:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     254:	8a 32       	cpi	r24, 0x2A	; 42
                Led5_On();
     256:	21 f4       	brne	.+8      	; 0x260 <__vector_24+0x142>
     258:	9a d0       	rcall	.+308    	; 0x38e <Led5_On>
                index_Poti = 0; // Trash first conversion
     25a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <index_Poti>
            }else {
                ADMUX &= ~(1 << MUX0);
                index_Poti = 42;
                Led4_Off();
            }
            break;
     25e:	24 c0       	rjmp	.+72     	; 0x2a8 <__vector_24+0x18a>
        case 1:
            Led8_On();
            if (index_Poti == 42) {
                Led5_On();
                index_Poti = 0; // Trash first conversion
            }else if (index_Poti >= 0 && index_Poti <= 7) {
     260:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     264:	88 30       	cpi	r24, 0x08	; 8
     266:	98 f4       	brcc	.+38     	; 0x28e <__vector_24+0x170>
                Poti_Array[index_Poti] = res;
     268:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     26c:	88 2f       	mov	r24, r24
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	88 0f       	add	r24, r24
     272:	99 1f       	adc	r25, r25
     274:	82 5d       	subi	r24, 0xD2	; 210
     276:	9e 4f       	sbci	r25, 0xFE	; 254
     278:	29 81       	ldd	r18, Y+1	; 0x01
     27a:	3a 81       	ldd	r19, Y+2	; 0x02
     27c:	fc 01       	movw	r30, r24
     27e:	31 83       	std	Z+1, r19	; 0x01
     280:	20 83       	st	Z, r18
                index_Poti++;
     282:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <index_Poti>
     286:	8f 5f       	subi	r24, 0xFF	; 255
     288:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <index_Poti>
            }else {
                ADMUX &= ~(1 << MUX0);
                index_Poti = 42;
                Led4_Off();
            }
            break;
     28c:	0d c0       	rjmp	.+26     	; 0x2a8 <__vector_24+0x18a>
                index_Poti = 0; // Trash first conversion
            }else if (index_Poti >= 0 && index_Poti <= 7) {
                Poti_Array[index_Poti] = res;
                index_Poti++;
            }else {
                ADMUX &= ~(1 << MUX0);
     28e:	8c e7       	ldi	r24, 0x7C	; 124
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	2c e7       	ldi	r18, 0x7C	; 124
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	f9 01       	movw	r30, r18
     298:	20 81       	ld	r18, Z
     29a:	2e 7f       	andi	r18, 0xFE	; 254
     29c:	fc 01       	movw	r30, r24
                index_Poti = 42;
     29e:	20 83       	st	Z, r18
     2a0:	8a e2       	ldi	r24, 0x2A	; 42
     2a2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <index_Poti>
                Led4_Off();
     2a6:	62 d0       	rcall	.+196    	; 0x36c <Led4_Off>
            }
            break;
     2a8:	00 00       	nop
            
        default:
            break;
    }
    
    ADCSRA |= (1 << ADSC);
     2aa:	8a e7       	ldi	r24, 0x7A	; 122
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	2a e7       	ldi	r18, 0x7A	; 122
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	f9 01       	movw	r30, r18
     2b4:	20 81       	ld	r18, Z
     2b6:	20 64       	ori	r18, 0x40	; 64
     2b8:	fc 01       	movw	r30, r24
     2ba:	20 83       	st	Z, r18
}
     2bc:	00 00       	nop
     2be:	67 96       	adiw	r28, 0x17	; 23
     2c0:	0f b6       	in	r0, 0x3f	; 63
     2c2:	f8 94       	cli
     2c4:	de bf       	out	0x3e, r29	; 62
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	cd bf       	out	0x3d, r28	; 61
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	ff 91       	pop	r31
     2d0:	ef 91       	pop	r30
     2d2:	bf 91       	pop	r27
     2d4:	af 91       	pop	r26
     2d6:	9f 91       	pop	r25
     2d8:	8f 91       	pop	r24
     2da:	7f 91       	pop	r23
     2dc:	6f 91       	pop	r22
     2de:	5f 91       	pop	r21
     2e0:	4f 91       	pop	r20
     2e2:	3f 91       	pop	r19
     2e4:	2f 91       	pop	r18
     2e6:	0f 90       	pop	r0
     2e8:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     2ec:	0f 90       	pop	r0
     2ee:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     2f2:	0f 90       	pop	r0
     2f4:	1f 90       	pop	r1
     2f6:	18 95       	reti

000002f8 <Led_init>:
void Led7_On(void) {
    PORTB |= (1 << 1);
}
void Led7_Off(void) {
    PORTB &= ~(1 << 1);
}
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	1f 92       	push	r1
     2fe:	cd b7       	in	r28, 0x3d	; 61
     300:	de b7       	in	r29, 0x3e	; 62
     302:	89 83       	std	Y+1, r24	; 0x01
     304:	84 e2       	ldi	r24, 0x24	; 36
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	2f ef       	ldi	r18, 0xFF	; 255
     30a:	fc 01       	movw	r30, r24
     30c:	20 83       	st	Z, r18
     30e:	85 e2       	ldi	r24, 0x25	; 37
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	fc 01       	movw	r30, r24
     314:	10 82       	st	Z, r1
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	88 23       	and	r24, r24
     31a:	91 f0       	breq	.+36     	; 0x340 <Led_init+0x48>
     31c:	8a e2       	ldi	r24, 0x2A	; 42
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	2a e2       	ldi	r18, 0x2A	; 42
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	f9 01       	movw	r30, r18
     326:	20 81       	ld	r18, Z
     328:	2f 61       	ori	r18, 0x1F	; 31
     32a:	fc 01       	movw	r30, r24
     32c:	20 83       	st	Z, r18
     32e:	8b e2       	ldi	r24, 0x2B	; 43
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	2b e2       	ldi	r18, 0x2B	; 43
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	f9 01       	movw	r30, r18
     338:	20 81       	ld	r18, Z
     33a:	20 7e       	andi	r18, 0xE0	; 224
     33c:	fc 01       	movw	r30, r24
     33e:	20 83       	st	Z, r18
     340:	00 00       	nop
     342:	0f 90       	pop	r0
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	08 95       	ret

0000034a <Led4_On>:
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	85 e2       	ldi	r24, 0x25	; 37
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	25 e2       	ldi	r18, 0x25	; 37
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	f9 01       	movw	r30, r18
     35c:	20 81       	ld	r18, Z
     35e:	20 61       	ori	r18, 0x10	; 16
     360:	fc 01       	movw	r30, r24
     362:	20 83       	st	Z, r18
     364:	00 00       	nop
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	08 95       	ret

0000036c <Led4_Off>:
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	cd b7       	in	r28, 0x3d	; 61
     372:	de b7       	in	r29, 0x3e	; 62
     374:	85 e2       	ldi	r24, 0x25	; 37
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	25 e2       	ldi	r18, 0x25	; 37
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	2f 7e       	andi	r18, 0xEF	; 239
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	00 00       	nop
     388:	df 91       	pop	r29
     38a:	cf 91       	pop	r28
     38c:	08 95       	ret

0000038e <Led5_On>:
     38e:	cf 93       	push	r28
     390:	df 93       	push	r29
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	85 e2       	ldi	r24, 0x25	; 37
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	25 e2       	ldi	r18, 0x25	; 37
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	f9 01       	movw	r30, r18
     3a0:	20 81       	ld	r18, Z
     3a2:	28 60       	ori	r18, 0x08	; 8
     3a4:	fc 01       	movw	r30, r24
     3a6:	20 83       	st	Z, r18
     3a8:	00 00       	nop
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	08 95       	ret

000003b0 <Led6_On>:
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	cd b7       	in	r28, 0x3d	; 61
     3b6:	de b7       	in	r29, 0x3e	; 62
     3b8:	85 e2       	ldi	r24, 0x25	; 37
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	25 e2       	ldi	r18, 0x25	; 37
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	f9 01       	movw	r30, r18
     3c2:	20 81       	ld	r18, Z
     3c4:	24 60       	ori	r18, 0x04	; 4
     3c6:	fc 01       	movw	r30, r24
     3c8:	20 83       	st	Z, r18
     3ca:	00 00       	nop
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <Led7_On>:
     3d2:	cf 93       	push	r28
     3d4:	df 93       	push	r29
     3d6:	cd b7       	in	r28, 0x3d	; 61
     3d8:	de b7       	in	r29, 0x3e	; 62
     3da:	85 e2       	ldi	r24, 0x25	; 37
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	25 e2       	ldi	r18, 0x25	; 37
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	f9 01       	movw	r30, r18
     3e4:	20 81       	ld	r18, Z
     3e6:	22 60       	ori	r18, 0x02	; 2
     3e8:	fc 01       	movw	r30, r24
     3ea:	20 83       	st	Z, r18
     3ec:	00 00       	nop
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	08 95       	ret

000003f4 <Led8_On>:

/**
led8 - ioB0
*/
void Led8_On(void) {
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	cd b7       	in	r28, 0x3d	; 61
     3fa:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1 << 0);
     3fc:	85 e2       	ldi	r24, 0x25	; 37
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	25 e2       	ldi	r18, 0x25	; 37
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	f9 01       	movw	r30, r18
     406:	20 81       	ld	r18, Z
     408:	21 60       	ori	r18, 0x01	; 1
     40a:	fc 01       	movw	r30, r24
     40c:	20 83       	st	Z, r18
}
     40e:	00 00       	nop
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	08 95       	ret

00000416 <Taster_init>:
 ---------------------
 - DDR Reg has to be set to 0
 - PORT Reg has to be set to 1
 -> Pin is input with pull-up
 */
void Taster_init() {
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	cd b7       	in	r28, 0x3d	; 61
     41c:	de b7       	in	r29, 0x3e	; 62
    
    // set to inputs
    DDRC &= ~(1 << 2);
     41e:	87 e2       	ldi	r24, 0x27	; 39
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	27 e2       	ldi	r18, 0x27	; 39
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	f9 01       	movw	r30, r18
     428:	20 81       	ld	r18, Z
     42a:	2b 7f       	andi	r18, 0xFB	; 251
     42c:	fc 01       	movw	r30, r24
     42e:	20 83       	st	Z, r18
    DDRD &= ~( (1 << 7) | (1 << 6) | (1 << 5) );
     430:	8a e2       	ldi	r24, 0x2A	; 42
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	2a e2       	ldi	r18, 0x2A	; 42
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	f9 01       	movw	r30, r18
     43a:	20 81       	ld	r18, Z
     43c:	2f 71       	andi	r18, 0x1F	; 31
     43e:	fc 01       	movw	r30, r24
     440:	20 83       	st	Z, r18
    
    // enable pull-up
    PORTC |= (1 << 2);
     442:	88 e2       	ldi	r24, 0x28	; 40
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	28 e2       	ldi	r18, 0x28	; 40
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	f9 01       	movw	r30, r18
     44c:	20 81       	ld	r18, Z
     44e:	24 60       	ori	r18, 0x04	; 4
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18
    PORTD |= (1 << 7) | (1 << 6) | (1 << 5);
     454:	8b e2       	ldi	r24, 0x2B	; 43
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	2b e2       	ldi	r18, 0x2B	; 43
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	f9 01       	movw	r30, r18
     45e:	20 81       	ld	r18, Z
     460:	20 6e       	ori	r18, 0xE0	; 224
     462:	fc 01       	movw	r30, r24
     464:	20 83       	st	Z, r18
}
     466:	00 00       	nop
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <main>:
#include <avr/interrupt.h>
#include "adc/adc.h"

#define CLK_F_MHZ 16

int main(void) {
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
     476:	c7 57       	subi	r28, 0x77	; 119
     478:	d1 09       	sbc	r29, r1
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	f8 94       	cli
     47e:	de bf       	out	0x3e, r29	; 62
     480:	0f be       	out	0x3f, r0	; 63
     482:	cd bf       	out	0x3d, r28	; 61
	
    cli();
     484:	f8 94       	cli
    Led_init(0);	// Don't set LEDs at PORTD
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	37 df       	rcall	.-402    	; 0x2f8 <Led_init>
	Taster_init();
     48a:	c5 df       	rcall	.-118    	; 0x416 <Taster_init>
    Timer_init(CLK_F_MHZ); // Init timer with 16MHZ clock
     48c:	80 e1       	ldi	r24, 0x10	; 16
	uart_init_isr();
     48e:	11 d0       	rcall	.+34     	; 0x4b2 <Timer_init>
    adc_init();
     490:	26 d2       	rcall	.+1100   	; 0x8de <uart_init_isr>
     492:	1a de       	rcall	.-972    	; 0xc8 <adc_init>
	sei();
     494:	78 94       	sei
    
    uint16_t timeVarMain = Timer_getTick();
     496:	a4 d0       	rcall	.+328    	; 0x5e0 <Timer_getTick>
     498:	9a 83       	std	Y+2, r25	; 0x02
     49a:	89 83       	std	Y+1, r24	; 0x01
     49c:	22 e3       	ldi	r18, 0x32	; 50
    char data_s;
    char data[50] = {0};
     49e:	ce 01       	movw	r24, r28
     4a0:	05 96       	adiw	r24, 0x05	; 5
     4a2:	fc 01       	movw	r30, r24
     4a4:	32 2f       	mov	r19, r18
     4a6:	11 92       	st	Z+, r1
     4a8:	3a 95       	dec	r19
     4aa:	e9 f7       	brne	.-6      	; 0x4a6 <main+0x38>
     4ac:	1c 82       	std	Y+4, r1	; 0x04
    int i = 0;
     4ae:	1b 82       	std	Y+3, r1	; 0x03
     4b0:	ff cf       	rjmp	.-2      	; 0x4b0 <main+0x42>

000004b2 <Timer_init>:
            }
        }*/
        
        //trafficLight(0);
        //playground();
    }
     4b2:	cf 93       	push	r28
    }
    
    TIMSK0 &= ~(1 << OCIE0B);   // disable Output Compare Match B Interrupt
    TIMSK0 |= (1 << OCIE0A);    // enable Output Compare Match A Interrupt
    TIMSK0 &= ~(1 << TOIE0);    // disable timer overflow interrupt
}
     4b4:	df 93       	push	r29
     4b6:	1f 92       	push	r1
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
     4bc:	89 83       	std	Y+1, r24	; 0x01
     4be:	89 81       	ldd	r24, Y+1	; 0x01
     4c0:	88 2f       	mov	r24, r24
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	05 d0       	rcall	.+10     	; 0x4d0 <Timer_init_withoutStruct>
     4c6:	00 00       	nop
     4c8:	0f 90       	pop	r0
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <Timer_init_withoutStruct>:

void Timer_init_withoutStruct(uint8_t clockFreqMhz) {
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	1f 92       	push	r1
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
     4da:	89 83       	std	Y+1, r24	; 0x01
    // datasheet page 97
    // set mode to clear timer on compare (CTC)
    TCCR0B &= ~(1 << WGM02);
     4dc:	85 e4       	ldi	r24, 0x45	; 69
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	25 e4       	ldi	r18, 0x45	; 69
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	f9 01       	movw	r30, r18
     4e6:	20 81       	ld	r18, Z
     4e8:	27 7f       	andi	r18, 0xF7	; 247
     4ea:	fc 01       	movw	r30, r24
     4ec:	20 83       	st	Z, r18
    TCCR0A |= (1 << WGM01);
     4ee:	84 e4       	ldi	r24, 0x44	; 68
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	24 e4       	ldi	r18, 0x44	; 68
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	f9 01       	movw	r30, r18
     4f8:	20 81       	ld	r18, Z
     4fa:	22 60       	ori	r18, 0x02	; 2
     4fc:	fc 01       	movw	r30, r24
     4fe:	20 83       	st	Z, r18
    TCCR0A &= ~(1 << WGM00);
     500:	84 e4       	ldi	r24, 0x44	; 68
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	24 e4       	ldi	r18, 0x44	; 68
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	f9 01       	movw	r30, r18
     50a:	20 81       	ld	r18, Z
     50c:	2e 7f       	andi	r18, 0xFE	; 254
     50e:	fc 01       	movw	r30, r24
     510:	20 83       	st	Z, r18
    
    
    switch (clockFreqMhz) {
     512:	89 81       	ldd	r24, Y+1	; 0x01
     514:	88 2f       	mov	r24, r24
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	40 97       	sbiw	r24, 0x10	; 16
     51a:	09 f5       	brne	.+66     	; 0x55e <Timer_init_withoutStruct+0x8e>
        case 16:
            // extern osc (16 MHZ)
            
            // set OCR0A-reg (top value of timer)
            OCR0A = 249;   // dez 249; range 0 - 249 -> 250 cycles till interrupt
     51c:	87 e4       	ldi	r24, 0x47	; 71
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	29 ef       	ldi	r18, 0xF9	; 249
     522:	fc 01       	movw	r30, r24
     524:	20 83       	st	Z, r18
            
            // set prescaler to 1/64
            TCCR0B &= ~(1 << CS02);
     526:	85 e4       	ldi	r24, 0x45	; 69
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	25 e4       	ldi	r18, 0x45	; 69
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	f9 01       	movw	r30, r18
     530:	20 81       	ld	r18, Z
     532:	2b 7f       	andi	r18, 0xFB	; 251
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS01);
     538:	85 e4       	ldi	r24, 0x45	; 69
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	25 e4       	ldi	r18, 0x45	; 69
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	f9 01       	movw	r30, r18
     542:	20 81       	ld	r18, Z
     544:	22 60       	ori	r18, 0x02	; 2
     546:	fc 01       	movw	r30, r24
     548:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS00);
     54a:	85 e4       	ldi	r24, 0x45	; 69
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	25 e4       	ldi	r18, 0x45	; 69
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	f9 01       	movw	r30, r18
     554:	20 81       	ld	r18, Z
     556:	21 60       	ori	r18, 0x01	; 1
     558:	fc 01       	movw	r30, r24
     55a:	20 83       	st	Z, r18
            break;
     55c:	21 c0       	rjmp	.+66     	; 0x5a0 <Timer_init_withoutStruct+0xd0>
            
        default:
            // inter osc (8 MHZ divided by 8 -> 1 MHZ clock)
            
            // set OCR0A-reg (top value of timer)
            OCR0A = 0x7C;   // dez 124; range 0 - 124 -> 125 cycles till interrupt
     55e:	87 e4       	ldi	r24, 0x47	; 71
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	2c e7       	ldi	r18, 0x7C	; 124
     564:	fc 01       	movw	r30, r24
     566:	20 83       	st	Z, r18
            
            // set prescaler to 1/8
            TCCR0B &= ~(1 << CS02);
     568:	85 e4       	ldi	r24, 0x45	; 69
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	25 e4       	ldi	r18, 0x45	; 69
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	f9 01       	movw	r30, r18
     572:	20 81       	ld	r18, Z
     574:	2b 7f       	andi	r18, 0xFB	; 251
     576:	fc 01       	movw	r30, r24
     578:	20 83       	st	Z, r18
            TCCR0B |= (1 << CS01);
     57a:	85 e4       	ldi	r24, 0x45	; 69
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	25 e4       	ldi	r18, 0x45	; 69
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	f9 01       	movw	r30, r18
     584:	20 81       	ld	r18, Z
     586:	22 60       	ori	r18, 0x02	; 2
     588:	fc 01       	movw	r30, r24
     58a:	20 83       	st	Z, r18
            TCCR0B &= ~(1 << CS00);
     58c:	85 e4       	ldi	r24, 0x45	; 69
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	25 e4       	ldi	r18, 0x45	; 69
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	f9 01       	movw	r30, r18
     596:	20 81       	ld	r18, Z
     598:	2e 7f       	andi	r18, 0xFE	; 254
     59a:	fc 01       	movw	r30, r24
     59c:	20 83       	st	Z, r18
            break;
     59e:	00 00       	nop
    }
    
    TIMSK0 &= ~(1 << OCIE0B);   // disable Output Compare Match B Interrupt
     5a0:	8e e6       	ldi	r24, 0x6E	; 110
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	2e e6       	ldi	r18, 0x6E	; 110
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	f9 01       	movw	r30, r18
     5aa:	20 81       	ld	r18, Z
     5ac:	2b 7f       	andi	r18, 0xFB	; 251
     5ae:	fc 01       	movw	r30, r24
     5b0:	20 83       	st	Z, r18
    TIMSK0 |= (1 << OCIE0A);    // enable Output Compare Match A Interrupt
     5b2:	8e e6       	ldi	r24, 0x6E	; 110
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	2e e6       	ldi	r18, 0x6E	; 110
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	f9 01       	movw	r30, r18
     5bc:	20 81       	ld	r18, Z
     5be:	22 60       	ori	r18, 0x02	; 2
     5c0:	fc 01       	movw	r30, r24
     5c2:	20 83       	st	Z, r18
    TIMSK0 &= ~(1 << TOIE0);    // disable timer overflow interrupt
     5c4:	8e e6       	ldi	r24, 0x6E	; 110
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	2e e6       	ldi	r18, 0x6E	; 110
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	f9 01       	movw	r30, r18
     5ce:	20 81       	ld	r18, Z
     5d0:	2e 7f       	andi	r18, 0xFE	; 254
     5d2:	fc 01       	movw	r30, r24
     5d4:	20 83       	st	Z, r18
}
     5d6:	00 00       	nop
     5d8:	0f 90       	pop	r0
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	08 95       	ret

000005e0 <Timer_getTick>:

uint16_t Timer_getTick() {
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
     5e4:	00 d0       	rcall	.+0      	; 0x5e6 <Timer_getTick+0x6>
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
    // disable global interrupt
    cli();
     5ea:	f8 94       	cli
    
    // store timer_count in a temp int that can't get changed by ISR
    uint16_t temp_timer_count = timer_count;
     5ec:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <timer_count>
     5f0:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <timer_count+0x1>
     5f4:	9a 83       	std	Y+2, r25	; 0x02
     5f6:	89 83       	std	Y+1, r24	; 0x01
    
    // enable global interrupt
    sei();
     5f8:	78 94       	sei

    return temp_timer_count;
     5fa:	89 81       	ldd	r24, Y+1	; 0x01
     5fc:	9a 81       	ldd	r25, Y+2	; 0x02
}
     5fe:	0f 90       	pop	r0
     600:	0f 90       	pop	r0
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	08 95       	ret

00000608 <__vector_16>:
 ( not used atm)
 Timer compare A interrput:
 - increase timer_count
 - if timer_count is at max of uint16, set it to 0
 */
ISR(TIMER0_COMPA_vect){
     608:	1f 92       	push	r1
     60a:	0f 92       	push	r0
     60c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     610:	0f 92       	push	r0
     612:	11 24       	eor	r1, r1
     614:	8f 93       	push	r24
     616:	9f 93       	push	r25
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	cd b7       	in	r28, 0x3d	; 61
     61e:	de b7       	in	r29, 0x3e	; 62
    timer_count++;
     620:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <timer_count>
     624:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <timer_count+0x1>
     628:	01 96       	adiw	r24, 0x01	; 1
     62a:	90 93 40 01 	sts	0x0140, r25	; 0x800140 <timer_count+0x1>
     62e:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <timer_count>
}
     632:	00 00       	nop
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	9f 91       	pop	r25
     63a:	8f 91       	pop	r24
     63c:	0f 90       	pop	r0
     63e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     642:	0f 90       	pop	r0
     644:	1f 90       	pop	r1
     646:	18 95       	reti

00000648 <buff_put>:
        // Return byte
        return pByte;
    }else {
        return 0;
    }
}
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	00 d0       	rcall	.+0      	; 0x64e <buff_put+0x6>
     64e:	1f 92       	push	r1
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	7b 83       	std	Y+3, r23	; 0x03
     658:	6a 83       	std	Y+2, r22	; 0x02
     65a:	81 ec       	ldi	r24, 0xC1	; 193
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	21 ec       	ldi	r18, 0xC1	; 193
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	f9 01       	movw	r30, r18
     664:	20 81       	ld	r18, Z
     666:	2f 7d       	andi	r18, 0xDF	; 223
     668:	fc 01       	movw	r30, r24
     66a:	20 83       	st	Z, r18
     66c:	81 ec       	ldi	r24, 0xC1	; 193
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	21 ec       	ldi	r18, 0xC1	; 193
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	f9 01       	movw	r30, r18
     676:	20 81       	ld	r18, Z
     678:	2f 77       	andi	r18, 0x7F	; 127
     67a:	fc 01       	movw	r30, r24
     67c:	20 83       	st	Z, r18
     67e:	8a 81       	ldd	r24, Y+2	; 0x02
     680:	9b 81       	ldd	r25, Y+3	; 0x03
     682:	8e 5f       	subi	r24, 0xFE	; 254
     684:	9d 4f       	sbci	r25, 0xFD	; 253
     686:	fc 01       	movw	r30, r24
     688:	80 81       	ld	r24, Z
     68a:	91 81       	ldd	r25, Z+1	; 0x01
     68c:	9c 01       	movw	r18, r24
     68e:	2f 5f       	subi	r18, 0xFF	; 255
     690:	3f 4f       	sbci	r19, 0xFF	; 255
     692:	8a 81       	ldd	r24, Y+2	; 0x02
     694:	9b 81       	ldd	r25, Y+3	; 0x03
     696:	9e 5f       	subi	r25, 0xFE	; 254
     698:	fc 01       	movw	r30, r24
     69a:	80 81       	ld	r24, Z
     69c:	91 81       	ldd	r25, Z+1	; 0x01
     69e:	28 17       	cp	r18, r24
     6a0:	39 07       	cpc	r19, r25
     6a2:	91 f0       	breq	.+36     	; 0x6c8 <buff_put+0x80>
     6a4:	8a 81       	ldd	r24, Y+2	; 0x02
     6a6:	9b 81       	ldd	r25, Y+3	; 0x03
     6a8:	9e 5f       	subi	r25, 0xFE	; 254
     6aa:	fc 01       	movw	r30, r24
     6ac:	80 81       	ld	r24, Z
     6ae:	91 81       	ldd	r25, Z+1	; 0x01
     6b0:	89 2b       	or	r24, r25
     6b2:	f1 f4       	brne	.+60     	; 0x6f0 <buff_put+0xa8>
     6b4:	8a 81       	ldd	r24, Y+2	; 0x02
     6b6:	9b 81       	ldd	r25, Y+3	; 0x03
     6b8:	8e 5f       	subi	r24, 0xFE	; 254
     6ba:	9d 4f       	sbci	r25, 0xFD	; 253
     6bc:	fc 01       	movw	r30, r24
     6be:	80 81       	ld	r24, Z
     6c0:	91 81       	ldd	r25, Z+1	; 0x01
     6c2:	8f 3f       	cpi	r24, 0xFF	; 255
     6c4:	91 40       	sbci	r25, 0x01	; 1
     6c6:	a1 f4       	brne	.+40     	; 0x6f0 <buff_put+0xa8>
     6c8:	81 ec       	ldi	r24, 0xC1	; 193
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	21 ec       	ldi	r18, 0xC1	; 193
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	f9 01       	movw	r30, r18
     6d2:	20 81       	ld	r18, Z
     6d4:	20 62       	ori	r18, 0x20	; 32
     6d6:	fc 01       	movw	r30, r24
     6d8:	20 83       	st	Z, r18
     6da:	81 ec       	ldi	r24, 0xC1	; 193
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	21 ec       	ldi	r18, 0xC1	; 193
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	f9 01       	movw	r30, r18
     6e4:	20 81       	ld	r18, Z
     6e6:	20 68       	ori	r18, 0x80	; 128
     6e8:	fc 01       	movw	r30, r24
     6ea:	20 83       	st	Z, r18
     6ec:	81 e0       	ldi	r24, 0x01	; 1
     6ee:	43 c0       	rjmp	.+134    	; 0x776 <buff_put+0x12e>
     6f0:	8a 81       	ldd	r24, Y+2	; 0x02
     6f2:	9b 81       	ldd	r25, Y+3	; 0x03
     6f4:	8e 5f       	subi	r24, 0xFE	; 254
     6f6:	9d 4f       	sbci	r25, 0xFD	; 253
     6f8:	fc 01       	movw	r30, r24
     6fa:	80 81       	ld	r24, Z
     6fc:	91 81       	ldd	r25, Z+1	; 0x01
     6fe:	2a 81       	ldd	r18, Y+2	; 0x02
     700:	3b 81       	ldd	r19, Y+3	; 0x03
     702:	82 0f       	add	r24, r18
     704:	93 1f       	adc	r25, r19
     706:	29 81       	ldd	r18, Y+1	; 0x01
     708:	fc 01       	movw	r30, r24
     70a:	20 83       	st	Z, r18
     70c:	8a 81       	ldd	r24, Y+2	; 0x02
     70e:	9b 81       	ldd	r25, Y+3	; 0x03
     710:	8e 5f       	subi	r24, 0xFE	; 254
     712:	9d 4f       	sbci	r25, 0xFD	; 253
     714:	fc 01       	movw	r30, r24
     716:	80 81       	ld	r24, Z
     718:	91 81       	ldd	r25, Z+1	; 0x01
     71a:	9c 01       	movw	r18, r24
     71c:	2f 5f       	subi	r18, 0xFF	; 255
     71e:	3f 4f       	sbci	r19, 0xFF	; 255
     720:	8a 81       	ldd	r24, Y+2	; 0x02
     722:	9b 81       	ldd	r25, Y+3	; 0x03
     724:	8e 5f       	subi	r24, 0xFE	; 254
     726:	9d 4f       	sbci	r25, 0xFD	; 253
     728:	fc 01       	movw	r30, r24
     72a:	31 83       	std	Z+1, r19	; 0x01
     72c:	20 83       	st	Z, r18
     72e:	8a 81       	ldd	r24, Y+2	; 0x02
     730:	9b 81       	ldd	r25, Y+3	; 0x03
     732:	8e 5f       	subi	r24, 0xFE	; 254
     734:	9d 4f       	sbci	r25, 0xFD	; 253
     736:	fc 01       	movw	r30, r24
     738:	80 81       	ld	r24, Z
     73a:	91 81       	ldd	r25, Z+1	; 0x01
     73c:	81 15       	cp	r24, r1
     73e:	92 40       	sbci	r25, 0x02	; 2
     740:	38 f0       	brcs	.+14     	; 0x750 <buff_put+0x108>
     742:	8a 81       	ldd	r24, Y+2	; 0x02
     744:	9b 81       	ldd	r25, Y+3	; 0x03
     746:	8e 5f       	subi	r24, 0xFE	; 254
     748:	9d 4f       	sbci	r25, 0xFD	; 253
     74a:	fc 01       	movw	r30, r24
     74c:	11 82       	std	Z+1, r1	; 0x01
     74e:	10 82       	st	Z, r1
     750:	81 ec       	ldi	r24, 0xC1	; 193
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	21 ec       	ldi	r18, 0xC1	; 193
     756:	30 e0       	ldi	r19, 0x00	; 0
     758:	f9 01       	movw	r30, r18
     75a:	20 81       	ld	r18, Z
     75c:	20 62       	ori	r18, 0x20	; 32
     75e:	fc 01       	movw	r30, r24
     760:	20 83       	st	Z, r18
     762:	81 ec       	ldi	r24, 0xC1	; 193
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	21 ec       	ldi	r18, 0xC1	; 193
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	f9 01       	movw	r30, r18
     76c:	20 81       	ld	r18, Z
     76e:	20 68       	ori	r18, 0x80	; 128
     770:	fc 01       	movw	r30, r24
     772:	20 83       	st	Z, r18
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	0f 90       	pop	r0
     778:	0f 90       	pop	r0
     77a:	0f 90       	pop	r0
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	08 95       	ret

00000782 <buff_get>:
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	00 d0       	rcall	.+0      	; 0x788 <buff_get+0x6>
     788:	00 d0       	rcall	.+0      	; 0x78a <buff_get+0x8>
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	9a 83       	std	Y+2, r25	; 0x02
     790:	89 83       	std	Y+1, r24	; 0x01
     792:	7c 83       	std	Y+4, r23	; 0x04
     794:	6b 83       	std	Y+3, r22	; 0x03
     796:	81 ec       	ldi	r24, 0xC1	; 193
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	21 ec       	ldi	r18, 0xC1	; 193
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	f9 01       	movw	r30, r18
     7a0:	20 81       	ld	r18, Z
     7a2:	2f 7d       	andi	r18, 0xDF	; 223
     7a4:	fc 01       	movw	r30, r24
     7a6:	20 83       	st	Z, r18
     7a8:	81 ec       	ldi	r24, 0xC1	; 193
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	21 ec       	ldi	r18, 0xC1	; 193
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	f9 01       	movw	r30, r18
     7b2:	20 81       	ld	r18, Z
     7b4:	2f 77       	andi	r18, 0x7F	; 127
     7b6:	fc 01       	movw	r30, r24
     7b8:	20 83       	st	Z, r18
     7ba:	8b 81       	ldd	r24, Y+3	; 0x03
     7bc:	9c 81       	ldd	r25, Y+4	; 0x04
     7be:	9e 5f       	subi	r25, 0xFE	; 254
     7c0:	fc 01       	movw	r30, r24
     7c2:	20 81       	ld	r18, Z
     7c4:	31 81       	ldd	r19, Z+1	; 0x01
     7c6:	8b 81       	ldd	r24, Y+3	; 0x03
     7c8:	9c 81       	ldd	r25, Y+4	; 0x04
     7ca:	8e 5f       	subi	r24, 0xFE	; 254
     7cc:	9d 4f       	sbci	r25, 0xFD	; 253
     7ce:	fc 01       	movw	r30, r24
     7d0:	80 81       	ld	r24, Z
     7d2:	91 81       	ldd	r25, Z+1	; 0x01
     7d4:	28 17       	cp	r18, r24
     7d6:	39 07       	cpc	r19, r25
     7d8:	a1 f4       	brne	.+40     	; 0x802 <buff_get+0x80>
     7da:	81 ec       	ldi	r24, 0xC1	; 193
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	21 ec       	ldi	r18, 0xC1	; 193
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	f9 01       	movw	r30, r18
     7e4:	20 81       	ld	r18, Z
     7e6:	20 62       	ori	r18, 0x20	; 32
     7e8:	fc 01       	movw	r30, r24
     7ea:	20 83       	st	Z, r18
     7ec:	81 ec       	ldi	r24, 0xC1	; 193
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	21 ec       	ldi	r18, 0xC1	; 193
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	f9 01       	movw	r30, r18
     7f6:	20 81       	ld	r18, Z
     7f8:	20 68       	ori	r18, 0x80	; 128
     7fa:	fc 01       	movw	r30, r24
     7fc:	20 83       	st	Z, r18
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	41 c0       	rjmp	.+130    	; 0x884 <buff_get+0x102>
     802:	8b 81       	ldd	r24, Y+3	; 0x03
     804:	9c 81       	ldd	r25, Y+4	; 0x04
     806:	9e 5f       	subi	r25, 0xFE	; 254
     808:	fc 01       	movw	r30, r24
     80a:	80 81       	ld	r24, Z
     80c:	91 81       	ldd	r25, Z+1	; 0x01
     80e:	2b 81       	ldd	r18, Y+3	; 0x03
     810:	3c 81       	ldd	r19, Y+4	; 0x04
     812:	82 0f       	add	r24, r18
     814:	93 1f       	adc	r25, r19
     816:	fc 01       	movw	r30, r24
     818:	20 81       	ld	r18, Z
     81a:	89 81       	ldd	r24, Y+1	; 0x01
     81c:	9a 81       	ldd	r25, Y+2	; 0x02
     81e:	fc 01       	movw	r30, r24
     820:	20 83       	st	Z, r18
     822:	8b 81       	ldd	r24, Y+3	; 0x03
     824:	9c 81       	ldd	r25, Y+4	; 0x04
     826:	9e 5f       	subi	r25, 0xFE	; 254
     828:	fc 01       	movw	r30, r24
     82a:	80 81       	ld	r24, Z
     82c:	91 81       	ldd	r25, Z+1	; 0x01
     82e:	9c 01       	movw	r18, r24
     830:	2f 5f       	subi	r18, 0xFF	; 255
     832:	3f 4f       	sbci	r19, 0xFF	; 255
     834:	8b 81       	ldd	r24, Y+3	; 0x03
     836:	9c 81       	ldd	r25, Y+4	; 0x04
     838:	9e 5f       	subi	r25, 0xFE	; 254
     83a:	fc 01       	movw	r30, r24
     83c:	31 83       	std	Z+1, r19	; 0x01
     83e:	20 83       	st	Z, r18
     840:	8b 81       	ldd	r24, Y+3	; 0x03
     842:	9c 81       	ldd	r25, Y+4	; 0x04
     844:	9e 5f       	subi	r25, 0xFE	; 254
     846:	fc 01       	movw	r30, r24
     848:	80 81       	ld	r24, Z
     84a:	91 81       	ldd	r25, Z+1	; 0x01
     84c:	81 15       	cp	r24, r1
     84e:	92 40       	sbci	r25, 0x02	; 2
     850:	30 f0       	brcs	.+12     	; 0x85e <buff_get+0xdc>
     852:	8b 81       	ldd	r24, Y+3	; 0x03
     854:	9c 81       	ldd	r25, Y+4	; 0x04
     856:	9e 5f       	subi	r25, 0xFE	; 254
     858:	fc 01       	movw	r30, r24
     85a:	11 82       	std	Z+1, r1	; 0x01
     85c:	10 82       	st	Z, r1
     85e:	81 ec       	ldi	r24, 0xC1	; 193
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	21 ec       	ldi	r18, 0xC1	; 193
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	f9 01       	movw	r30, r18
     868:	20 81       	ld	r18, Z
     86a:	20 62       	ori	r18, 0x20	; 32
     86c:	fc 01       	movw	r30, r24
     86e:	20 83       	st	Z, r18
     870:	81 ec       	ldi	r24, 0xC1	; 193
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	21 ec       	ldi	r18, 0xC1	; 193
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	f9 01       	movw	r30, r18
     87a:	20 81       	ld	r18, Z
     87c:	20 68       	ori	r18, 0x80	; 128
     87e:	fc 01       	movw	r30, r24
     880:	20 83       	st	Z, r18
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	08 95       	ret

00000892 <uart_init>:
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	00 d0       	rcall	.+0      	; 0x898 <uart_init+0x6>
     898:	cd b7       	in	r28, 0x3d	; 61
     89a:	de b7       	in	r29, 0x3e	; 62
     89c:	87 e6       	ldi	r24, 0x67	; 103
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	9a 83       	std	Y+2, r25	; 0x02
     8a2:	89 83       	std	Y+1, r24	; 0x01
     8a4:	85 ec       	ldi	r24, 0xC5	; 197
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	29 81       	ldd	r18, Y+1	; 0x01
     8aa:	3a 81       	ldd	r19, Y+2	; 0x02
     8ac:	23 2f       	mov	r18, r19
     8ae:	33 27       	eor	r19, r19
     8b0:	fc 01       	movw	r30, r24
     8b2:	20 83       	st	Z, r18
     8b4:	84 ec       	ldi	r24, 0xC4	; 196
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	29 81       	ldd	r18, Y+1	; 0x01
     8ba:	fc 01       	movw	r30, r24
     8bc:	20 83       	st	Z, r18
     8be:	81 ec       	ldi	r24, 0xC1	; 193
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	28 e1       	ldi	r18, 0x18	; 24
     8c4:	fc 01       	movw	r30, r24
     8c6:	20 83       	st	Z, r18
     8c8:	82 ec       	ldi	r24, 0xC2	; 194
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	26 e0       	ldi	r18, 0x06	; 6
     8ce:	fc 01       	movw	r30, r24
     8d0:	20 83       	st	Z, r18
     8d2:	00 00       	nop
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	08 95       	ret

000008de <uart_init_isr>:
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	cd b7       	in	r28, 0x3d	; 61
     8e4:	de b7       	in	r29, 0x3e	; 62
     8e6:	d5 df       	rcall	.-86     	; 0x892 <uart_init>
     8e8:	81 ec       	ldi	r24, 0xC1	; 193
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	21 ec       	ldi	r18, 0xC1	; 193
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	f9 01       	movw	r30, r18
     8f2:	20 81       	ld	r18, Z
     8f4:	20 62       	ori	r18, 0x20	; 32
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 83       	st	Z, r18
     8fa:	81 ec       	ldi	r24, 0xC1	; 193
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	21 ec       	ldi	r18, 0xC1	; 193
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	f9 01       	movw	r30, r18
     904:	20 81       	ld	r18, Z
     906:	20 68       	ori	r18, 0x80	; 128
     908:	fc 01       	movw	r30, r24
     90a:	20 83       	st	Z, r18
     90c:	00 00       	nop
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	08 95       	ret

00000914 <uart_send_isr>:
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	00 d0       	rcall	.+0      	; 0x91a <uart_send_isr+0x6>
     91a:	00 d0       	rcall	.+0      	; 0x91c <uart_send_isr+0x8>
     91c:	00 d0       	rcall	.+0      	; 0x91e <uart_send_isr+0xa>
     91e:	cd b7       	in	r28, 0x3d	; 61
     920:	de b7       	in	r29, 0x3e	; 62
     922:	9e 83       	std	Y+6, r25	; 0x06
     924:	8d 83       	std	Y+5, r24	; 0x05
     926:	8d 81       	ldd	r24, Y+5	; 0x05
     928:	9e 81       	ldd	r25, Y+6	; 0x06
     92a:	c4 d0       	rcall	.+392    	; 0xab4 <strlen>
     92c:	9c 83       	std	Y+4, r25	; 0x04
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	1a 82       	std	Y+2, r1	; 0x02
     932:	19 82       	std	Y+1, r1	; 0x01
     934:	23 c0       	rjmp	.+70     	; 0x97c <uart_send_isr+0x68>
     936:	89 81       	ldd	r24, Y+1	; 0x01
     938:	9a 81       	ldd	r25, Y+2	; 0x02
     93a:	2d 81       	ldd	r18, Y+5	; 0x05
     93c:	3e 81       	ldd	r19, Y+6	; 0x06
     93e:	82 0f       	add	r24, r18
     940:	93 1f       	adc	r25, r19
     942:	fc 01       	movw	r30, r24
     944:	80 81       	ld	r24, Z
     946:	61 e4       	ldi	r22, 0x41	; 65
     948:	71 e0       	ldi	r23, 0x01	; 1
     94a:	7e de       	rcall	.-772    	; 0x648 <buff_put>
     94c:	81 30       	cpi	r24, 0x01	; 1
     94e:	89 f4       	brne	.+34     	; 0x972 <uart_send_isr+0x5e>
     950:	80 ec       	ldi	r24, 0xC0	; 192
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	20 ec       	ldi	r18, 0xC0	; 192
     956:	30 e0       	ldi	r19, 0x00	; 0
     958:	f9 01       	movw	r30, r18
     95a:	20 81       	ld	r18, Z
     95c:	20 62       	ori	r18, 0x20	; 32
     95e:	fc 01       	movw	r30, r24
     960:	20 83       	st	Z, r18
     962:	89 81       	ldd	r24, Y+1	; 0x01
     964:	9a 81       	ldd	r25, Y+2	; 0x02
     966:	9c 01       	movw	r18, r24
     968:	2f 5f       	subi	r18, 0xFF	; 255
     96a:	3f 4f       	sbci	r19, 0xFF	; 255
     96c:	3a 83       	std	Y+2, r19	; 0x02
     96e:	29 83       	std	Y+1, r18	; 0x01
     970:	17 c0       	rjmp	.+46     	; 0x9a0 <uart_send_isr+0x8c>
     972:	89 81       	ldd	r24, Y+1	; 0x01
     974:	9a 81       	ldd	r25, Y+2	; 0x02
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	9a 83       	std	Y+2, r25	; 0x02
     97a:	89 83       	std	Y+1, r24	; 0x01
     97c:	29 81       	ldd	r18, Y+1	; 0x01
     97e:	3a 81       	ldd	r19, Y+2	; 0x02
     980:	8b 81       	ldd	r24, Y+3	; 0x03
     982:	9c 81       	ldd	r25, Y+4	; 0x04
     984:	28 17       	cp	r18, r24
     986:	39 07       	cpc	r19, r25
     988:	b4 f2       	brlt	.-84     	; 0x936 <uart_send_isr+0x22>
     98a:	80 ec       	ldi	r24, 0xC0	; 192
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	20 ec       	ldi	r18, 0xC0	; 192
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	f9 01       	movw	r30, r18
     994:	20 81       	ld	r18, Z
     996:	20 62       	ori	r18, 0x20	; 32
     998:	fc 01       	movw	r30, r24
     99a:	20 83       	st	Z, r18
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	26 96       	adiw	r28, 0x06	; 6
     9a2:	0f b6       	in	r0, 0x3f	; 63
     9a4:	f8 94       	cli
     9a6:	de bf       	out	0x3e, r29	; 62
     9a8:	0f be       	out	0x3f, r0	; 63
     9aa:	cd bf       	out	0x3d, r28	; 61
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	08 95       	ret

000009b2 <__vector_21>:

/**
 ISR for USART Data Register Empty flag
 */
ISR(USART0_UDRE_vect){
     9b2:	1f 92       	push	r1
     9b4:	0f 92       	push	r0
     9b6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     9ba:	0f 92       	push	r0
     9bc:	11 24       	eor	r1, r1
     9be:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     9c2:	0f 92       	push	r0
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	4f 93       	push	r20
     9ca:	5f 93       	push	r21
     9cc:	6f 93       	push	r22
     9ce:	7f 93       	push	r23
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
     9d4:	af 93       	push	r26
     9d6:	bf 93       	push	r27
     9d8:	ef 93       	push	r30
     9da:	ff 93       	push	r31
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	1f 92       	push	r1
     9e2:	cd b7       	in	r28, 0x3d	; 61
     9e4:	de b7       	in	r29, 0x3e	; 62
    unsigned char pByte;
    // Pull one byte from buffer and store it in pByte
    if (buff_get(&pByte, &bufferSend) == 0) {
     9e6:	61 e4       	ldi	r22, 0x41	; 65
     9e8:	71 e0       	ldi	r23, 0x01	; 1
     9ea:	ce 01       	movw	r24, r28
     9ec:	01 96       	adiw	r24, 0x01	; 1
     9ee:	c9 de       	rcall	.-622    	; 0x782 <buff_get>
     9f0:	88 23       	and	r24, r24
     9f2:	31 f4       	brne	.+12     	; 0xa00 <__vector_21+0x4e>
        // Send byte
        UDR0 = pByte;
     9f4:	86 ec       	ldi	r24, 0xC6	; 198
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	29 81       	ldd	r18, Y+1	; 0x01
     9fa:	fc 01       	movw	r30, r24
     9fc:	20 83       	st	Z, r18
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
    }
}
     9fe:	09 c0       	rjmp	.+18     	; 0xa12 <__vector_21+0x60>
    if (buff_get(&pByte, &bufferSend) == 0) {
        // Send byte
        UDR0 = pByte;
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
     a00:	80 ec       	ldi	r24, 0xC0	; 192
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	20 ec       	ldi	r18, 0xC0	; 192
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	f9 01       	movw	r30, r18
     a0a:	20 81       	ld	r18, Z
     a0c:	2f 7d       	andi	r18, 0xDF	; 223
     a0e:	fc 01       	movw	r30, r24
     a10:	20 83       	st	Z, r18
    }
}
     a12:	00 00       	nop
     a14:	0f 90       	pop	r0
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	ff 91       	pop	r31
     a1c:	ef 91       	pop	r30
     a1e:	bf 91       	pop	r27
     a20:	af 91       	pop	r26
     a22:	9f 91       	pop	r25
     a24:	8f 91       	pop	r24
     a26:	7f 91       	pop	r23
     a28:	6f 91       	pop	r22
     a2a:	5f 91       	pop	r21
     a2c:	4f 91       	pop	r20
     a2e:	3f 91       	pop	r19
     a30:	2f 91       	pop	r18
     a32:	0f 90       	pop	r0
     a34:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     a38:	0f 90       	pop	r0
     a3a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     a3e:	0f 90       	pop	r0
     a40:	1f 90       	pop	r1
     a42:	18 95       	reti

00000a44 <__vector_20>:

ISR(USART0_RX_vect){
     a44:	1f 92       	push	r1
     a46:	0f 92       	push	r0
     a48:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     a4c:	0f 92       	push	r0
     a4e:	11 24       	eor	r1, r1
     a50:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     a54:	0f 92       	push	r0
     a56:	2f 93       	push	r18
     a58:	3f 93       	push	r19
     a5a:	4f 93       	push	r20
     a5c:	5f 93       	push	r21
     a5e:	6f 93       	push	r22
     a60:	7f 93       	push	r23
     a62:	8f 93       	push	r24
     a64:	9f 93       	push	r25
     a66:	af 93       	push	r26
     a68:	bf 93       	push	r27
     a6a:	ef 93       	push	r30
     a6c:	ff 93       	push	r31
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
     a72:	cd b7       	in	r28, 0x3d	; 61
     a74:	de b7       	in	r29, 0x3e	; 62
    // Put received byte to bufferRecv (will read but don't save the value if buffer overflows)
    buff_put(UDR0, &bufferRecv);
     a76:	86 ec       	ldi	r24, 0xC6	; 198
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	fc 01       	movw	r30, r24
     a7c:	80 81       	ld	r24, Z
     a7e:	65 e4       	ldi	r22, 0x45	; 69
     a80:	73 e0       	ldi	r23, 0x03	; 3
     a82:	e2 dd       	rcall	.-1084   	; 0x648 <buff_put>
}
     a84:	00 00       	nop
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	ff 91       	pop	r31
     a8c:	ef 91       	pop	r30
     a8e:	bf 91       	pop	r27
     a90:	af 91       	pop	r26
     a92:	9f 91       	pop	r25
     a94:	8f 91       	pop	r24
     a96:	7f 91       	pop	r23
     a98:	6f 91       	pop	r22
     a9a:	5f 91       	pop	r21
     a9c:	4f 91       	pop	r20
     a9e:	3f 91       	pop	r19
     aa0:	2f 91       	pop	r18
     aa2:	0f 90       	pop	r0
     aa4:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     aa8:	0f 90       	pop	r0
     aaa:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     aae:	0f 90       	pop	r0
     ab0:	1f 90       	pop	r1
     ab2:	18 95       	reti

00000ab4 <strlen>:
     ab4:	fc 01       	movw	r30, r24
     ab6:	01 90       	ld	r0, Z+
     ab8:	00 20       	and	r0, r0
     aba:	e9 f7       	brne	.-6      	; 0xab6 <strlen+0x2>
     abc:	80 95       	com	r24
     abe:	90 95       	com	r25
     ac0:	8e 0f       	add	r24, r30
     ac2:	9f 1f       	adc	r25, r31
     ac4:	08 95       	ret

00000ac6 <sprintf>:
     ac6:	0f 93       	push	r16
     ac8:	1f 93       	push	r17
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	cd b7       	in	r28, 0x3d	; 61
     ad0:	de b7       	in	r29, 0x3e	; 62
     ad2:	2e 97       	sbiw	r28, 0x0e	; 14
     ad4:	0f b6       	in	r0, 0x3f	; 63
     ad6:	f8 94       	cli
     ad8:	de bf       	out	0x3e, r29	; 62
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	cd bf       	out	0x3d, r28	; 61
     ade:	0d 89       	ldd	r16, Y+21	; 0x15
     ae0:	1e 89       	ldd	r17, Y+22	; 0x16
     ae2:	86 e0       	ldi	r24, 0x06	; 6
     ae4:	8c 83       	std	Y+4, r24	; 0x04
     ae6:	1a 83       	std	Y+2, r17	; 0x02
     ae8:	09 83       	std	Y+1, r16	; 0x01
     aea:	8f ef       	ldi	r24, 0xFF	; 255
     aec:	9f e7       	ldi	r25, 0x7F	; 127
     aee:	9e 83       	std	Y+6, r25	; 0x06
     af0:	8d 83       	std	Y+5, r24	; 0x05
     af2:	ae 01       	movw	r20, r28
     af4:	47 5e       	subi	r20, 0xE7	; 231
     af6:	5f 4f       	sbci	r21, 0xFF	; 255
     af8:	6f 89       	ldd	r22, Y+23	; 0x17
     afa:	78 8d       	ldd	r23, Y+24	; 0x18
     afc:	ce 01       	movw	r24, r28
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	10 d0       	rcall	.+32     	; 0xb22 <vfprintf>
     b02:	ef 81       	ldd	r30, Y+7	; 0x07
     b04:	f8 85       	ldd	r31, Y+8	; 0x08
     b06:	e0 0f       	add	r30, r16
     b08:	f1 1f       	adc	r31, r17
     b0a:	10 82       	st	Z, r1
     b0c:	2e 96       	adiw	r28, 0x0e	; 14
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	f8 94       	cli
     b12:	de bf       	out	0x3e, r29	; 62
     b14:	0f be       	out	0x3f, r0	; 63
     b16:	cd bf       	out	0x3d, r28	; 61
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	0f 91       	pop	r16
     b20:	08 95       	ret

00000b22 <vfprintf>:
     b22:	2f 92       	push	r2
     b24:	3f 92       	push	r3
     b26:	4f 92       	push	r4
     b28:	5f 92       	push	r5
     b2a:	6f 92       	push	r6
     b2c:	7f 92       	push	r7
     b2e:	8f 92       	push	r8
     b30:	9f 92       	push	r9
     b32:	af 92       	push	r10
     b34:	bf 92       	push	r11
     b36:	cf 92       	push	r12
     b38:	df 92       	push	r13
     b3a:	ef 92       	push	r14
     b3c:	ff 92       	push	r15
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	cd b7       	in	r28, 0x3d	; 61
     b48:	de b7       	in	r29, 0x3e	; 62
     b4a:	2b 97       	sbiw	r28, 0x0b	; 11
     b4c:	0f b6       	in	r0, 0x3f	; 63
     b4e:	f8 94       	cli
     b50:	de bf       	out	0x3e, r29	; 62
     b52:	0f be       	out	0x3f, r0	; 63
     b54:	cd bf       	out	0x3d, r28	; 61
     b56:	6c 01       	movw	r12, r24
     b58:	7b 01       	movw	r14, r22
     b5a:	8a 01       	movw	r16, r20
     b5c:	fc 01       	movw	r30, r24
     b5e:	17 82       	std	Z+7, r1	; 0x07
     b60:	16 82       	std	Z+6, r1	; 0x06
     b62:	83 81       	ldd	r24, Z+3	; 0x03
     b64:	81 ff       	sbrs	r24, 1
     b66:	bf c1       	rjmp	.+894    	; 0xee6 <vfprintf+0x3c4>
     b68:	ce 01       	movw	r24, r28
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	3c 01       	movw	r6, r24
     b6e:	f6 01       	movw	r30, r12
     b70:	93 81       	ldd	r25, Z+3	; 0x03
     b72:	f7 01       	movw	r30, r14
     b74:	93 fd       	sbrc	r25, 3
     b76:	85 91       	lpm	r24, Z+
     b78:	93 ff       	sbrs	r25, 3
     b7a:	81 91       	ld	r24, Z+
     b7c:	7f 01       	movw	r14, r30
     b7e:	88 23       	and	r24, r24
     b80:	09 f4       	brne	.+2      	; 0xb84 <vfprintf+0x62>
     b82:	ad c1       	rjmp	.+858    	; 0xede <vfprintf+0x3bc>
     b84:	85 32       	cpi	r24, 0x25	; 37
     b86:	39 f4       	brne	.+14     	; 0xb96 <vfprintf+0x74>
     b88:	93 fd       	sbrc	r25, 3
     b8a:	85 91       	lpm	r24, Z+
     b8c:	93 ff       	sbrs	r25, 3
     b8e:	81 91       	ld	r24, Z+
     b90:	7f 01       	movw	r14, r30
     b92:	85 32       	cpi	r24, 0x25	; 37
     b94:	21 f4       	brne	.+8      	; 0xb9e <vfprintf+0x7c>
     b96:	b6 01       	movw	r22, r12
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	d6 d1       	rcall	.+940    	; 0xf48 <fputc>
     b9c:	e8 cf       	rjmp	.-48     	; 0xb6e <vfprintf+0x4c>
     b9e:	91 2c       	mov	r9, r1
     ba0:	21 2c       	mov	r2, r1
     ba2:	31 2c       	mov	r3, r1
     ba4:	ff e1       	ldi	r31, 0x1F	; 31
     ba6:	f3 15       	cp	r31, r3
     ba8:	d8 f0       	brcs	.+54     	; 0xbe0 <vfprintf+0xbe>
     baa:	8b 32       	cpi	r24, 0x2B	; 43
     bac:	79 f0       	breq	.+30     	; 0xbcc <vfprintf+0xaa>
     bae:	38 f4       	brcc	.+14     	; 0xbbe <vfprintf+0x9c>
     bb0:	80 32       	cpi	r24, 0x20	; 32
     bb2:	79 f0       	breq	.+30     	; 0xbd2 <vfprintf+0xb0>
     bb4:	83 32       	cpi	r24, 0x23	; 35
     bb6:	a1 f4       	brne	.+40     	; 0xbe0 <vfprintf+0xbe>
     bb8:	23 2d       	mov	r18, r3
     bba:	20 61       	ori	r18, 0x10	; 16
     bbc:	1d c0       	rjmp	.+58     	; 0xbf8 <vfprintf+0xd6>
     bbe:	8d 32       	cpi	r24, 0x2D	; 45
     bc0:	61 f0       	breq	.+24     	; 0xbda <vfprintf+0xb8>
     bc2:	80 33       	cpi	r24, 0x30	; 48
     bc4:	69 f4       	brne	.+26     	; 0xbe0 <vfprintf+0xbe>
     bc6:	23 2d       	mov	r18, r3
     bc8:	21 60       	ori	r18, 0x01	; 1
     bca:	16 c0       	rjmp	.+44     	; 0xbf8 <vfprintf+0xd6>
     bcc:	83 2d       	mov	r24, r3
     bce:	82 60       	ori	r24, 0x02	; 2
     bd0:	38 2e       	mov	r3, r24
     bd2:	e3 2d       	mov	r30, r3
     bd4:	e4 60       	ori	r30, 0x04	; 4
     bd6:	3e 2e       	mov	r3, r30
     bd8:	2a c0       	rjmp	.+84     	; 0xc2e <vfprintf+0x10c>
     bda:	f3 2d       	mov	r31, r3
     bdc:	f8 60       	ori	r31, 0x08	; 8
     bde:	1d c0       	rjmp	.+58     	; 0xc1a <vfprintf+0xf8>
     be0:	37 fc       	sbrc	r3, 7
     be2:	2d c0       	rjmp	.+90     	; 0xc3e <vfprintf+0x11c>
     be4:	20 ed       	ldi	r18, 0xD0	; 208
     be6:	28 0f       	add	r18, r24
     be8:	2a 30       	cpi	r18, 0x0A	; 10
     bea:	40 f0       	brcs	.+16     	; 0xbfc <vfprintf+0xda>
     bec:	8e 32       	cpi	r24, 0x2E	; 46
     bee:	b9 f4       	brne	.+46     	; 0xc1e <vfprintf+0xfc>
     bf0:	36 fc       	sbrc	r3, 6
     bf2:	75 c1       	rjmp	.+746    	; 0xede <vfprintf+0x3bc>
     bf4:	23 2d       	mov	r18, r3
     bf6:	20 64       	ori	r18, 0x40	; 64
     bf8:	32 2e       	mov	r3, r18
     bfa:	19 c0       	rjmp	.+50     	; 0xc2e <vfprintf+0x10c>
     bfc:	36 fe       	sbrs	r3, 6
     bfe:	06 c0       	rjmp	.+12     	; 0xc0c <vfprintf+0xea>
     c00:	8a e0       	ldi	r24, 0x0A	; 10
     c02:	98 9e       	mul	r9, r24
     c04:	20 0d       	add	r18, r0
     c06:	11 24       	eor	r1, r1
     c08:	92 2e       	mov	r9, r18
     c0a:	11 c0       	rjmp	.+34     	; 0xc2e <vfprintf+0x10c>
     c0c:	ea e0       	ldi	r30, 0x0A	; 10
     c0e:	2e 9e       	mul	r2, r30
     c10:	20 0d       	add	r18, r0
     c12:	11 24       	eor	r1, r1
     c14:	22 2e       	mov	r2, r18
     c16:	f3 2d       	mov	r31, r3
     c18:	f0 62       	ori	r31, 0x20	; 32
     c1a:	3f 2e       	mov	r3, r31
     c1c:	08 c0       	rjmp	.+16     	; 0xc2e <vfprintf+0x10c>
     c1e:	8c 36       	cpi	r24, 0x6C	; 108
     c20:	21 f4       	brne	.+8      	; 0xc2a <vfprintf+0x108>
     c22:	83 2d       	mov	r24, r3
     c24:	80 68       	ori	r24, 0x80	; 128
     c26:	38 2e       	mov	r3, r24
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <vfprintf+0x10c>
     c2a:	88 36       	cpi	r24, 0x68	; 104
     c2c:	41 f4       	brne	.+16     	; 0xc3e <vfprintf+0x11c>
     c2e:	f7 01       	movw	r30, r14
     c30:	93 fd       	sbrc	r25, 3
     c32:	85 91       	lpm	r24, Z+
     c34:	93 ff       	sbrs	r25, 3
     c36:	81 91       	ld	r24, Z+
     c38:	7f 01       	movw	r14, r30
     c3a:	81 11       	cpse	r24, r1
     c3c:	b3 cf       	rjmp	.-154    	; 0xba4 <vfprintf+0x82>
     c3e:	98 2f       	mov	r25, r24
     c40:	9f 7d       	andi	r25, 0xDF	; 223
     c42:	95 54       	subi	r25, 0x45	; 69
     c44:	93 30       	cpi	r25, 0x03	; 3
     c46:	28 f4       	brcc	.+10     	; 0xc52 <vfprintf+0x130>
     c48:	0c 5f       	subi	r16, 0xFC	; 252
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	9f e3       	ldi	r25, 0x3F	; 63
     c4e:	99 83       	std	Y+1, r25	; 0x01
     c50:	0d c0       	rjmp	.+26     	; 0xc6c <vfprintf+0x14a>
     c52:	83 36       	cpi	r24, 0x63	; 99
     c54:	31 f0       	breq	.+12     	; 0xc62 <vfprintf+0x140>
     c56:	83 37       	cpi	r24, 0x73	; 115
     c58:	71 f0       	breq	.+28     	; 0xc76 <vfprintf+0x154>
     c5a:	83 35       	cpi	r24, 0x53	; 83
     c5c:	09 f0       	breq	.+2      	; 0xc60 <vfprintf+0x13e>
     c5e:	55 c0       	rjmp	.+170    	; 0xd0a <vfprintf+0x1e8>
     c60:	20 c0       	rjmp	.+64     	; 0xca2 <vfprintf+0x180>
     c62:	f8 01       	movw	r30, r16
     c64:	80 81       	ld	r24, Z
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	0e 5f       	subi	r16, 0xFE	; 254
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	88 24       	eor	r8, r8
     c6e:	83 94       	inc	r8
     c70:	91 2c       	mov	r9, r1
     c72:	53 01       	movw	r10, r6
     c74:	12 c0       	rjmp	.+36     	; 0xc9a <vfprintf+0x178>
     c76:	28 01       	movw	r4, r16
     c78:	f2 e0       	ldi	r31, 0x02	; 2
     c7a:	4f 0e       	add	r4, r31
     c7c:	51 1c       	adc	r5, r1
     c7e:	f8 01       	movw	r30, r16
     c80:	a0 80       	ld	r10, Z
     c82:	b1 80       	ldd	r11, Z+1	; 0x01
     c84:	36 fe       	sbrs	r3, 6
     c86:	03 c0       	rjmp	.+6      	; 0xc8e <vfprintf+0x16c>
     c88:	69 2d       	mov	r22, r9
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x170>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	c5 01       	movw	r24, r10
     c94:	4e d1       	rcall	.+668    	; 0xf32 <strnlen>
     c96:	4c 01       	movw	r8, r24
     c98:	82 01       	movw	r16, r4
     c9a:	f3 2d       	mov	r31, r3
     c9c:	ff 77       	andi	r31, 0x7F	; 127
     c9e:	3f 2e       	mov	r3, r31
     ca0:	15 c0       	rjmp	.+42     	; 0xccc <vfprintf+0x1aa>
     ca2:	28 01       	movw	r4, r16
     ca4:	22 e0       	ldi	r18, 0x02	; 2
     ca6:	42 0e       	add	r4, r18
     ca8:	51 1c       	adc	r5, r1
     caa:	f8 01       	movw	r30, r16
     cac:	a0 80       	ld	r10, Z
     cae:	b1 80       	ldd	r11, Z+1	; 0x01
     cb0:	36 fe       	sbrs	r3, 6
     cb2:	03 c0       	rjmp	.+6      	; 0xcba <vfprintf+0x198>
     cb4:	69 2d       	mov	r22, r9
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <vfprintf+0x19c>
     cba:	6f ef       	ldi	r22, 0xFF	; 255
     cbc:	7f ef       	ldi	r23, 0xFF	; 255
     cbe:	c5 01       	movw	r24, r10
     cc0:	2d d1       	rcall	.+602    	; 0xf1c <strnlen_P>
     cc2:	4c 01       	movw	r8, r24
     cc4:	f3 2d       	mov	r31, r3
     cc6:	f0 68       	ori	r31, 0x80	; 128
     cc8:	3f 2e       	mov	r3, r31
     cca:	82 01       	movw	r16, r4
     ccc:	33 fc       	sbrc	r3, 3
     cce:	19 c0       	rjmp	.+50     	; 0xd02 <vfprintf+0x1e0>
     cd0:	82 2d       	mov	r24, r2
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	88 16       	cp	r8, r24
     cd6:	99 06       	cpc	r9, r25
     cd8:	a0 f4       	brcc	.+40     	; 0xd02 <vfprintf+0x1e0>
     cda:	b6 01       	movw	r22, r12
     cdc:	80 e2       	ldi	r24, 0x20	; 32
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	33 d1       	rcall	.+614    	; 0xf48 <fputc>
     ce2:	2a 94       	dec	r2
     ce4:	f5 cf       	rjmp	.-22     	; 0xcd0 <vfprintf+0x1ae>
     ce6:	f5 01       	movw	r30, r10
     ce8:	37 fc       	sbrc	r3, 7
     cea:	85 91       	lpm	r24, Z+
     cec:	37 fe       	sbrs	r3, 7
     cee:	81 91       	ld	r24, Z+
     cf0:	5f 01       	movw	r10, r30
     cf2:	b6 01       	movw	r22, r12
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	28 d1       	rcall	.+592    	; 0xf48 <fputc>
     cf8:	21 10       	cpse	r2, r1
     cfa:	2a 94       	dec	r2
     cfc:	21 e0       	ldi	r18, 0x01	; 1
     cfe:	82 1a       	sub	r8, r18
     d00:	91 08       	sbc	r9, r1
     d02:	81 14       	cp	r8, r1
     d04:	91 04       	cpc	r9, r1
     d06:	79 f7       	brne	.-34     	; 0xce6 <vfprintf+0x1c4>
     d08:	e1 c0       	rjmp	.+450    	; 0xecc <vfprintf+0x3aa>
     d0a:	84 36       	cpi	r24, 0x64	; 100
     d0c:	11 f0       	breq	.+4      	; 0xd12 <vfprintf+0x1f0>
     d0e:	89 36       	cpi	r24, 0x69	; 105
     d10:	39 f5       	brne	.+78     	; 0xd60 <vfprintf+0x23e>
     d12:	f8 01       	movw	r30, r16
     d14:	37 fe       	sbrs	r3, 7
     d16:	07 c0       	rjmp	.+14     	; 0xd26 <vfprintf+0x204>
     d18:	60 81       	ld	r22, Z
     d1a:	71 81       	ldd	r23, Z+1	; 0x01
     d1c:	82 81       	ldd	r24, Z+2	; 0x02
     d1e:	93 81       	ldd	r25, Z+3	; 0x03
     d20:	0c 5f       	subi	r16, 0xFC	; 252
     d22:	1f 4f       	sbci	r17, 0xFF	; 255
     d24:	08 c0       	rjmp	.+16     	; 0xd36 <vfprintf+0x214>
     d26:	60 81       	ld	r22, Z
     d28:	71 81       	ldd	r23, Z+1	; 0x01
     d2a:	07 2e       	mov	r0, r23
     d2c:	00 0c       	add	r0, r0
     d2e:	88 0b       	sbc	r24, r24
     d30:	99 0b       	sbc	r25, r25
     d32:	0e 5f       	subi	r16, 0xFE	; 254
     d34:	1f 4f       	sbci	r17, 0xFF	; 255
     d36:	f3 2d       	mov	r31, r3
     d38:	ff 76       	andi	r31, 0x6F	; 111
     d3a:	3f 2e       	mov	r3, r31
     d3c:	97 ff       	sbrs	r25, 7
     d3e:	09 c0       	rjmp	.+18     	; 0xd52 <vfprintf+0x230>
     d40:	90 95       	com	r25
     d42:	80 95       	com	r24
     d44:	70 95       	com	r23
     d46:	61 95       	neg	r22
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	8f 4f       	sbci	r24, 0xFF	; 255
     d4c:	9f 4f       	sbci	r25, 0xFF	; 255
     d4e:	f0 68       	ori	r31, 0x80	; 128
     d50:	3f 2e       	mov	r3, r31
     d52:	2a e0       	ldi	r18, 0x0A	; 10
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	a3 01       	movw	r20, r6
     d58:	33 d1       	rcall	.+614    	; 0xfc0 <__ultoa_invert>
     d5a:	88 2e       	mov	r8, r24
     d5c:	86 18       	sub	r8, r6
     d5e:	44 c0       	rjmp	.+136    	; 0xde8 <vfprintf+0x2c6>
     d60:	85 37       	cpi	r24, 0x75	; 117
     d62:	31 f4       	brne	.+12     	; 0xd70 <vfprintf+0x24e>
     d64:	23 2d       	mov	r18, r3
     d66:	2f 7e       	andi	r18, 0xEF	; 239
     d68:	b2 2e       	mov	r11, r18
     d6a:	2a e0       	ldi	r18, 0x0A	; 10
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <vfprintf+0x298>
     d70:	93 2d       	mov	r25, r3
     d72:	99 7f       	andi	r25, 0xF9	; 249
     d74:	b9 2e       	mov	r11, r25
     d76:	8f 36       	cpi	r24, 0x6F	; 111
     d78:	c1 f0       	breq	.+48     	; 0xdaa <vfprintf+0x288>
     d7a:	18 f4       	brcc	.+6      	; 0xd82 <vfprintf+0x260>
     d7c:	88 35       	cpi	r24, 0x58	; 88
     d7e:	79 f0       	breq	.+30     	; 0xd9e <vfprintf+0x27c>
     d80:	ae c0       	rjmp	.+348    	; 0xede <vfprintf+0x3bc>
     d82:	80 37       	cpi	r24, 0x70	; 112
     d84:	19 f0       	breq	.+6      	; 0xd8c <vfprintf+0x26a>
     d86:	88 37       	cpi	r24, 0x78	; 120
     d88:	21 f0       	breq	.+8      	; 0xd92 <vfprintf+0x270>
     d8a:	a9 c0       	rjmp	.+338    	; 0xede <vfprintf+0x3bc>
     d8c:	e9 2f       	mov	r30, r25
     d8e:	e0 61       	ori	r30, 0x10	; 16
     d90:	be 2e       	mov	r11, r30
     d92:	b4 fe       	sbrs	r11, 4
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <vfprintf+0x28e>
     d96:	fb 2d       	mov	r31, r11
     d98:	f4 60       	ori	r31, 0x04	; 4
     d9a:	bf 2e       	mov	r11, r31
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <vfprintf+0x28e>
     d9e:	34 fe       	sbrs	r3, 4
     da0:	0a c0       	rjmp	.+20     	; 0xdb6 <vfprintf+0x294>
     da2:	29 2f       	mov	r18, r25
     da4:	26 60       	ori	r18, 0x06	; 6
     da6:	b2 2e       	mov	r11, r18
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x294>
     daa:	28 e0       	ldi	r18, 0x08	; 8
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	05 c0       	rjmp	.+10     	; 0xdba <vfprintf+0x298>
     db0:	20 e1       	ldi	r18, 0x10	; 16
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x298>
     db6:	20 e1       	ldi	r18, 0x10	; 16
     db8:	32 e0       	ldi	r19, 0x02	; 2
     dba:	f8 01       	movw	r30, r16
     dbc:	b7 fe       	sbrs	r11, 7
     dbe:	07 c0       	rjmp	.+14     	; 0xdce <vfprintf+0x2ac>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	82 81       	ldd	r24, Z+2	; 0x02
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	0c 5f       	subi	r16, 0xFC	; 252
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x2b8>
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 5f       	subi	r16, 0xFE	; 254
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	a3 01       	movw	r20, r6
     ddc:	f1 d0       	rcall	.+482    	; 0xfc0 <__ultoa_invert>
     dde:	88 2e       	mov	r8, r24
     de0:	86 18       	sub	r8, r6
     de2:	fb 2d       	mov	r31, r11
     de4:	ff 77       	andi	r31, 0x7F	; 127
     de6:	3f 2e       	mov	r3, r31
     de8:	36 fe       	sbrs	r3, 6
     dea:	0d c0       	rjmp	.+26     	; 0xe06 <vfprintf+0x2e4>
     dec:	23 2d       	mov	r18, r3
     dee:	2e 7f       	andi	r18, 0xFE	; 254
     df0:	a2 2e       	mov	r10, r18
     df2:	89 14       	cp	r8, r9
     df4:	58 f4       	brcc	.+22     	; 0xe0c <vfprintf+0x2ea>
     df6:	34 fe       	sbrs	r3, 4
     df8:	0b c0       	rjmp	.+22     	; 0xe10 <vfprintf+0x2ee>
     dfa:	32 fc       	sbrc	r3, 2
     dfc:	09 c0       	rjmp	.+18     	; 0xe10 <vfprintf+0x2ee>
     dfe:	83 2d       	mov	r24, r3
     e00:	8e 7e       	andi	r24, 0xEE	; 238
     e02:	a8 2e       	mov	r10, r24
     e04:	05 c0       	rjmp	.+10     	; 0xe10 <vfprintf+0x2ee>
     e06:	b8 2c       	mov	r11, r8
     e08:	a3 2c       	mov	r10, r3
     e0a:	03 c0       	rjmp	.+6      	; 0xe12 <vfprintf+0x2f0>
     e0c:	b8 2c       	mov	r11, r8
     e0e:	01 c0       	rjmp	.+2      	; 0xe12 <vfprintf+0x2f0>
     e10:	b9 2c       	mov	r11, r9
     e12:	a4 fe       	sbrs	r10, 4
     e14:	0f c0       	rjmp	.+30     	; 0xe34 <vfprintf+0x312>
     e16:	fe 01       	movw	r30, r28
     e18:	e8 0d       	add	r30, r8
     e1a:	f1 1d       	adc	r31, r1
     e1c:	80 81       	ld	r24, Z
     e1e:	80 33       	cpi	r24, 0x30	; 48
     e20:	21 f4       	brne	.+8      	; 0xe2a <vfprintf+0x308>
     e22:	9a 2d       	mov	r25, r10
     e24:	99 7e       	andi	r25, 0xE9	; 233
     e26:	a9 2e       	mov	r10, r25
     e28:	09 c0       	rjmp	.+18     	; 0xe3c <vfprintf+0x31a>
     e2a:	a2 fe       	sbrs	r10, 2
     e2c:	06 c0       	rjmp	.+12     	; 0xe3a <vfprintf+0x318>
     e2e:	b3 94       	inc	r11
     e30:	b3 94       	inc	r11
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <vfprintf+0x31a>
     e34:	8a 2d       	mov	r24, r10
     e36:	86 78       	andi	r24, 0x86	; 134
     e38:	09 f0       	breq	.+2      	; 0xe3c <vfprintf+0x31a>
     e3a:	b3 94       	inc	r11
     e3c:	a3 fc       	sbrc	r10, 3
     e3e:	10 c0       	rjmp	.+32     	; 0xe60 <vfprintf+0x33e>
     e40:	a0 fe       	sbrs	r10, 0
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <vfprintf+0x32e>
     e44:	b2 14       	cp	r11, r2
     e46:	80 f4       	brcc	.+32     	; 0xe68 <vfprintf+0x346>
     e48:	28 0c       	add	r2, r8
     e4a:	92 2c       	mov	r9, r2
     e4c:	9b 18       	sub	r9, r11
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <vfprintf+0x348>
     e50:	b2 14       	cp	r11, r2
     e52:	58 f4       	brcc	.+22     	; 0xe6a <vfprintf+0x348>
     e54:	b6 01       	movw	r22, r12
     e56:	80 e2       	ldi	r24, 0x20	; 32
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	76 d0       	rcall	.+236    	; 0xf48 <fputc>
     e5c:	b3 94       	inc	r11
     e5e:	f8 cf       	rjmp	.-16     	; 0xe50 <vfprintf+0x32e>
     e60:	b2 14       	cp	r11, r2
     e62:	18 f4       	brcc	.+6      	; 0xe6a <vfprintf+0x348>
     e64:	2b 18       	sub	r2, r11
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <vfprintf+0x34a>
     e68:	98 2c       	mov	r9, r8
     e6a:	21 2c       	mov	r2, r1
     e6c:	a4 fe       	sbrs	r10, 4
     e6e:	0f c0       	rjmp	.+30     	; 0xe8e <vfprintf+0x36c>
     e70:	b6 01       	movw	r22, r12
     e72:	80 e3       	ldi	r24, 0x30	; 48
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	68 d0       	rcall	.+208    	; 0xf48 <fputc>
     e78:	a2 fe       	sbrs	r10, 2
     e7a:	16 c0       	rjmp	.+44     	; 0xea8 <vfprintf+0x386>
     e7c:	a1 fc       	sbrc	r10, 1
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <vfprintf+0x364>
     e80:	88 e7       	ldi	r24, 0x78	; 120
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <vfprintf+0x368>
     e86:	88 e5       	ldi	r24, 0x58	; 88
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	b6 01       	movw	r22, r12
     e8c:	0c c0       	rjmp	.+24     	; 0xea6 <vfprintf+0x384>
     e8e:	8a 2d       	mov	r24, r10
     e90:	86 78       	andi	r24, 0x86	; 134
     e92:	51 f0       	breq	.+20     	; 0xea8 <vfprintf+0x386>
     e94:	a1 fe       	sbrs	r10, 1
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <vfprintf+0x37a>
     e98:	8b e2       	ldi	r24, 0x2B	; 43
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <vfprintf+0x37c>
     e9c:	80 e2       	ldi	r24, 0x20	; 32
     e9e:	a7 fc       	sbrc	r10, 7
     ea0:	8d e2       	ldi	r24, 0x2D	; 45
     ea2:	b6 01       	movw	r22, r12
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	50 d0       	rcall	.+160    	; 0xf48 <fputc>
     ea8:	89 14       	cp	r8, r9
     eaa:	30 f4       	brcc	.+12     	; 0xeb8 <vfprintf+0x396>
     eac:	b6 01       	movw	r22, r12
     eae:	80 e3       	ldi	r24, 0x30	; 48
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	4a d0       	rcall	.+148    	; 0xf48 <fputc>
     eb4:	9a 94       	dec	r9
     eb6:	f8 cf       	rjmp	.-16     	; 0xea8 <vfprintf+0x386>
     eb8:	8a 94       	dec	r8
     eba:	f3 01       	movw	r30, r6
     ebc:	e8 0d       	add	r30, r8
     ebe:	f1 1d       	adc	r31, r1
     ec0:	80 81       	ld	r24, Z
     ec2:	b6 01       	movw	r22, r12
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	40 d0       	rcall	.+128    	; 0xf48 <fputc>
     ec8:	81 10       	cpse	r8, r1
     eca:	f6 cf       	rjmp	.-20     	; 0xeb8 <vfprintf+0x396>
     ecc:	22 20       	and	r2, r2
     ece:	09 f4       	brne	.+2      	; 0xed2 <vfprintf+0x3b0>
     ed0:	4e ce       	rjmp	.-868    	; 0xb6e <vfprintf+0x4c>
     ed2:	b6 01       	movw	r22, r12
     ed4:	80 e2       	ldi	r24, 0x20	; 32
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	37 d0       	rcall	.+110    	; 0xf48 <fputc>
     eda:	2a 94       	dec	r2
     edc:	f7 cf       	rjmp	.-18     	; 0xecc <vfprintf+0x3aa>
     ede:	f6 01       	movw	r30, r12
     ee0:	86 81       	ldd	r24, Z+6	; 0x06
     ee2:	97 81       	ldd	r25, Z+7	; 0x07
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x3c8>
     ee6:	8f ef       	ldi	r24, 0xFF	; 255
     ee8:	9f ef       	ldi	r25, 0xFF	; 255
     eea:	2b 96       	adiw	r28, 0x0b	; 11
     eec:	0f b6       	in	r0, 0x3f	; 63
     eee:	f8 94       	cli
     ef0:	de bf       	out	0x3e, r29	; 62
     ef2:	0f be       	out	0x3f, r0	; 63
     ef4:	cd bf       	out	0x3d, r28	; 61
     ef6:	df 91       	pop	r29
     ef8:	cf 91       	pop	r28
     efa:	1f 91       	pop	r17
     efc:	0f 91       	pop	r16
     efe:	ff 90       	pop	r15
     f00:	ef 90       	pop	r14
     f02:	df 90       	pop	r13
     f04:	cf 90       	pop	r12
     f06:	bf 90       	pop	r11
     f08:	af 90       	pop	r10
     f0a:	9f 90       	pop	r9
     f0c:	8f 90       	pop	r8
     f0e:	7f 90       	pop	r7
     f10:	6f 90       	pop	r6
     f12:	5f 90       	pop	r5
     f14:	4f 90       	pop	r4
     f16:	3f 90       	pop	r3
     f18:	2f 90       	pop	r2
     f1a:	08 95       	ret

00000f1c <strnlen_P>:
     f1c:	fc 01       	movw	r30, r24
     f1e:	05 90       	lpm	r0, Z+
     f20:	61 50       	subi	r22, 0x01	; 1
     f22:	70 40       	sbci	r23, 0x00	; 0
     f24:	01 10       	cpse	r0, r1
     f26:	d8 f7       	brcc	.-10     	; 0xf1e <strnlen_P+0x2>
     f28:	80 95       	com	r24
     f2a:	90 95       	com	r25
     f2c:	8e 0f       	add	r24, r30
     f2e:	9f 1f       	adc	r25, r31
     f30:	08 95       	ret

00000f32 <strnlen>:
     f32:	fc 01       	movw	r30, r24
     f34:	61 50       	subi	r22, 0x01	; 1
     f36:	70 40       	sbci	r23, 0x00	; 0
     f38:	01 90       	ld	r0, Z+
     f3a:	01 10       	cpse	r0, r1
     f3c:	d8 f7       	brcc	.-10     	; 0xf34 <strnlen+0x2>
     f3e:	80 95       	com	r24
     f40:	90 95       	com	r25
     f42:	8e 0f       	add	r24, r30
     f44:	9f 1f       	adc	r25, r31
     f46:	08 95       	ret

00000f48 <fputc>:
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	cf 93       	push	r28
     f4e:	df 93       	push	r29
     f50:	fb 01       	movw	r30, r22
     f52:	23 81       	ldd	r18, Z+3	; 0x03
     f54:	21 fd       	sbrc	r18, 1
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <fputc+0x16>
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	2c c0       	rjmp	.+88     	; 0xfb6 <fputc+0x6e>
     f5e:	22 ff       	sbrs	r18, 2
     f60:	16 c0       	rjmp	.+44     	; 0xf8e <fputc+0x46>
     f62:	46 81       	ldd	r20, Z+6	; 0x06
     f64:	57 81       	ldd	r21, Z+7	; 0x07
     f66:	24 81       	ldd	r18, Z+4	; 0x04
     f68:	35 81       	ldd	r19, Z+5	; 0x05
     f6a:	42 17       	cp	r20, r18
     f6c:	53 07       	cpc	r21, r19
     f6e:	44 f4       	brge	.+16     	; 0xf80 <fputc+0x38>
     f70:	a0 81       	ld	r26, Z
     f72:	b1 81       	ldd	r27, Z+1	; 0x01
     f74:	9d 01       	movw	r18, r26
     f76:	2f 5f       	subi	r18, 0xFF	; 255
     f78:	3f 4f       	sbci	r19, 0xFF	; 255
     f7a:	31 83       	std	Z+1, r19	; 0x01
     f7c:	20 83       	st	Z, r18
     f7e:	8c 93       	st	X, r24
     f80:	26 81       	ldd	r18, Z+6	; 0x06
     f82:	37 81       	ldd	r19, Z+7	; 0x07
     f84:	2f 5f       	subi	r18, 0xFF	; 255
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	37 83       	std	Z+7, r19	; 0x07
     f8a:	26 83       	std	Z+6, r18	; 0x06
     f8c:	14 c0       	rjmp	.+40     	; 0xfb6 <fputc+0x6e>
     f8e:	8b 01       	movw	r16, r22
     f90:	ec 01       	movw	r28, r24
     f92:	fb 01       	movw	r30, r22
     f94:	00 84       	ldd	r0, Z+8	; 0x08
     f96:	f1 85       	ldd	r31, Z+9	; 0x09
     f98:	e0 2d       	mov	r30, r0
     f9a:	09 95       	icall
     f9c:	89 2b       	or	r24, r25
     f9e:	e1 f6       	brne	.-72     	; 0xf58 <fputc+0x10>
     fa0:	d8 01       	movw	r26, r16
     fa2:	16 96       	adiw	r26, 0x06	; 6
     fa4:	8d 91       	ld	r24, X+
     fa6:	9c 91       	ld	r25, X
     fa8:	17 97       	sbiw	r26, 0x07	; 7
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	17 96       	adiw	r26, 0x07	; 7
     fae:	9c 93       	st	X, r25
     fb0:	8e 93       	st	-X, r24
     fb2:	16 97       	sbiw	r26, 0x06	; 6
     fb4:	ce 01       	movw	r24, r28
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <__ultoa_invert>:
     fc0:	fa 01       	movw	r30, r20
     fc2:	aa 27       	eor	r26, r26
     fc4:	28 30       	cpi	r18, 0x08	; 8
     fc6:	51 f1       	breq	.+84     	; 0x101c <__ultoa_invert+0x5c>
     fc8:	20 31       	cpi	r18, 0x10	; 16
     fca:	81 f1       	breq	.+96     	; 0x102c <__ultoa_invert+0x6c>
     fcc:	e8 94       	clt
     fce:	6f 93       	push	r22
     fd0:	6e 7f       	andi	r22, 0xFE	; 254
     fd2:	6e 5f       	subi	r22, 0xFE	; 254
     fd4:	7f 4f       	sbci	r23, 0xFF	; 255
     fd6:	8f 4f       	sbci	r24, 0xFF	; 255
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	af 4f       	sbci	r26, 0xFF	; 255
     fdc:	b1 e0       	ldi	r27, 0x01	; 1
     fde:	3e d0       	rcall	.+124    	; 0x105c <__ultoa_invert+0x9c>
     fe0:	b4 e0       	ldi	r27, 0x04	; 4
     fe2:	3c d0       	rcall	.+120    	; 0x105c <__ultoa_invert+0x9c>
     fe4:	67 0f       	add	r22, r23
     fe6:	78 1f       	adc	r23, r24
     fe8:	89 1f       	adc	r24, r25
     fea:	9a 1f       	adc	r25, r26
     fec:	a1 1d       	adc	r26, r1
     fee:	68 0f       	add	r22, r24
     ff0:	79 1f       	adc	r23, r25
     ff2:	8a 1f       	adc	r24, r26
     ff4:	91 1d       	adc	r25, r1
     ff6:	a1 1d       	adc	r26, r1
     ff8:	6a 0f       	add	r22, r26
     ffa:	71 1d       	adc	r23, r1
     ffc:	81 1d       	adc	r24, r1
     ffe:	91 1d       	adc	r25, r1
    1000:	a1 1d       	adc	r26, r1
    1002:	20 d0       	rcall	.+64     	; 0x1044 <__ultoa_invert+0x84>
    1004:	09 f4       	brne	.+2      	; 0x1008 <__ultoa_invert+0x48>
    1006:	68 94       	set
    1008:	3f 91       	pop	r19
    100a:	2a e0       	ldi	r18, 0x0A	; 10
    100c:	26 9f       	mul	r18, r22
    100e:	11 24       	eor	r1, r1
    1010:	30 19       	sub	r19, r0
    1012:	30 5d       	subi	r19, 0xD0	; 208
    1014:	31 93       	st	Z+, r19
    1016:	de f6       	brtc	.-74     	; 0xfce <__ultoa_invert+0xe>
    1018:	cf 01       	movw	r24, r30
    101a:	08 95       	ret
    101c:	46 2f       	mov	r20, r22
    101e:	47 70       	andi	r20, 0x07	; 7
    1020:	40 5d       	subi	r20, 0xD0	; 208
    1022:	41 93       	st	Z+, r20
    1024:	b3 e0       	ldi	r27, 0x03	; 3
    1026:	0f d0       	rcall	.+30     	; 0x1046 <__ultoa_invert+0x86>
    1028:	c9 f7       	brne	.-14     	; 0x101c <__ultoa_invert+0x5c>
    102a:	f6 cf       	rjmp	.-20     	; 0x1018 <__ultoa_invert+0x58>
    102c:	46 2f       	mov	r20, r22
    102e:	4f 70       	andi	r20, 0x0F	; 15
    1030:	40 5d       	subi	r20, 0xD0	; 208
    1032:	4a 33       	cpi	r20, 0x3A	; 58
    1034:	18 f0       	brcs	.+6      	; 0x103c <__ultoa_invert+0x7c>
    1036:	49 5d       	subi	r20, 0xD9	; 217
    1038:	31 fd       	sbrc	r19, 1
    103a:	40 52       	subi	r20, 0x20	; 32
    103c:	41 93       	st	Z+, r20
    103e:	02 d0       	rcall	.+4      	; 0x1044 <__ultoa_invert+0x84>
    1040:	a9 f7       	brne	.-22     	; 0x102c <__ultoa_invert+0x6c>
    1042:	ea cf       	rjmp	.-44     	; 0x1018 <__ultoa_invert+0x58>
    1044:	b4 e0       	ldi	r27, 0x04	; 4
    1046:	a6 95       	lsr	r26
    1048:	97 95       	ror	r25
    104a:	87 95       	ror	r24
    104c:	77 95       	ror	r23
    104e:	67 95       	ror	r22
    1050:	ba 95       	dec	r27
    1052:	c9 f7       	brne	.-14     	; 0x1046 <__ultoa_invert+0x86>
    1054:	00 97       	sbiw	r24, 0x00	; 0
    1056:	61 05       	cpc	r22, r1
    1058:	71 05       	cpc	r23, r1
    105a:	08 95       	ret
    105c:	9b 01       	movw	r18, r22
    105e:	ac 01       	movw	r20, r24
    1060:	0a 2e       	mov	r0, r26
    1062:	06 94       	lsr	r0
    1064:	57 95       	ror	r21
    1066:	47 95       	ror	r20
    1068:	37 95       	ror	r19
    106a:	27 95       	ror	r18
    106c:	ba 95       	dec	r27
    106e:	c9 f7       	brne	.-14     	; 0x1062 <__ultoa_invert+0xa2>
    1070:	62 0f       	add	r22, r18
    1072:	73 1f       	adc	r23, r19
    1074:	84 1f       	adc	r24, r20
    1076:	95 1f       	adc	r25, r21
    1078:	a0 1d       	adc	r26, r0
    107a:	08 95       	ret

0000107c <_exit>:
    107c:	f8 94       	cli

0000107e <__stop_program>:
    107e:	ff cf       	rjmp	.-2      	; 0x107e <__stop_program>
