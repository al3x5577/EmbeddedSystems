
EmbeddedSystems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000cd2  00000d66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000040a  0080010e  0080010e  00000d74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00000e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011aa  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ba3  00000000  00000000  0000217a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b7a  00000000  00000000  00002d1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000624  00000000  00000000  00003898  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006de  00000000  00000000  00003ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c16  00000000  00000000  0000459a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  000051b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	65 c1       	rjmp	.+714    	; 0x30c <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	22 c3       	rjmp	.+1604   	; 0x696 <__vector_20>
  52:	00 00       	nop
  54:	d7 c2       	rjmp	.+1454   	; 0x604 <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ed       	ldi	r30, 0xD2	; 210
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 30       	cpi	r26, 0x0E	; 14
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	25 e0       	ldi	r18, 0x05	; 5
  b4:	ae e0       	ldi	r26, 0x0E	; 14
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 31       	cpi	r26, 0x18	; 24
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	57 d0       	rcall	.+174    	; 0x172 <main>
  c4:	04 c6       	rjmp	.+3080   	; 0xcce <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Led_init>:

#include "Led.h"

void Led_init(uint8_t initD) {
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	1f 92       	push	r1
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	89 83       	std	Y+1, r24	; 0x01
    // Set PORTB to outputs
    DDRB = 0xFF;
  d4:	84 e2       	ldi	r24, 0x24	; 36
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	2f ef       	ldi	r18, 0xFF	; 255
  da:	fc 01       	movw	r30, r24
  dc:	20 83       	st	Z, r18
    PORTB = 0x00;
  de:	85 e2       	ldi	r24, 0x25	; 37
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	fc 01       	movw	r30, r24
  e4:	10 82       	st	Z, r1
    
    if (initD) {
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	88 23       	and	r24, r24
  ea:	91 f0       	breq	.+36     	; 0x110 <Led_init+0x48>
        // Set PORTD 0..4 to outputs
        DDRD |= ( (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1) | (1 << 0));
  ec:	8a e2       	ldi	r24, 0x2A	; 42
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	2a e2       	ldi	r18, 0x2A	; 42
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	f9 01       	movw	r30, r18
  f6:	20 81       	ld	r18, Z
  f8:	2f 61       	ori	r18, 0x1F	; 31
  fa:	fc 01       	movw	r30, r24
  fc:	20 83       	st	Z, r18
        PORTD &= ~( (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1) | (1 << 0));
  fe:	8b e2       	ldi	r24, 0x2B	; 43
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	2b e2       	ldi	r18, 0x2B	; 43
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	f9 01       	movw	r30, r18
 108:	20 81       	ld	r18, Z
 10a:	20 7e       	andi	r18, 0xE0	; 224
 10c:	fc 01       	movw	r30, r24
 10e:	20 83       	st	Z, r18
    }
}
 110:	00 00       	nop
 112:	0f 90       	pop	r0
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	08 95       	ret

0000011a <Taster_init>:
 ---------------------
 - DDR Reg has to be set to 0
 - PORT Reg has to be set to 1
 -> Pin is input with pull-up
 */
void Taster_init() {
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
    
    // set to inputs
    DDRC &= ~(1 << 2);
 122:	87 e2       	ldi	r24, 0x27	; 39
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	27 e2       	ldi	r18, 0x27	; 39
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	f9 01       	movw	r30, r18
 12c:	20 81       	ld	r18, Z
 12e:	2b 7f       	andi	r18, 0xFB	; 251
 130:	fc 01       	movw	r30, r24
 132:	20 83       	st	Z, r18
    DDRD &= ~( (1 << 7) | (1 << 6) | (1 << 5) );
 134:	8a e2       	ldi	r24, 0x2A	; 42
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	2a e2       	ldi	r18, 0x2A	; 42
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	f9 01       	movw	r30, r18
 13e:	20 81       	ld	r18, Z
 140:	2f 71       	andi	r18, 0x1F	; 31
 142:	fc 01       	movw	r30, r24
 144:	20 83       	st	Z, r18
    
    // enable pull-up
    PORTC |= (1 << 2);
 146:	88 e2       	ldi	r24, 0x28	; 40
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	28 e2       	ldi	r18, 0x28	; 40
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	f9 01       	movw	r30, r18
 150:	20 81       	ld	r18, Z
 152:	24 60       	ori	r18, 0x04	; 4
 154:	fc 01       	movw	r30, r24
 156:	20 83       	st	Z, r18
    PORTD |= (1 << 7) | (1 << 6) | (1 << 5);
 158:	8b e2       	ldi	r24, 0x2B	; 43
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	2b e2       	ldi	r18, 0x2B	; 43
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	f9 01       	movw	r30, r18
 162:	20 81       	ld	r18, Z
 164:	20 6e       	ori	r18, 0xE0	; 224
 166:	fc 01       	movw	r30, r24
 168:	20 83       	st	Z, r18
}
 16a:	00 00       	nop
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <main>:
#include "uart/Uart.h"
#include <avr/interrupt.h>

#define CLK_F_MHZ 16

int main(void) {
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	cd b7       	in	r28, 0x3d	; 61
 178:	de b7       	in	r29, 0x3e	; 62
 17a:	e5 97       	sbiw	r28, 0x35	; 53
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	f8 94       	cli
 180:	de bf       	out	0x3e, r29	; 62
 182:	0f be       	out	0x3f, r0	; 63
 184:	cd bf       	out	0x3d, r28	; 61
	
    cli();
 186:	f8 94       	cli
    Led_init(0);	// Don't set LEDs at PORTD
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	9e df       	rcall	.-196    	; 0xc8 <Led_init>
	Taster_init();
 18c:	c6 df       	rcall	.-116    	; 0x11a <Taster_init>
    Timer_init(CLK_F_MHZ); // Init timer with 16MHZ clock
 18e:	80 e1       	ldi	r24, 0x10	; 16
 190:	26 d0       	rcall	.+76     	; 0x1de <Timer_init>
	uart_init_isr();
 192:	bb d1       	rcall	.+886    	; 0x50a <uart_init_isr>
	sei();
 194:	78 94       	sei
    
    uint16_t timeVarMain = 0;
 196:	1a 82       	std	Y+2, r1	; 0x02
 198:	19 82       	std	Y+1, r1	; 0x01
	char data;
	
    while (1) {
        
        if ((data = uart_get_data())) {
 19a:	21 d2       	rcall	.+1090   	; 0x5de <uart_get_data>
 19c:	8b 83       	std	Y+3, r24	; 0x03
 19e:	8b 81       	ldd	r24, Y+3	; 0x03
 1a0:	88 23       	and	r24, r24
 1a2:	d9 f3       	breq	.-10     	; 0x19a <main+0x28>
 1a4:	8b 81       	ldd	r24, Y+3	; 0x03
            char str[50];
            
            sprintf(str, "Received: %c\n", data);
 1a6:	88 2f       	mov	r24, r24
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	29 2f       	mov	r18, r25
 1ac:	2f 93       	push	r18
 1ae:	8f 93       	push	r24
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	89 2f       	mov	r24, r25
 1b6:	8f 93       	push	r24
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	91 e0       	ldi	r25, 0x01	; 1
 1bc:	8f 93       	push	r24
 1be:	ce 01       	movw	r24, r28
 1c0:	04 96       	adiw	r24, 0x04	; 4
 1c2:	29 2f       	mov	r18, r25
 1c4:	2f 93       	push	r18
 1c6:	8f 93       	push	r24
 1c8:	a7 d2       	rcall	.+1358   	; 0x718 <sprintf>
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
            
            uart_send_isr(str);
 1d6:	ce 01       	movw	r24, r28
 1d8:	04 96       	adiw	r24, 0x04	; 4
 1da:	b2 d1       	rcall	.+868    	; 0x540 <uart_send_isr>
 1dc:	de cf       	rjmp	.-68     	; 0x19a <main+0x28>

000001de <Timer_init>:
            }
        }*/
        
        //trafficLight(0);
        //playground();
    }
 1de:	cf 93       	push	r28
    
    // enable global interrupt
    sei();

    return temp_timer_count;
}
 1e0:	df 93       	push	r29
 1e2:	1f 92       	push	r1
 1e4:	cd b7       	in	r28, 0x3d	; 61
 1e6:	de b7       	in	r29, 0x3e	; 62
 1e8:	89 83       	std	Y+1, r24	; 0x01
 1ea:	89 81       	ldd	r24, Y+1	; 0x01
 1ec:	88 2f       	mov	r24, r24
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	05 d0       	rcall	.+10     	; 0x1fc <Timer_init_withoutStruct>
 1f2:	00 00       	nop
 1f4:	0f 90       	pop	r0
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	08 95       	ret

000001fc <Timer_init_withoutStruct>:
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	1f 92       	push	r1
 202:	cd b7       	in	r28, 0x3d	; 61
 204:	de b7       	in	r29, 0x3e	; 62
 206:	89 83       	std	Y+1, r24	; 0x01
 208:	85 e4       	ldi	r24, 0x45	; 69
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	25 e4       	ldi	r18, 0x45	; 69
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	f9 01       	movw	r30, r18
 212:	20 81       	ld	r18, Z
 214:	27 7f       	andi	r18, 0xF7	; 247
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18
 21a:	84 e4       	ldi	r24, 0x44	; 68
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	24 e4       	ldi	r18, 0x44	; 68
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	f9 01       	movw	r30, r18
 224:	20 81       	ld	r18, Z
 226:	22 60       	ori	r18, 0x02	; 2
 228:	fc 01       	movw	r30, r24
 22a:	20 83       	st	Z, r18
 22c:	84 e4       	ldi	r24, 0x44	; 68
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	24 e4       	ldi	r18, 0x44	; 68
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	f9 01       	movw	r30, r18
 236:	20 81       	ld	r18, Z
 238:	2e 7f       	andi	r18, 0xFE	; 254
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	88 2f       	mov	r24, r24
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	40 97       	sbiw	r24, 0x10	; 16
 246:	09 f5       	brne	.+66     	; 0x28a <Timer_init_withoutStruct+0x8e>
 248:	87 e4       	ldi	r24, 0x47	; 71
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	29 ef       	ldi	r18, 0xF9	; 249
 24e:	fc 01       	movw	r30, r24
 250:	20 83       	st	Z, r18
 252:	85 e4       	ldi	r24, 0x45	; 69
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	25 e4       	ldi	r18, 0x45	; 69
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	f9 01       	movw	r30, r18
 25c:	20 81       	ld	r18, Z
 25e:	2b 7f       	andi	r18, 0xFB	; 251
 260:	fc 01       	movw	r30, r24
 262:	20 83       	st	Z, r18
 264:	85 e4       	ldi	r24, 0x45	; 69
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	25 e4       	ldi	r18, 0x45	; 69
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	f9 01       	movw	r30, r18
 26e:	20 81       	ld	r18, Z
 270:	22 60       	ori	r18, 0x02	; 2
 272:	fc 01       	movw	r30, r24
 274:	20 83       	st	Z, r18
 276:	85 e4       	ldi	r24, 0x45	; 69
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	25 e4       	ldi	r18, 0x45	; 69
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	f9 01       	movw	r30, r18
 280:	20 81       	ld	r18, Z
 282:	21 60       	ori	r18, 0x01	; 1
 284:	fc 01       	movw	r30, r24
 286:	20 83       	st	Z, r18
 288:	21 c0       	rjmp	.+66     	; 0x2cc <Timer_init_withoutStruct+0xd0>
 28a:	87 e4       	ldi	r24, 0x47	; 71
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	2c e7       	ldi	r18, 0x7C	; 124
 290:	fc 01       	movw	r30, r24
 292:	20 83       	st	Z, r18
 294:	85 e4       	ldi	r24, 0x45	; 69
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	25 e4       	ldi	r18, 0x45	; 69
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	f9 01       	movw	r30, r18
 29e:	20 81       	ld	r18, Z
 2a0:	2b 7f       	andi	r18, 0xFB	; 251
 2a2:	fc 01       	movw	r30, r24
 2a4:	20 83       	st	Z, r18
 2a6:	85 e4       	ldi	r24, 0x45	; 69
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	25 e4       	ldi	r18, 0x45	; 69
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	f9 01       	movw	r30, r18
 2b0:	20 81       	ld	r18, Z
 2b2:	22 60       	ori	r18, 0x02	; 2
 2b4:	fc 01       	movw	r30, r24
 2b6:	20 83       	st	Z, r18
 2b8:	85 e4       	ldi	r24, 0x45	; 69
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	25 e4       	ldi	r18, 0x45	; 69
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	f9 01       	movw	r30, r18
 2c2:	20 81       	ld	r18, Z
 2c4:	2e 7f       	andi	r18, 0xFE	; 254
 2c6:	fc 01       	movw	r30, r24
 2c8:	20 83       	st	Z, r18
 2ca:	00 00       	nop
 2cc:	8e e6       	ldi	r24, 0x6E	; 110
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	2e e6       	ldi	r18, 0x6E	; 110
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	f9 01       	movw	r30, r18
 2d6:	20 81       	ld	r18, Z
 2d8:	2b 7f       	andi	r18, 0xFB	; 251
 2da:	fc 01       	movw	r30, r24
 2dc:	20 83       	st	Z, r18
 2de:	8e e6       	ldi	r24, 0x6E	; 110
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	2e e6       	ldi	r18, 0x6E	; 110
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	f9 01       	movw	r30, r18
 2e8:	20 81       	ld	r18, Z
 2ea:	22 60       	ori	r18, 0x02	; 2
 2ec:	fc 01       	movw	r30, r24
 2ee:	20 83       	st	Z, r18
 2f0:	8e e6       	ldi	r24, 0x6E	; 110
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	2e e6       	ldi	r18, 0x6E	; 110
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	f9 01       	movw	r30, r18
 2fa:	20 81       	ld	r18, Z
 2fc:	2e 7f       	andi	r18, 0xFE	; 254
 2fe:	fc 01       	movw	r30, r24
 300:	20 83       	st	Z, r18
 302:	00 00       	nop
 304:	0f 90       	pop	r0
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	08 95       	ret

0000030c <__vector_16>:
 ( not used atm)
 Timer compare A interrput:
 - increase timer_count
 - if timer_count is at max of uint16, set it to 0
 */
ISR(TIMER0_COMPA_vect){
 30c:	1f 92       	push	r1
 30e:	0f 92       	push	r0
 310:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 314:	0f 92       	push	r0
 316:	11 24       	eor	r1, r1
 318:	8f 93       	push	r24
 31a:	9f 93       	push	r25
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
    timer_count++;
 324:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 328:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 32c:	01 96       	adiw	r24, 0x01	; 1
 32e:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
 332:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}
 336:	00 00       	nop
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	9f 91       	pop	r25
 33e:	8f 91       	pop	r24
 340:	0f 90       	pop	r0
 342:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 346:	0f 90       	pop	r0
 348:	1f 90       	pop	r1
 34a:	18 95       	reti

0000034c <buff_put>:
    /* Wait for data to be received */
    while ( !(UCSR0A & (1<<RXC0)) )
        ;
    /* Get and return received data from buffer */
    return UDR0;
}
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	00 d0       	rcall	.+0      	; 0x352 <buff_put+0x6>
 352:	1f 92       	push	r1
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
 358:	89 83       	std	Y+1, r24	; 0x01
 35a:	7b 83       	std	Y+3, r23	; 0x03
 35c:	6a 83       	std	Y+2, r22	; 0x02
 35e:	8a 81       	ldd	r24, Y+2	; 0x02
 360:	9b 81       	ldd	r25, Y+3	; 0x03
 362:	8e 5f       	subi	r24, 0xFE	; 254
 364:	9d 4f       	sbci	r25, 0xFD	; 253
 366:	fc 01       	movw	r30, r24
 368:	80 81       	ld	r24, Z
 36a:	91 81       	ldd	r25, Z+1	; 0x01
 36c:	9c 01       	movw	r18, r24
 36e:	2f 5f       	subi	r18, 0xFF	; 255
 370:	3f 4f       	sbci	r19, 0xFF	; 255
 372:	8a 81       	ldd	r24, Y+2	; 0x02
 374:	9b 81       	ldd	r25, Y+3	; 0x03
 376:	9e 5f       	subi	r25, 0xFE	; 254
 378:	fc 01       	movw	r30, r24
 37a:	80 81       	ld	r24, Z
 37c:	91 81       	ldd	r25, Z+1	; 0x01
 37e:	28 17       	cp	r18, r24
 380:	39 07       	cpc	r19, r25
 382:	91 f0       	breq	.+36     	; 0x3a8 <buff_put+0x5c>
 384:	8a 81       	ldd	r24, Y+2	; 0x02
 386:	9b 81       	ldd	r25, Y+3	; 0x03
 388:	9e 5f       	subi	r25, 0xFE	; 254
 38a:	fc 01       	movw	r30, r24
 38c:	80 81       	ld	r24, Z
 38e:	91 81       	ldd	r25, Z+1	; 0x01
 390:	89 2b       	or	r24, r25
 392:	61 f4       	brne	.+24     	; 0x3ac <buff_put+0x60>
 394:	8a 81       	ldd	r24, Y+2	; 0x02
 396:	9b 81       	ldd	r25, Y+3	; 0x03
 398:	8e 5f       	subi	r24, 0xFE	; 254
 39a:	9d 4f       	sbci	r25, 0xFD	; 253
 39c:	fc 01       	movw	r30, r24
 39e:	80 81       	ld	r24, Z
 3a0:	91 81       	ldd	r25, Z+1	; 0x01
 3a2:	8f 3f       	cpi	r24, 0xFF	; 255
 3a4:	91 40       	sbci	r25, 0x01	; 1
 3a6:	11 f4       	brne	.+4      	; 0x3ac <buff_put+0x60>
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	31 c0       	rjmp	.+98     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ac:	8a 81       	ldd	r24, Y+2	; 0x02
 3ae:	9b 81       	ldd	r25, Y+3	; 0x03
 3b0:	8e 5f       	subi	r24, 0xFE	; 254
 3b2:	9d 4f       	sbci	r25, 0xFD	; 253
 3b4:	fc 01       	movw	r30, r24
 3b6:	80 81       	ld	r24, Z
 3b8:	91 81       	ldd	r25, Z+1	; 0x01
 3ba:	2a 81       	ldd	r18, Y+2	; 0x02
 3bc:	3b 81       	ldd	r19, Y+3	; 0x03
 3be:	82 0f       	add	r24, r18
 3c0:	93 1f       	adc	r25, r19
 3c2:	29 81       	ldd	r18, Y+1	; 0x01
 3c4:	fc 01       	movw	r30, r24
 3c6:	20 83       	st	Z, r18
 3c8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ca:	9b 81       	ldd	r25, Y+3	; 0x03
 3cc:	8e 5f       	subi	r24, 0xFE	; 254
 3ce:	9d 4f       	sbci	r25, 0xFD	; 253
 3d0:	fc 01       	movw	r30, r24
 3d2:	80 81       	ld	r24, Z
 3d4:	91 81       	ldd	r25, Z+1	; 0x01
 3d6:	9c 01       	movw	r18, r24
 3d8:	2f 5f       	subi	r18, 0xFF	; 255
 3da:	3f 4f       	sbci	r19, 0xFF	; 255
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	9b 81       	ldd	r25, Y+3	; 0x03
 3e0:	8e 5f       	subi	r24, 0xFE	; 254
 3e2:	9d 4f       	sbci	r25, 0xFD	; 253
 3e4:	fc 01       	movw	r30, r24
 3e6:	31 83       	std	Z+1, r19	; 0x01
 3e8:	20 83       	st	Z, r18
 3ea:	8a 81       	ldd	r24, Y+2	; 0x02
 3ec:	9b 81       	ldd	r25, Y+3	; 0x03
 3ee:	8e 5f       	subi	r24, 0xFE	; 254
 3f0:	9d 4f       	sbci	r25, 0xFD	; 253
 3f2:	fc 01       	movw	r30, r24
 3f4:	80 81       	ld	r24, Z
 3f6:	91 81       	ldd	r25, Z+1	; 0x01
 3f8:	81 15       	cp	r24, r1
 3fa:	92 40       	sbci	r25, 0x02	; 2
 3fc:	38 f0       	brcs	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	8a 81       	ldd	r24, Y+2	; 0x02
 400:	9b 81       	ldd	r25, Y+3	; 0x03
 402:	8e 5f       	subi	r24, 0xFE	; 254
 404:	9d 4f       	sbci	r25, 0xFD	; 253
 406:	fc 01       	movw	r30, r24
 408:	11 82       	std	Z+1, r1	; 0x01
 40a:	10 82       	st	Z, r1
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <buff_get>:
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	00 d0       	rcall	.+0      	; 0x420 <buff_get+0x6>
 420:	00 d0       	rcall	.+0      	; 0x422 <buff_get+0x8>
 422:	cd b7       	in	r28, 0x3d	; 61
 424:	de b7       	in	r29, 0x3e	; 62
 426:	9a 83       	std	Y+2, r25	; 0x02
 428:	89 83       	std	Y+1, r24	; 0x01
 42a:	7c 83       	std	Y+4, r23	; 0x04
 42c:	6b 83       	std	Y+3, r22	; 0x03
 42e:	8b 81       	ldd	r24, Y+3	; 0x03
 430:	9c 81       	ldd	r25, Y+4	; 0x04
 432:	9e 5f       	subi	r25, 0xFE	; 254
 434:	fc 01       	movw	r30, r24
 436:	20 81       	ld	r18, Z
 438:	31 81       	ldd	r19, Z+1	; 0x01
 43a:	8b 81       	ldd	r24, Y+3	; 0x03
 43c:	9c 81       	ldd	r25, Y+4	; 0x04
 43e:	8e 5f       	subi	r24, 0xFE	; 254
 440:	9d 4f       	sbci	r25, 0xFD	; 253
 442:	fc 01       	movw	r30, r24
 444:	80 81       	ld	r24, Z
 446:	91 81       	ldd	r25, Z+1	; 0x01
 448:	28 17       	cp	r18, r24
 44a:	39 07       	cpc	r19, r25
 44c:	11 f4       	brne	.+4      	; 0x452 <buff_get+0x38>
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	2f c0       	rjmp	.+94     	; 0x4b0 <buff_get+0x96>
 452:	8b 81       	ldd	r24, Y+3	; 0x03
 454:	9c 81       	ldd	r25, Y+4	; 0x04
 456:	9e 5f       	subi	r25, 0xFE	; 254
 458:	fc 01       	movw	r30, r24
 45a:	80 81       	ld	r24, Z
 45c:	91 81       	ldd	r25, Z+1	; 0x01
 45e:	2b 81       	ldd	r18, Y+3	; 0x03
 460:	3c 81       	ldd	r19, Y+4	; 0x04
 462:	82 0f       	add	r24, r18
 464:	93 1f       	adc	r25, r19
 466:	fc 01       	movw	r30, r24
 468:	20 81       	ld	r18, Z
 46a:	89 81       	ldd	r24, Y+1	; 0x01
 46c:	9a 81       	ldd	r25, Y+2	; 0x02
 46e:	fc 01       	movw	r30, r24
 470:	20 83       	st	Z, r18
 472:	8b 81       	ldd	r24, Y+3	; 0x03
 474:	9c 81       	ldd	r25, Y+4	; 0x04
 476:	9e 5f       	subi	r25, 0xFE	; 254
 478:	fc 01       	movw	r30, r24
 47a:	80 81       	ld	r24, Z
 47c:	91 81       	ldd	r25, Z+1	; 0x01
 47e:	9c 01       	movw	r18, r24
 480:	2f 5f       	subi	r18, 0xFF	; 255
 482:	3f 4f       	sbci	r19, 0xFF	; 255
 484:	8b 81       	ldd	r24, Y+3	; 0x03
 486:	9c 81       	ldd	r25, Y+4	; 0x04
 488:	9e 5f       	subi	r25, 0xFE	; 254
 48a:	fc 01       	movw	r30, r24
 48c:	31 83       	std	Z+1, r19	; 0x01
 48e:	20 83       	st	Z, r18
 490:	8b 81       	ldd	r24, Y+3	; 0x03
 492:	9c 81       	ldd	r25, Y+4	; 0x04
 494:	9e 5f       	subi	r25, 0xFE	; 254
 496:	fc 01       	movw	r30, r24
 498:	80 81       	ld	r24, Z
 49a:	91 81       	ldd	r25, Z+1	; 0x01
 49c:	81 15       	cp	r24, r1
 49e:	92 40       	sbci	r25, 0x02	; 2
 4a0:	30 f0       	brcs	.+12     	; 0x4ae <buff_get+0x94>
 4a2:	8b 81       	ldd	r24, Y+3	; 0x03
 4a4:	9c 81       	ldd	r25, Y+4	; 0x04
 4a6:	9e 5f       	subi	r25, 0xFE	; 254
 4a8:	fc 01       	movw	r30, r24
 4aa:	11 82       	std	Z+1, r1	; 0x01
 4ac:	10 82       	st	Z, r1
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	0f 90       	pop	r0
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	0f 90       	pop	r0
 4b8:	df 91       	pop	r29
 4ba:	cf 91       	pop	r28
 4bc:	08 95       	ret

000004be <uart_init>:
 4be:	cf 93       	push	r28
 4c0:	df 93       	push	r29
 4c2:	00 d0       	rcall	.+0      	; 0x4c4 <uart_init+0x6>
 4c4:	cd b7       	in	r28, 0x3d	; 61
 4c6:	de b7       	in	r29, 0x3e	; 62
 4c8:	87 e6       	ldi	r24, 0x67	; 103
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	9a 83       	std	Y+2, r25	; 0x02
 4ce:	89 83       	std	Y+1, r24	; 0x01
 4d0:	85 ec       	ldi	r24, 0xC5	; 197
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	29 81       	ldd	r18, Y+1	; 0x01
 4d6:	3a 81       	ldd	r19, Y+2	; 0x02
 4d8:	23 2f       	mov	r18, r19
 4da:	33 27       	eor	r19, r19
 4dc:	fc 01       	movw	r30, r24
 4de:	20 83       	st	Z, r18
 4e0:	84 ec       	ldi	r24, 0xC4	; 196
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	29 81       	ldd	r18, Y+1	; 0x01
 4e6:	fc 01       	movw	r30, r24
 4e8:	20 83       	st	Z, r18
 4ea:	81 ec       	ldi	r24, 0xC1	; 193
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	28 e1       	ldi	r18, 0x18	; 24
 4f0:	fc 01       	movw	r30, r24
 4f2:	20 83       	st	Z, r18
 4f4:	82 ec       	ldi	r24, 0xC2	; 194
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	26 e0       	ldi	r18, 0x06	; 6
 4fa:	fc 01       	movw	r30, r24
 4fc:	20 83       	st	Z, r18
 4fe:	00 00       	nop
 500:	0f 90       	pop	r0
 502:	0f 90       	pop	r0
 504:	df 91       	pop	r29
 506:	cf 91       	pop	r28
 508:	08 95       	ret

0000050a <uart_init_isr>:
 50a:	cf 93       	push	r28
 50c:	df 93       	push	r29
 50e:	cd b7       	in	r28, 0x3d	; 61
 510:	de b7       	in	r29, 0x3e	; 62
 512:	d5 df       	rcall	.-86     	; 0x4be <uart_init>
 514:	81 ec       	ldi	r24, 0xC1	; 193
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	21 ec       	ldi	r18, 0xC1	; 193
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	f9 01       	movw	r30, r18
 51e:	20 81       	ld	r18, Z
 520:	20 62       	ori	r18, 0x20	; 32
 522:	fc 01       	movw	r30, r24
 524:	20 83       	st	Z, r18
 526:	81 ec       	ldi	r24, 0xC1	; 193
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	21 ec       	ldi	r18, 0xC1	; 193
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	f9 01       	movw	r30, r18
 530:	20 81       	ld	r18, Z
 532:	20 68       	ori	r18, 0x80	; 128
 534:	fc 01       	movw	r30, r24
 536:	20 83       	st	Z, r18
 538:	00 00       	nop
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	08 95       	ret

00000540 <uart_send_isr>:
 540:	cf 93       	push	r28
 542:	df 93       	push	r29
 544:	00 d0       	rcall	.+0      	; 0x546 <uart_send_isr+0x6>
 546:	00 d0       	rcall	.+0      	; 0x548 <uart_send_isr+0x8>
 548:	00 d0       	rcall	.+0      	; 0x54a <uart_send_isr+0xa>
 54a:	cd b7       	in	r28, 0x3d	; 61
 54c:	de b7       	in	r29, 0x3e	; 62
 54e:	9e 83       	std	Y+6, r25	; 0x06
 550:	8d 83       	std	Y+5, r24	; 0x05
 552:	8d 81       	ldd	r24, Y+5	; 0x05
 554:	9e 81       	ldd	r25, Y+6	; 0x06
 556:	d7 d0       	rcall	.+430    	; 0x706 <strlen>
 558:	9c 83       	std	Y+4, r25	; 0x04
 55a:	8b 83       	std	Y+3, r24	; 0x03
 55c:	1a 82       	std	Y+2, r1	; 0x02
 55e:	19 82       	std	Y+1, r1	; 0x01
 560:	23 c0       	rjmp	.+70     	; 0x5a8 <uart_send_isr+0x68>
 562:	89 81       	ldd	r24, Y+1	; 0x01
 564:	9a 81       	ldd	r25, Y+2	; 0x02
 566:	2d 81       	ldd	r18, Y+5	; 0x05
 568:	3e 81       	ldd	r19, Y+6	; 0x06
 56a:	82 0f       	add	r24, r18
 56c:	93 1f       	adc	r25, r19
 56e:	fc 01       	movw	r30, r24
 570:	80 81       	ld	r24, Z
 572:	60 e1       	ldi	r22, 0x10	; 16
 574:	71 e0       	ldi	r23, 0x01	; 1
 576:	ea de       	rcall	.-556    	; 0x34c <buff_put>
 578:	81 30       	cpi	r24, 0x01	; 1
 57a:	89 f4       	brne	.+34     	; 0x59e <uart_send_isr+0x5e>
 57c:	80 ec       	ldi	r24, 0xC0	; 192
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	20 ec       	ldi	r18, 0xC0	; 192
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	f9 01       	movw	r30, r18
 586:	20 81       	ld	r18, Z
 588:	20 62       	ori	r18, 0x20	; 32
 58a:	fc 01       	movw	r30, r24
 58c:	20 83       	st	Z, r18
 58e:	89 81       	ldd	r24, Y+1	; 0x01
 590:	9a 81       	ldd	r25, Y+2	; 0x02
 592:	9c 01       	movw	r18, r24
 594:	2f 5f       	subi	r18, 0xFF	; 255
 596:	3f 4f       	sbci	r19, 0xFF	; 255
 598:	3a 83       	std	Y+2, r19	; 0x02
 59a:	29 83       	std	Y+1, r18	; 0x01
 59c:	17 c0       	rjmp	.+46     	; 0x5cc <uart_send_isr+0x8c>
 59e:	89 81       	ldd	r24, Y+1	; 0x01
 5a0:	9a 81       	ldd	r25, Y+2	; 0x02
 5a2:	01 96       	adiw	r24, 0x01	; 1
 5a4:	9a 83       	std	Y+2, r25	; 0x02
 5a6:	89 83       	std	Y+1, r24	; 0x01
 5a8:	29 81       	ldd	r18, Y+1	; 0x01
 5aa:	3a 81       	ldd	r19, Y+2	; 0x02
 5ac:	8b 81       	ldd	r24, Y+3	; 0x03
 5ae:	9c 81       	ldd	r25, Y+4	; 0x04
 5b0:	28 17       	cp	r18, r24
 5b2:	39 07       	cpc	r19, r25
 5b4:	b4 f2       	brlt	.-84     	; 0x562 <uart_send_isr+0x22>
 5b6:	80 ec       	ldi	r24, 0xC0	; 192
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	20 ec       	ldi	r18, 0xC0	; 192
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	f9 01       	movw	r30, r18
 5c0:	20 81       	ld	r18, Z
 5c2:	20 62       	ori	r18, 0x20	; 32
 5c4:	fc 01       	movw	r30, r24
 5c6:	20 83       	st	Z, r18
 5c8:	80 e0       	ldi	r24, 0x00	; 0
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	26 96       	adiw	r28, 0x06	; 6
 5ce:	0f b6       	in	r0, 0x3f	; 63
 5d0:	f8 94       	cli
 5d2:	de bf       	out	0x3e, r29	; 62
 5d4:	0f be       	out	0x3f, r0	; 63
 5d6:	cd bf       	out	0x3d, r28	; 61
 5d8:	df 91       	pop	r29
 5da:	cf 91       	pop	r28
 5dc:	08 95       	ret

000005de <uart_get_data>:

unsigned char uart_get_data() {
 5de:	cf 93       	push	r28
 5e0:	df 93       	push	r29
 5e2:	1f 92       	push	r1
 5e4:	cd b7       	in	r28, 0x3d	; 61
 5e6:	de b7       	in	r29, 0x3e	; 62
	unsigned char pByte;
    // Pull one byte from buffer and store it in pByte
    if (buff_get(&pByte, &bufferRecv) == 0) {
 5e8:	64 e1       	ldi	r22, 0x14	; 20
 5ea:	73 e0       	ldi	r23, 0x03	; 3
 5ec:	ce 01       	movw	r24, r28
 5ee:	01 96       	adiw	r24, 0x01	; 1
 5f0:	14 df       	rcall	.-472    	; 0x41a <buff_get>
 5f2:	88 23       	and	r24, r24
 5f4:	11 f4       	brne	.+4      	; 0x5fa <uart_get_data+0x1c>
        // Return byte
        return pByte;
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	01 c0       	rjmp	.+2      	; 0x5fc <uart_get_data+0x1e>
    }else {
        return 0;
 5fa:	80 e0       	ldi	r24, 0x00	; 0
    }
}
 5fc:	0f 90       	pop	r0
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	08 95       	ret

00000604 <__vector_21>:

/**
 ISR for USART Data Register Empty flag
 */
ISR(USART0_UDRE_vect){
 604:	1f 92       	push	r1
 606:	0f 92       	push	r0
 608:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 60c:	0f 92       	push	r0
 60e:	11 24       	eor	r1, r1
 610:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 614:	0f 92       	push	r0
 616:	2f 93       	push	r18
 618:	3f 93       	push	r19
 61a:	4f 93       	push	r20
 61c:	5f 93       	push	r21
 61e:	6f 93       	push	r22
 620:	7f 93       	push	r23
 622:	8f 93       	push	r24
 624:	9f 93       	push	r25
 626:	af 93       	push	r26
 628:	bf 93       	push	r27
 62a:	ef 93       	push	r30
 62c:	ff 93       	push	r31
 62e:	cf 93       	push	r28
 630:	df 93       	push	r29
 632:	1f 92       	push	r1
 634:	cd b7       	in	r28, 0x3d	; 61
 636:	de b7       	in	r29, 0x3e	; 62
    unsigned char pByte;
    // Pull one byte from buffer and store it in pByte
    if (buff_get(&pByte, &bufferSend) == 0) {
 638:	60 e1       	ldi	r22, 0x10	; 16
 63a:	71 e0       	ldi	r23, 0x01	; 1
 63c:	ce 01       	movw	r24, r28
 63e:	01 96       	adiw	r24, 0x01	; 1
 640:	ec de       	rcall	.-552    	; 0x41a <buff_get>
 642:	88 23       	and	r24, r24
 644:	31 f4       	brne	.+12     	; 0x652 <__vector_21+0x4e>
        // Send byte
        UDR0 = pByte;
 646:	86 ec       	ldi	r24, 0xC6	; 198
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	29 81       	ldd	r18, Y+1	; 0x01
 64c:	fc 01       	movw	r30, r24
 64e:	20 83       	st	Z, r18
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
    }
}
 650:	09 c0       	rjmp	.+18     	; 0x664 <__vector_21+0x60>
    if (buff_get(&pByte, &bufferSend) == 0) {
        // Send byte
        UDR0 = pByte;
    }else {
        // Buffer empty: disable interrupt
        UCSR0A &= ~(1 << UDRE0);
 652:	80 ec       	ldi	r24, 0xC0	; 192
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	20 ec       	ldi	r18, 0xC0	; 192
 658:	30 e0       	ldi	r19, 0x00	; 0
 65a:	f9 01       	movw	r30, r18
 65c:	20 81       	ld	r18, Z
 65e:	2f 7d       	andi	r18, 0xDF	; 223
 660:	fc 01       	movw	r30, r24
 662:	20 83       	st	Z, r18
    }
}
 664:	00 00       	nop
 666:	0f 90       	pop	r0
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	ff 91       	pop	r31
 66e:	ef 91       	pop	r30
 670:	bf 91       	pop	r27
 672:	af 91       	pop	r26
 674:	9f 91       	pop	r25
 676:	8f 91       	pop	r24
 678:	7f 91       	pop	r23
 67a:	6f 91       	pop	r22
 67c:	5f 91       	pop	r21
 67e:	4f 91       	pop	r20
 680:	3f 91       	pop	r19
 682:	2f 91       	pop	r18
 684:	0f 90       	pop	r0
 686:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 68a:	0f 90       	pop	r0
 68c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 690:	0f 90       	pop	r0
 692:	1f 90       	pop	r1
 694:	18 95       	reti

00000696 <__vector_20>:

ISR(USART0_RX_vect){
 696:	1f 92       	push	r1
 698:	0f 92       	push	r0
 69a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 69e:	0f 92       	push	r0
 6a0:	11 24       	eor	r1, r1
 6a2:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 6a6:	0f 92       	push	r0
 6a8:	2f 93       	push	r18
 6aa:	3f 93       	push	r19
 6ac:	4f 93       	push	r20
 6ae:	5f 93       	push	r21
 6b0:	6f 93       	push	r22
 6b2:	7f 93       	push	r23
 6b4:	8f 93       	push	r24
 6b6:	9f 93       	push	r25
 6b8:	af 93       	push	r26
 6ba:	bf 93       	push	r27
 6bc:	ef 93       	push	r30
 6be:	ff 93       	push	r31
 6c0:	cf 93       	push	r28
 6c2:	df 93       	push	r29
 6c4:	cd b7       	in	r28, 0x3d	; 61
 6c6:	de b7       	in	r29, 0x3e	; 62
    // Put received byte to bufferRecv (will read but don't save the value if buffer overflows)
    buff_put(UDR0, &bufferRecv);
 6c8:	86 ec       	ldi	r24, 0xC6	; 198
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	fc 01       	movw	r30, r24
 6ce:	80 81       	ld	r24, Z
 6d0:	64 e1       	ldi	r22, 0x14	; 20
 6d2:	73 e0       	ldi	r23, 0x03	; 3
 6d4:	3b de       	rcall	.-906    	; 0x34c <buff_put>
}
 6d6:	00 00       	nop
 6d8:	df 91       	pop	r29
 6da:	cf 91       	pop	r28
 6dc:	ff 91       	pop	r31
 6de:	ef 91       	pop	r30
 6e0:	bf 91       	pop	r27
 6e2:	af 91       	pop	r26
 6e4:	9f 91       	pop	r25
 6e6:	8f 91       	pop	r24
 6e8:	7f 91       	pop	r23
 6ea:	6f 91       	pop	r22
 6ec:	5f 91       	pop	r21
 6ee:	4f 91       	pop	r20
 6f0:	3f 91       	pop	r19
 6f2:	2f 91       	pop	r18
 6f4:	0f 90       	pop	r0
 6f6:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 6fa:	0f 90       	pop	r0
 6fc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 700:	0f 90       	pop	r0
 702:	1f 90       	pop	r1
 704:	18 95       	reti

00000706 <strlen>:
 706:	fc 01       	movw	r30, r24
 708:	01 90       	ld	r0, Z+
 70a:	00 20       	and	r0, r0
 70c:	e9 f7       	brne	.-6      	; 0x708 <strlen+0x2>
 70e:	80 95       	com	r24
 710:	90 95       	com	r25
 712:	8e 0f       	add	r24, r30
 714:	9f 1f       	adc	r25, r31
 716:	08 95       	ret

00000718 <sprintf>:
 718:	0f 93       	push	r16
 71a:	1f 93       	push	r17
 71c:	cf 93       	push	r28
 71e:	df 93       	push	r29
 720:	cd b7       	in	r28, 0x3d	; 61
 722:	de b7       	in	r29, 0x3e	; 62
 724:	2e 97       	sbiw	r28, 0x0e	; 14
 726:	0f b6       	in	r0, 0x3f	; 63
 728:	f8 94       	cli
 72a:	de bf       	out	0x3e, r29	; 62
 72c:	0f be       	out	0x3f, r0	; 63
 72e:	cd bf       	out	0x3d, r28	; 61
 730:	0d 89       	ldd	r16, Y+21	; 0x15
 732:	1e 89       	ldd	r17, Y+22	; 0x16
 734:	86 e0       	ldi	r24, 0x06	; 6
 736:	8c 83       	std	Y+4, r24	; 0x04
 738:	1a 83       	std	Y+2, r17	; 0x02
 73a:	09 83       	std	Y+1, r16	; 0x01
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f e7       	ldi	r25, 0x7F	; 127
 740:	9e 83       	std	Y+6, r25	; 0x06
 742:	8d 83       	std	Y+5, r24	; 0x05
 744:	ae 01       	movw	r20, r28
 746:	47 5e       	subi	r20, 0xE7	; 231
 748:	5f 4f       	sbci	r21, 0xFF	; 255
 74a:	6f 89       	ldd	r22, Y+23	; 0x17
 74c:	78 8d       	ldd	r23, Y+24	; 0x18
 74e:	ce 01       	movw	r24, r28
 750:	01 96       	adiw	r24, 0x01	; 1
 752:	10 d0       	rcall	.+32     	; 0x774 <vfprintf>
 754:	ef 81       	ldd	r30, Y+7	; 0x07
 756:	f8 85       	ldd	r31, Y+8	; 0x08
 758:	e0 0f       	add	r30, r16
 75a:	f1 1f       	adc	r31, r17
 75c:	10 82       	st	Z, r1
 75e:	2e 96       	adiw	r28, 0x0e	; 14
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	f8 94       	cli
 764:	de bf       	out	0x3e, r29	; 62
 766:	0f be       	out	0x3f, r0	; 63
 768:	cd bf       	out	0x3d, r28	; 61
 76a:	df 91       	pop	r29
 76c:	cf 91       	pop	r28
 76e:	1f 91       	pop	r17
 770:	0f 91       	pop	r16
 772:	08 95       	ret

00000774 <vfprintf>:
 774:	2f 92       	push	r2
 776:	3f 92       	push	r3
 778:	4f 92       	push	r4
 77a:	5f 92       	push	r5
 77c:	6f 92       	push	r6
 77e:	7f 92       	push	r7
 780:	8f 92       	push	r8
 782:	9f 92       	push	r9
 784:	af 92       	push	r10
 786:	bf 92       	push	r11
 788:	cf 92       	push	r12
 78a:	df 92       	push	r13
 78c:	ef 92       	push	r14
 78e:	ff 92       	push	r15
 790:	0f 93       	push	r16
 792:	1f 93       	push	r17
 794:	cf 93       	push	r28
 796:	df 93       	push	r29
 798:	cd b7       	in	r28, 0x3d	; 61
 79a:	de b7       	in	r29, 0x3e	; 62
 79c:	2b 97       	sbiw	r28, 0x0b	; 11
 79e:	0f b6       	in	r0, 0x3f	; 63
 7a0:	f8 94       	cli
 7a2:	de bf       	out	0x3e, r29	; 62
 7a4:	0f be       	out	0x3f, r0	; 63
 7a6:	cd bf       	out	0x3d, r28	; 61
 7a8:	6c 01       	movw	r12, r24
 7aa:	7b 01       	movw	r14, r22
 7ac:	8a 01       	movw	r16, r20
 7ae:	fc 01       	movw	r30, r24
 7b0:	17 82       	std	Z+7, r1	; 0x07
 7b2:	16 82       	std	Z+6, r1	; 0x06
 7b4:	83 81       	ldd	r24, Z+3	; 0x03
 7b6:	81 ff       	sbrs	r24, 1
 7b8:	bf c1       	rjmp	.+894    	; 0xb38 <vfprintf+0x3c4>
 7ba:	ce 01       	movw	r24, r28
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	3c 01       	movw	r6, r24
 7c0:	f6 01       	movw	r30, r12
 7c2:	93 81       	ldd	r25, Z+3	; 0x03
 7c4:	f7 01       	movw	r30, r14
 7c6:	93 fd       	sbrc	r25, 3
 7c8:	85 91       	lpm	r24, Z+
 7ca:	93 ff       	sbrs	r25, 3
 7cc:	81 91       	ld	r24, Z+
 7ce:	7f 01       	movw	r14, r30
 7d0:	88 23       	and	r24, r24
 7d2:	09 f4       	brne	.+2      	; 0x7d6 <vfprintf+0x62>
 7d4:	ad c1       	rjmp	.+858    	; 0xb30 <vfprintf+0x3bc>
 7d6:	85 32       	cpi	r24, 0x25	; 37
 7d8:	39 f4       	brne	.+14     	; 0x7e8 <vfprintf+0x74>
 7da:	93 fd       	sbrc	r25, 3
 7dc:	85 91       	lpm	r24, Z+
 7de:	93 ff       	sbrs	r25, 3
 7e0:	81 91       	ld	r24, Z+
 7e2:	7f 01       	movw	r14, r30
 7e4:	85 32       	cpi	r24, 0x25	; 37
 7e6:	21 f4       	brne	.+8      	; 0x7f0 <vfprintf+0x7c>
 7e8:	b6 01       	movw	r22, r12
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	d6 d1       	rcall	.+940    	; 0xb9a <fputc>
 7ee:	e8 cf       	rjmp	.-48     	; 0x7c0 <vfprintf+0x4c>
 7f0:	91 2c       	mov	r9, r1
 7f2:	21 2c       	mov	r2, r1
 7f4:	31 2c       	mov	r3, r1
 7f6:	ff e1       	ldi	r31, 0x1F	; 31
 7f8:	f3 15       	cp	r31, r3
 7fa:	d8 f0       	brcs	.+54     	; 0x832 <vfprintf+0xbe>
 7fc:	8b 32       	cpi	r24, 0x2B	; 43
 7fe:	79 f0       	breq	.+30     	; 0x81e <vfprintf+0xaa>
 800:	38 f4       	brcc	.+14     	; 0x810 <vfprintf+0x9c>
 802:	80 32       	cpi	r24, 0x20	; 32
 804:	79 f0       	breq	.+30     	; 0x824 <vfprintf+0xb0>
 806:	83 32       	cpi	r24, 0x23	; 35
 808:	a1 f4       	brne	.+40     	; 0x832 <vfprintf+0xbe>
 80a:	23 2d       	mov	r18, r3
 80c:	20 61       	ori	r18, 0x10	; 16
 80e:	1d c0       	rjmp	.+58     	; 0x84a <vfprintf+0xd6>
 810:	8d 32       	cpi	r24, 0x2D	; 45
 812:	61 f0       	breq	.+24     	; 0x82c <vfprintf+0xb8>
 814:	80 33       	cpi	r24, 0x30	; 48
 816:	69 f4       	brne	.+26     	; 0x832 <vfprintf+0xbe>
 818:	23 2d       	mov	r18, r3
 81a:	21 60       	ori	r18, 0x01	; 1
 81c:	16 c0       	rjmp	.+44     	; 0x84a <vfprintf+0xd6>
 81e:	83 2d       	mov	r24, r3
 820:	82 60       	ori	r24, 0x02	; 2
 822:	38 2e       	mov	r3, r24
 824:	e3 2d       	mov	r30, r3
 826:	e4 60       	ori	r30, 0x04	; 4
 828:	3e 2e       	mov	r3, r30
 82a:	2a c0       	rjmp	.+84     	; 0x880 <vfprintf+0x10c>
 82c:	f3 2d       	mov	r31, r3
 82e:	f8 60       	ori	r31, 0x08	; 8
 830:	1d c0       	rjmp	.+58     	; 0x86c <vfprintf+0xf8>
 832:	37 fc       	sbrc	r3, 7
 834:	2d c0       	rjmp	.+90     	; 0x890 <vfprintf+0x11c>
 836:	20 ed       	ldi	r18, 0xD0	; 208
 838:	28 0f       	add	r18, r24
 83a:	2a 30       	cpi	r18, 0x0A	; 10
 83c:	40 f0       	brcs	.+16     	; 0x84e <vfprintf+0xda>
 83e:	8e 32       	cpi	r24, 0x2E	; 46
 840:	b9 f4       	brne	.+46     	; 0x870 <vfprintf+0xfc>
 842:	36 fc       	sbrc	r3, 6
 844:	75 c1       	rjmp	.+746    	; 0xb30 <vfprintf+0x3bc>
 846:	23 2d       	mov	r18, r3
 848:	20 64       	ori	r18, 0x40	; 64
 84a:	32 2e       	mov	r3, r18
 84c:	19 c0       	rjmp	.+50     	; 0x880 <vfprintf+0x10c>
 84e:	36 fe       	sbrs	r3, 6
 850:	06 c0       	rjmp	.+12     	; 0x85e <vfprintf+0xea>
 852:	8a e0       	ldi	r24, 0x0A	; 10
 854:	98 9e       	mul	r9, r24
 856:	20 0d       	add	r18, r0
 858:	11 24       	eor	r1, r1
 85a:	92 2e       	mov	r9, r18
 85c:	11 c0       	rjmp	.+34     	; 0x880 <vfprintf+0x10c>
 85e:	ea e0       	ldi	r30, 0x0A	; 10
 860:	2e 9e       	mul	r2, r30
 862:	20 0d       	add	r18, r0
 864:	11 24       	eor	r1, r1
 866:	22 2e       	mov	r2, r18
 868:	f3 2d       	mov	r31, r3
 86a:	f0 62       	ori	r31, 0x20	; 32
 86c:	3f 2e       	mov	r3, r31
 86e:	08 c0       	rjmp	.+16     	; 0x880 <vfprintf+0x10c>
 870:	8c 36       	cpi	r24, 0x6C	; 108
 872:	21 f4       	brne	.+8      	; 0x87c <vfprintf+0x108>
 874:	83 2d       	mov	r24, r3
 876:	80 68       	ori	r24, 0x80	; 128
 878:	38 2e       	mov	r3, r24
 87a:	02 c0       	rjmp	.+4      	; 0x880 <vfprintf+0x10c>
 87c:	88 36       	cpi	r24, 0x68	; 104
 87e:	41 f4       	brne	.+16     	; 0x890 <vfprintf+0x11c>
 880:	f7 01       	movw	r30, r14
 882:	93 fd       	sbrc	r25, 3
 884:	85 91       	lpm	r24, Z+
 886:	93 ff       	sbrs	r25, 3
 888:	81 91       	ld	r24, Z+
 88a:	7f 01       	movw	r14, r30
 88c:	81 11       	cpse	r24, r1
 88e:	b3 cf       	rjmp	.-154    	; 0x7f6 <vfprintf+0x82>
 890:	98 2f       	mov	r25, r24
 892:	9f 7d       	andi	r25, 0xDF	; 223
 894:	95 54       	subi	r25, 0x45	; 69
 896:	93 30       	cpi	r25, 0x03	; 3
 898:	28 f4       	brcc	.+10     	; 0x8a4 <vfprintf+0x130>
 89a:	0c 5f       	subi	r16, 0xFC	; 252
 89c:	1f 4f       	sbci	r17, 0xFF	; 255
 89e:	9f e3       	ldi	r25, 0x3F	; 63
 8a0:	99 83       	std	Y+1, r25	; 0x01
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <vfprintf+0x14a>
 8a4:	83 36       	cpi	r24, 0x63	; 99
 8a6:	31 f0       	breq	.+12     	; 0x8b4 <vfprintf+0x140>
 8a8:	83 37       	cpi	r24, 0x73	; 115
 8aa:	71 f0       	breq	.+28     	; 0x8c8 <vfprintf+0x154>
 8ac:	83 35       	cpi	r24, 0x53	; 83
 8ae:	09 f0       	breq	.+2      	; 0x8b2 <vfprintf+0x13e>
 8b0:	55 c0       	rjmp	.+170    	; 0x95c <vfprintf+0x1e8>
 8b2:	20 c0       	rjmp	.+64     	; 0x8f4 <vfprintf+0x180>
 8b4:	f8 01       	movw	r30, r16
 8b6:	80 81       	ld	r24, Z
 8b8:	89 83       	std	Y+1, r24	; 0x01
 8ba:	0e 5f       	subi	r16, 0xFE	; 254
 8bc:	1f 4f       	sbci	r17, 0xFF	; 255
 8be:	88 24       	eor	r8, r8
 8c0:	83 94       	inc	r8
 8c2:	91 2c       	mov	r9, r1
 8c4:	53 01       	movw	r10, r6
 8c6:	12 c0       	rjmp	.+36     	; 0x8ec <vfprintf+0x178>
 8c8:	28 01       	movw	r4, r16
 8ca:	f2 e0       	ldi	r31, 0x02	; 2
 8cc:	4f 0e       	add	r4, r31
 8ce:	51 1c       	adc	r5, r1
 8d0:	f8 01       	movw	r30, r16
 8d2:	a0 80       	ld	r10, Z
 8d4:	b1 80       	ldd	r11, Z+1	; 0x01
 8d6:	36 fe       	sbrs	r3, 6
 8d8:	03 c0       	rjmp	.+6      	; 0x8e0 <vfprintf+0x16c>
 8da:	69 2d       	mov	r22, r9
 8dc:	70 e0       	ldi	r23, 0x00	; 0
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <vfprintf+0x170>
 8e0:	6f ef       	ldi	r22, 0xFF	; 255
 8e2:	7f ef       	ldi	r23, 0xFF	; 255
 8e4:	c5 01       	movw	r24, r10
 8e6:	4e d1       	rcall	.+668    	; 0xb84 <strnlen>
 8e8:	4c 01       	movw	r8, r24
 8ea:	82 01       	movw	r16, r4
 8ec:	f3 2d       	mov	r31, r3
 8ee:	ff 77       	andi	r31, 0x7F	; 127
 8f0:	3f 2e       	mov	r3, r31
 8f2:	15 c0       	rjmp	.+42     	; 0x91e <vfprintf+0x1aa>
 8f4:	28 01       	movw	r4, r16
 8f6:	22 e0       	ldi	r18, 0x02	; 2
 8f8:	42 0e       	add	r4, r18
 8fa:	51 1c       	adc	r5, r1
 8fc:	f8 01       	movw	r30, r16
 8fe:	a0 80       	ld	r10, Z
 900:	b1 80       	ldd	r11, Z+1	; 0x01
 902:	36 fe       	sbrs	r3, 6
 904:	03 c0       	rjmp	.+6      	; 0x90c <vfprintf+0x198>
 906:	69 2d       	mov	r22, r9
 908:	70 e0       	ldi	r23, 0x00	; 0
 90a:	02 c0       	rjmp	.+4      	; 0x910 <vfprintf+0x19c>
 90c:	6f ef       	ldi	r22, 0xFF	; 255
 90e:	7f ef       	ldi	r23, 0xFF	; 255
 910:	c5 01       	movw	r24, r10
 912:	2d d1       	rcall	.+602    	; 0xb6e <strnlen_P>
 914:	4c 01       	movw	r8, r24
 916:	f3 2d       	mov	r31, r3
 918:	f0 68       	ori	r31, 0x80	; 128
 91a:	3f 2e       	mov	r3, r31
 91c:	82 01       	movw	r16, r4
 91e:	33 fc       	sbrc	r3, 3
 920:	19 c0       	rjmp	.+50     	; 0x954 <vfprintf+0x1e0>
 922:	82 2d       	mov	r24, r2
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	88 16       	cp	r8, r24
 928:	99 06       	cpc	r9, r25
 92a:	a0 f4       	brcc	.+40     	; 0x954 <vfprintf+0x1e0>
 92c:	b6 01       	movw	r22, r12
 92e:	80 e2       	ldi	r24, 0x20	; 32
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	33 d1       	rcall	.+614    	; 0xb9a <fputc>
 934:	2a 94       	dec	r2
 936:	f5 cf       	rjmp	.-22     	; 0x922 <vfprintf+0x1ae>
 938:	f5 01       	movw	r30, r10
 93a:	37 fc       	sbrc	r3, 7
 93c:	85 91       	lpm	r24, Z+
 93e:	37 fe       	sbrs	r3, 7
 940:	81 91       	ld	r24, Z+
 942:	5f 01       	movw	r10, r30
 944:	b6 01       	movw	r22, r12
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	28 d1       	rcall	.+592    	; 0xb9a <fputc>
 94a:	21 10       	cpse	r2, r1
 94c:	2a 94       	dec	r2
 94e:	21 e0       	ldi	r18, 0x01	; 1
 950:	82 1a       	sub	r8, r18
 952:	91 08       	sbc	r9, r1
 954:	81 14       	cp	r8, r1
 956:	91 04       	cpc	r9, r1
 958:	79 f7       	brne	.-34     	; 0x938 <vfprintf+0x1c4>
 95a:	e1 c0       	rjmp	.+450    	; 0xb1e <vfprintf+0x3aa>
 95c:	84 36       	cpi	r24, 0x64	; 100
 95e:	11 f0       	breq	.+4      	; 0x964 <vfprintf+0x1f0>
 960:	89 36       	cpi	r24, 0x69	; 105
 962:	39 f5       	brne	.+78     	; 0x9b2 <vfprintf+0x23e>
 964:	f8 01       	movw	r30, r16
 966:	37 fe       	sbrs	r3, 7
 968:	07 c0       	rjmp	.+14     	; 0x978 <vfprintf+0x204>
 96a:	60 81       	ld	r22, Z
 96c:	71 81       	ldd	r23, Z+1	; 0x01
 96e:	82 81       	ldd	r24, Z+2	; 0x02
 970:	93 81       	ldd	r25, Z+3	; 0x03
 972:	0c 5f       	subi	r16, 0xFC	; 252
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	08 c0       	rjmp	.+16     	; 0x988 <vfprintf+0x214>
 978:	60 81       	ld	r22, Z
 97a:	71 81       	ldd	r23, Z+1	; 0x01
 97c:	07 2e       	mov	r0, r23
 97e:	00 0c       	add	r0, r0
 980:	88 0b       	sbc	r24, r24
 982:	99 0b       	sbc	r25, r25
 984:	0e 5f       	subi	r16, 0xFE	; 254
 986:	1f 4f       	sbci	r17, 0xFF	; 255
 988:	f3 2d       	mov	r31, r3
 98a:	ff 76       	andi	r31, 0x6F	; 111
 98c:	3f 2e       	mov	r3, r31
 98e:	97 ff       	sbrs	r25, 7
 990:	09 c0       	rjmp	.+18     	; 0x9a4 <vfprintf+0x230>
 992:	90 95       	com	r25
 994:	80 95       	com	r24
 996:	70 95       	com	r23
 998:	61 95       	neg	r22
 99a:	7f 4f       	sbci	r23, 0xFF	; 255
 99c:	8f 4f       	sbci	r24, 0xFF	; 255
 99e:	9f 4f       	sbci	r25, 0xFF	; 255
 9a0:	f0 68       	ori	r31, 0x80	; 128
 9a2:	3f 2e       	mov	r3, r31
 9a4:	2a e0       	ldi	r18, 0x0A	; 10
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	a3 01       	movw	r20, r6
 9aa:	33 d1       	rcall	.+614    	; 0xc12 <__ultoa_invert>
 9ac:	88 2e       	mov	r8, r24
 9ae:	86 18       	sub	r8, r6
 9b0:	44 c0       	rjmp	.+136    	; 0xa3a <vfprintf+0x2c6>
 9b2:	85 37       	cpi	r24, 0x75	; 117
 9b4:	31 f4       	brne	.+12     	; 0x9c2 <vfprintf+0x24e>
 9b6:	23 2d       	mov	r18, r3
 9b8:	2f 7e       	andi	r18, 0xEF	; 239
 9ba:	b2 2e       	mov	r11, r18
 9bc:	2a e0       	ldi	r18, 0x0A	; 10
 9be:	30 e0       	ldi	r19, 0x00	; 0
 9c0:	25 c0       	rjmp	.+74     	; 0xa0c <vfprintf+0x298>
 9c2:	93 2d       	mov	r25, r3
 9c4:	99 7f       	andi	r25, 0xF9	; 249
 9c6:	b9 2e       	mov	r11, r25
 9c8:	8f 36       	cpi	r24, 0x6F	; 111
 9ca:	c1 f0       	breq	.+48     	; 0x9fc <vfprintf+0x288>
 9cc:	18 f4       	brcc	.+6      	; 0x9d4 <vfprintf+0x260>
 9ce:	88 35       	cpi	r24, 0x58	; 88
 9d0:	79 f0       	breq	.+30     	; 0x9f0 <vfprintf+0x27c>
 9d2:	ae c0       	rjmp	.+348    	; 0xb30 <vfprintf+0x3bc>
 9d4:	80 37       	cpi	r24, 0x70	; 112
 9d6:	19 f0       	breq	.+6      	; 0x9de <vfprintf+0x26a>
 9d8:	88 37       	cpi	r24, 0x78	; 120
 9da:	21 f0       	breq	.+8      	; 0x9e4 <vfprintf+0x270>
 9dc:	a9 c0       	rjmp	.+338    	; 0xb30 <vfprintf+0x3bc>
 9de:	e9 2f       	mov	r30, r25
 9e0:	e0 61       	ori	r30, 0x10	; 16
 9e2:	be 2e       	mov	r11, r30
 9e4:	b4 fe       	sbrs	r11, 4
 9e6:	0d c0       	rjmp	.+26     	; 0xa02 <vfprintf+0x28e>
 9e8:	fb 2d       	mov	r31, r11
 9ea:	f4 60       	ori	r31, 0x04	; 4
 9ec:	bf 2e       	mov	r11, r31
 9ee:	09 c0       	rjmp	.+18     	; 0xa02 <vfprintf+0x28e>
 9f0:	34 fe       	sbrs	r3, 4
 9f2:	0a c0       	rjmp	.+20     	; 0xa08 <vfprintf+0x294>
 9f4:	29 2f       	mov	r18, r25
 9f6:	26 60       	ori	r18, 0x06	; 6
 9f8:	b2 2e       	mov	r11, r18
 9fa:	06 c0       	rjmp	.+12     	; 0xa08 <vfprintf+0x294>
 9fc:	28 e0       	ldi	r18, 0x08	; 8
 9fe:	30 e0       	ldi	r19, 0x00	; 0
 a00:	05 c0       	rjmp	.+10     	; 0xa0c <vfprintf+0x298>
 a02:	20 e1       	ldi	r18, 0x10	; 16
 a04:	30 e0       	ldi	r19, 0x00	; 0
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0x298>
 a08:	20 e1       	ldi	r18, 0x10	; 16
 a0a:	32 e0       	ldi	r19, 0x02	; 2
 a0c:	f8 01       	movw	r30, r16
 a0e:	b7 fe       	sbrs	r11, 7
 a10:	07 c0       	rjmp	.+14     	; 0xa20 <vfprintf+0x2ac>
 a12:	60 81       	ld	r22, Z
 a14:	71 81       	ldd	r23, Z+1	; 0x01
 a16:	82 81       	ldd	r24, Z+2	; 0x02
 a18:	93 81       	ldd	r25, Z+3	; 0x03
 a1a:	0c 5f       	subi	r16, 0xFC	; 252
 a1c:	1f 4f       	sbci	r17, 0xFF	; 255
 a1e:	06 c0       	rjmp	.+12     	; 0xa2c <vfprintf+0x2b8>
 a20:	60 81       	ld	r22, Z
 a22:	71 81       	ldd	r23, Z+1	; 0x01
 a24:	80 e0       	ldi	r24, 0x00	; 0
 a26:	90 e0       	ldi	r25, 0x00	; 0
 a28:	0e 5f       	subi	r16, 0xFE	; 254
 a2a:	1f 4f       	sbci	r17, 0xFF	; 255
 a2c:	a3 01       	movw	r20, r6
 a2e:	f1 d0       	rcall	.+482    	; 0xc12 <__ultoa_invert>
 a30:	88 2e       	mov	r8, r24
 a32:	86 18       	sub	r8, r6
 a34:	fb 2d       	mov	r31, r11
 a36:	ff 77       	andi	r31, 0x7F	; 127
 a38:	3f 2e       	mov	r3, r31
 a3a:	36 fe       	sbrs	r3, 6
 a3c:	0d c0       	rjmp	.+26     	; 0xa58 <vfprintf+0x2e4>
 a3e:	23 2d       	mov	r18, r3
 a40:	2e 7f       	andi	r18, 0xFE	; 254
 a42:	a2 2e       	mov	r10, r18
 a44:	89 14       	cp	r8, r9
 a46:	58 f4       	brcc	.+22     	; 0xa5e <vfprintf+0x2ea>
 a48:	34 fe       	sbrs	r3, 4
 a4a:	0b c0       	rjmp	.+22     	; 0xa62 <vfprintf+0x2ee>
 a4c:	32 fc       	sbrc	r3, 2
 a4e:	09 c0       	rjmp	.+18     	; 0xa62 <vfprintf+0x2ee>
 a50:	83 2d       	mov	r24, r3
 a52:	8e 7e       	andi	r24, 0xEE	; 238
 a54:	a8 2e       	mov	r10, r24
 a56:	05 c0       	rjmp	.+10     	; 0xa62 <vfprintf+0x2ee>
 a58:	b8 2c       	mov	r11, r8
 a5a:	a3 2c       	mov	r10, r3
 a5c:	03 c0       	rjmp	.+6      	; 0xa64 <vfprintf+0x2f0>
 a5e:	b8 2c       	mov	r11, r8
 a60:	01 c0       	rjmp	.+2      	; 0xa64 <vfprintf+0x2f0>
 a62:	b9 2c       	mov	r11, r9
 a64:	a4 fe       	sbrs	r10, 4
 a66:	0f c0       	rjmp	.+30     	; 0xa86 <vfprintf+0x312>
 a68:	fe 01       	movw	r30, r28
 a6a:	e8 0d       	add	r30, r8
 a6c:	f1 1d       	adc	r31, r1
 a6e:	80 81       	ld	r24, Z
 a70:	80 33       	cpi	r24, 0x30	; 48
 a72:	21 f4       	brne	.+8      	; 0xa7c <vfprintf+0x308>
 a74:	9a 2d       	mov	r25, r10
 a76:	99 7e       	andi	r25, 0xE9	; 233
 a78:	a9 2e       	mov	r10, r25
 a7a:	09 c0       	rjmp	.+18     	; 0xa8e <vfprintf+0x31a>
 a7c:	a2 fe       	sbrs	r10, 2
 a7e:	06 c0       	rjmp	.+12     	; 0xa8c <vfprintf+0x318>
 a80:	b3 94       	inc	r11
 a82:	b3 94       	inc	r11
 a84:	04 c0       	rjmp	.+8      	; 0xa8e <vfprintf+0x31a>
 a86:	8a 2d       	mov	r24, r10
 a88:	86 78       	andi	r24, 0x86	; 134
 a8a:	09 f0       	breq	.+2      	; 0xa8e <vfprintf+0x31a>
 a8c:	b3 94       	inc	r11
 a8e:	a3 fc       	sbrc	r10, 3
 a90:	10 c0       	rjmp	.+32     	; 0xab2 <vfprintf+0x33e>
 a92:	a0 fe       	sbrs	r10, 0
 a94:	06 c0       	rjmp	.+12     	; 0xaa2 <vfprintf+0x32e>
 a96:	b2 14       	cp	r11, r2
 a98:	80 f4       	brcc	.+32     	; 0xaba <vfprintf+0x346>
 a9a:	28 0c       	add	r2, r8
 a9c:	92 2c       	mov	r9, r2
 a9e:	9b 18       	sub	r9, r11
 aa0:	0d c0       	rjmp	.+26     	; 0xabc <vfprintf+0x348>
 aa2:	b2 14       	cp	r11, r2
 aa4:	58 f4       	brcc	.+22     	; 0xabc <vfprintf+0x348>
 aa6:	b6 01       	movw	r22, r12
 aa8:	80 e2       	ldi	r24, 0x20	; 32
 aaa:	90 e0       	ldi	r25, 0x00	; 0
 aac:	76 d0       	rcall	.+236    	; 0xb9a <fputc>
 aae:	b3 94       	inc	r11
 ab0:	f8 cf       	rjmp	.-16     	; 0xaa2 <vfprintf+0x32e>
 ab2:	b2 14       	cp	r11, r2
 ab4:	18 f4       	brcc	.+6      	; 0xabc <vfprintf+0x348>
 ab6:	2b 18       	sub	r2, r11
 ab8:	02 c0       	rjmp	.+4      	; 0xabe <vfprintf+0x34a>
 aba:	98 2c       	mov	r9, r8
 abc:	21 2c       	mov	r2, r1
 abe:	a4 fe       	sbrs	r10, 4
 ac0:	0f c0       	rjmp	.+30     	; 0xae0 <vfprintf+0x36c>
 ac2:	b6 01       	movw	r22, r12
 ac4:	80 e3       	ldi	r24, 0x30	; 48
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	68 d0       	rcall	.+208    	; 0xb9a <fputc>
 aca:	a2 fe       	sbrs	r10, 2
 acc:	16 c0       	rjmp	.+44     	; 0xafa <vfprintf+0x386>
 ace:	a1 fc       	sbrc	r10, 1
 ad0:	03 c0       	rjmp	.+6      	; 0xad8 <vfprintf+0x364>
 ad2:	88 e7       	ldi	r24, 0x78	; 120
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <vfprintf+0x368>
 ad8:	88 e5       	ldi	r24, 0x58	; 88
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	b6 01       	movw	r22, r12
 ade:	0c c0       	rjmp	.+24     	; 0xaf8 <vfprintf+0x384>
 ae0:	8a 2d       	mov	r24, r10
 ae2:	86 78       	andi	r24, 0x86	; 134
 ae4:	51 f0       	breq	.+20     	; 0xafa <vfprintf+0x386>
 ae6:	a1 fe       	sbrs	r10, 1
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <vfprintf+0x37a>
 aea:	8b e2       	ldi	r24, 0x2B	; 43
 aec:	01 c0       	rjmp	.+2      	; 0xaf0 <vfprintf+0x37c>
 aee:	80 e2       	ldi	r24, 0x20	; 32
 af0:	a7 fc       	sbrc	r10, 7
 af2:	8d e2       	ldi	r24, 0x2D	; 45
 af4:	b6 01       	movw	r22, r12
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	50 d0       	rcall	.+160    	; 0xb9a <fputc>
 afa:	89 14       	cp	r8, r9
 afc:	30 f4       	brcc	.+12     	; 0xb0a <vfprintf+0x396>
 afe:	b6 01       	movw	r22, r12
 b00:	80 e3       	ldi	r24, 0x30	; 48
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	4a d0       	rcall	.+148    	; 0xb9a <fputc>
 b06:	9a 94       	dec	r9
 b08:	f8 cf       	rjmp	.-16     	; 0xafa <vfprintf+0x386>
 b0a:	8a 94       	dec	r8
 b0c:	f3 01       	movw	r30, r6
 b0e:	e8 0d       	add	r30, r8
 b10:	f1 1d       	adc	r31, r1
 b12:	80 81       	ld	r24, Z
 b14:	b6 01       	movw	r22, r12
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	40 d0       	rcall	.+128    	; 0xb9a <fputc>
 b1a:	81 10       	cpse	r8, r1
 b1c:	f6 cf       	rjmp	.-20     	; 0xb0a <vfprintf+0x396>
 b1e:	22 20       	and	r2, r2
 b20:	09 f4       	brne	.+2      	; 0xb24 <vfprintf+0x3b0>
 b22:	4e ce       	rjmp	.-868    	; 0x7c0 <vfprintf+0x4c>
 b24:	b6 01       	movw	r22, r12
 b26:	80 e2       	ldi	r24, 0x20	; 32
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	37 d0       	rcall	.+110    	; 0xb9a <fputc>
 b2c:	2a 94       	dec	r2
 b2e:	f7 cf       	rjmp	.-18     	; 0xb1e <vfprintf+0x3aa>
 b30:	f6 01       	movw	r30, r12
 b32:	86 81       	ldd	r24, Z+6	; 0x06
 b34:	97 81       	ldd	r25, Z+7	; 0x07
 b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0x3c8>
 b38:	8f ef       	ldi	r24, 0xFF	; 255
 b3a:	9f ef       	ldi	r25, 0xFF	; 255
 b3c:	2b 96       	adiw	r28, 0x0b	; 11
 b3e:	0f b6       	in	r0, 0x3f	; 63
 b40:	f8 94       	cli
 b42:	de bf       	out	0x3e, r29	; 62
 b44:	0f be       	out	0x3f, r0	; 63
 b46:	cd bf       	out	0x3d, r28	; 61
 b48:	df 91       	pop	r29
 b4a:	cf 91       	pop	r28
 b4c:	1f 91       	pop	r17
 b4e:	0f 91       	pop	r16
 b50:	ff 90       	pop	r15
 b52:	ef 90       	pop	r14
 b54:	df 90       	pop	r13
 b56:	cf 90       	pop	r12
 b58:	bf 90       	pop	r11
 b5a:	af 90       	pop	r10
 b5c:	9f 90       	pop	r9
 b5e:	8f 90       	pop	r8
 b60:	7f 90       	pop	r7
 b62:	6f 90       	pop	r6
 b64:	5f 90       	pop	r5
 b66:	4f 90       	pop	r4
 b68:	3f 90       	pop	r3
 b6a:	2f 90       	pop	r2
 b6c:	08 95       	ret

00000b6e <strnlen_P>:
 b6e:	fc 01       	movw	r30, r24
 b70:	05 90       	lpm	r0, Z+
 b72:	61 50       	subi	r22, 0x01	; 1
 b74:	70 40       	sbci	r23, 0x00	; 0
 b76:	01 10       	cpse	r0, r1
 b78:	d8 f7       	brcc	.-10     	; 0xb70 <strnlen_P+0x2>
 b7a:	80 95       	com	r24
 b7c:	90 95       	com	r25
 b7e:	8e 0f       	add	r24, r30
 b80:	9f 1f       	adc	r25, r31
 b82:	08 95       	ret

00000b84 <strnlen>:
 b84:	fc 01       	movw	r30, r24
 b86:	61 50       	subi	r22, 0x01	; 1
 b88:	70 40       	sbci	r23, 0x00	; 0
 b8a:	01 90       	ld	r0, Z+
 b8c:	01 10       	cpse	r0, r1
 b8e:	d8 f7       	brcc	.-10     	; 0xb86 <strnlen+0x2>
 b90:	80 95       	com	r24
 b92:	90 95       	com	r25
 b94:	8e 0f       	add	r24, r30
 b96:	9f 1f       	adc	r25, r31
 b98:	08 95       	ret

00000b9a <fputc>:
 b9a:	0f 93       	push	r16
 b9c:	1f 93       	push	r17
 b9e:	cf 93       	push	r28
 ba0:	df 93       	push	r29
 ba2:	fb 01       	movw	r30, r22
 ba4:	23 81       	ldd	r18, Z+3	; 0x03
 ba6:	21 fd       	sbrc	r18, 1
 ba8:	03 c0       	rjmp	.+6      	; 0xbb0 <fputc+0x16>
 baa:	8f ef       	ldi	r24, 0xFF	; 255
 bac:	9f ef       	ldi	r25, 0xFF	; 255
 bae:	2c c0       	rjmp	.+88     	; 0xc08 <fputc+0x6e>
 bb0:	22 ff       	sbrs	r18, 2
 bb2:	16 c0       	rjmp	.+44     	; 0xbe0 <fputc+0x46>
 bb4:	46 81       	ldd	r20, Z+6	; 0x06
 bb6:	57 81       	ldd	r21, Z+7	; 0x07
 bb8:	24 81       	ldd	r18, Z+4	; 0x04
 bba:	35 81       	ldd	r19, Z+5	; 0x05
 bbc:	42 17       	cp	r20, r18
 bbe:	53 07       	cpc	r21, r19
 bc0:	44 f4       	brge	.+16     	; 0xbd2 <fputc+0x38>
 bc2:	a0 81       	ld	r26, Z
 bc4:	b1 81       	ldd	r27, Z+1	; 0x01
 bc6:	9d 01       	movw	r18, r26
 bc8:	2f 5f       	subi	r18, 0xFF	; 255
 bca:	3f 4f       	sbci	r19, 0xFF	; 255
 bcc:	31 83       	std	Z+1, r19	; 0x01
 bce:	20 83       	st	Z, r18
 bd0:	8c 93       	st	X, r24
 bd2:	26 81       	ldd	r18, Z+6	; 0x06
 bd4:	37 81       	ldd	r19, Z+7	; 0x07
 bd6:	2f 5f       	subi	r18, 0xFF	; 255
 bd8:	3f 4f       	sbci	r19, 0xFF	; 255
 bda:	37 83       	std	Z+7, r19	; 0x07
 bdc:	26 83       	std	Z+6, r18	; 0x06
 bde:	14 c0       	rjmp	.+40     	; 0xc08 <fputc+0x6e>
 be0:	8b 01       	movw	r16, r22
 be2:	ec 01       	movw	r28, r24
 be4:	fb 01       	movw	r30, r22
 be6:	00 84       	ldd	r0, Z+8	; 0x08
 be8:	f1 85       	ldd	r31, Z+9	; 0x09
 bea:	e0 2d       	mov	r30, r0
 bec:	09 95       	icall
 bee:	89 2b       	or	r24, r25
 bf0:	e1 f6       	brne	.-72     	; 0xbaa <fputc+0x10>
 bf2:	d8 01       	movw	r26, r16
 bf4:	16 96       	adiw	r26, 0x06	; 6
 bf6:	8d 91       	ld	r24, X+
 bf8:	9c 91       	ld	r25, X
 bfa:	17 97       	sbiw	r26, 0x07	; 7
 bfc:	01 96       	adiw	r24, 0x01	; 1
 bfe:	17 96       	adiw	r26, 0x07	; 7
 c00:	9c 93       	st	X, r25
 c02:	8e 93       	st	-X, r24
 c04:	16 97       	sbiw	r26, 0x06	; 6
 c06:	ce 01       	movw	r24, r28
 c08:	df 91       	pop	r29
 c0a:	cf 91       	pop	r28
 c0c:	1f 91       	pop	r17
 c0e:	0f 91       	pop	r16
 c10:	08 95       	ret

00000c12 <__ultoa_invert>:
 c12:	fa 01       	movw	r30, r20
 c14:	aa 27       	eor	r26, r26
 c16:	28 30       	cpi	r18, 0x08	; 8
 c18:	51 f1       	breq	.+84     	; 0xc6e <__ultoa_invert+0x5c>
 c1a:	20 31       	cpi	r18, 0x10	; 16
 c1c:	81 f1       	breq	.+96     	; 0xc7e <__ultoa_invert+0x6c>
 c1e:	e8 94       	clt
 c20:	6f 93       	push	r22
 c22:	6e 7f       	andi	r22, 0xFE	; 254
 c24:	6e 5f       	subi	r22, 0xFE	; 254
 c26:	7f 4f       	sbci	r23, 0xFF	; 255
 c28:	8f 4f       	sbci	r24, 0xFF	; 255
 c2a:	9f 4f       	sbci	r25, 0xFF	; 255
 c2c:	af 4f       	sbci	r26, 0xFF	; 255
 c2e:	b1 e0       	ldi	r27, 0x01	; 1
 c30:	3e d0       	rcall	.+124    	; 0xcae <__ultoa_invert+0x9c>
 c32:	b4 e0       	ldi	r27, 0x04	; 4
 c34:	3c d0       	rcall	.+120    	; 0xcae <__ultoa_invert+0x9c>
 c36:	67 0f       	add	r22, r23
 c38:	78 1f       	adc	r23, r24
 c3a:	89 1f       	adc	r24, r25
 c3c:	9a 1f       	adc	r25, r26
 c3e:	a1 1d       	adc	r26, r1
 c40:	68 0f       	add	r22, r24
 c42:	79 1f       	adc	r23, r25
 c44:	8a 1f       	adc	r24, r26
 c46:	91 1d       	adc	r25, r1
 c48:	a1 1d       	adc	r26, r1
 c4a:	6a 0f       	add	r22, r26
 c4c:	71 1d       	adc	r23, r1
 c4e:	81 1d       	adc	r24, r1
 c50:	91 1d       	adc	r25, r1
 c52:	a1 1d       	adc	r26, r1
 c54:	20 d0       	rcall	.+64     	; 0xc96 <__ultoa_invert+0x84>
 c56:	09 f4       	brne	.+2      	; 0xc5a <__ultoa_invert+0x48>
 c58:	68 94       	set
 c5a:	3f 91       	pop	r19
 c5c:	2a e0       	ldi	r18, 0x0A	; 10
 c5e:	26 9f       	mul	r18, r22
 c60:	11 24       	eor	r1, r1
 c62:	30 19       	sub	r19, r0
 c64:	30 5d       	subi	r19, 0xD0	; 208
 c66:	31 93       	st	Z+, r19
 c68:	de f6       	brtc	.-74     	; 0xc20 <__ultoa_invert+0xe>
 c6a:	cf 01       	movw	r24, r30
 c6c:	08 95       	ret
 c6e:	46 2f       	mov	r20, r22
 c70:	47 70       	andi	r20, 0x07	; 7
 c72:	40 5d       	subi	r20, 0xD0	; 208
 c74:	41 93       	st	Z+, r20
 c76:	b3 e0       	ldi	r27, 0x03	; 3
 c78:	0f d0       	rcall	.+30     	; 0xc98 <__ultoa_invert+0x86>
 c7a:	c9 f7       	brne	.-14     	; 0xc6e <__ultoa_invert+0x5c>
 c7c:	f6 cf       	rjmp	.-20     	; 0xc6a <__ultoa_invert+0x58>
 c7e:	46 2f       	mov	r20, r22
 c80:	4f 70       	andi	r20, 0x0F	; 15
 c82:	40 5d       	subi	r20, 0xD0	; 208
 c84:	4a 33       	cpi	r20, 0x3A	; 58
 c86:	18 f0       	brcs	.+6      	; 0xc8e <__ultoa_invert+0x7c>
 c88:	49 5d       	subi	r20, 0xD9	; 217
 c8a:	31 fd       	sbrc	r19, 1
 c8c:	40 52       	subi	r20, 0x20	; 32
 c8e:	41 93       	st	Z+, r20
 c90:	02 d0       	rcall	.+4      	; 0xc96 <__ultoa_invert+0x84>
 c92:	a9 f7       	brne	.-22     	; 0xc7e <__ultoa_invert+0x6c>
 c94:	ea cf       	rjmp	.-44     	; 0xc6a <__ultoa_invert+0x58>
 c96:	b4 e0       	ldi	r27, 0x04	; 4
 c98:	a6 95       	lsr	r26
 c9a:	97 95       	ror	r25
 c9c:	87 95       	ror	r24
 c9e:	77 95       	ror	r23
 ca0:	67 95       	ror	r22
 ca2:	ba 95       	dec	r27
 ca4:	c9 f7       	brne	.-14     	; 0xc98 <__ultoa_invert+0x86>
 ca6:	00 97       	sbiw	r24, 0x00	; 0
 ca8:	61 05       	cpc	r22, r1
 caa:	71 05       	cpc	r23, r1
 cac:	08 95       	ret
 cae:	9b 01       	movw	r18, r22
 cb0:	ac 01       	movw	r20, r24
 cb2:	0a 2e       	mov	r0, r26
 cb4:	06 94       	lsr	r0
 cb6:	57 95       	ror	r21
 cb8:	47 95       	ror	r20
 cba:	37 95       	ror	r19
 cbc:	27 95       	ror	r18
 cbe:	ba 95       	dec	r27
 cc0:	c9 f7       	brne	.-14     	; 0xcb4 <__ultoa_invert+0xa2>
 cc2:	62 0f       	add	r22, r18
 cc4:	73 1f       	adc	r23, r19
 cc6:	84 1f       	adc	r24, r20
 cc8:	95 1f       	adc	r25, r21
 cca:	a0 1d       	adc	r26, r0
 ccc:	08 95       	ret

00000cce <_exit>:
 cce:	f8 94       	cli

00000cd0 <__stop_program>:
 cd0:	ff cf       	rjmp	.-2      	; 0xcd0 <__stop_program>
